<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>如何实现一个优先级队列</title>
      <link href="/2019/11/23/%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E4%BC%98%E5%85%88%E7%BA%A7%E9%98%9F%E5%88%97/"/>
      <url>/2019/11/23/%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E4%BC%98%E5%85%88%E7%BA%A7%E9%98%9F%E5%88%97/</url>
      
        <content type="html"><![CDATA[<h1 id="如何实现一个优先级队列"><a href="#如何实现一个优先级队列" class="headerlink" title="如何实现一个优先级队列"></a>如何实现一个优先级队列</h1><h2 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h2><blockquote><p>heapq</p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> heapq</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PriorityQueue</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self._queue = []</span><br><span class="line">        self._index = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">push</span><span class="params">(self, item, priority)</span>:</span></span><br><span class="line">        heapq.heappush(self._queue,(-priority, self._index, item))</span><br><span class="line">        self._index += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">pop</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> heapq.heappop(self._queue)[<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Item</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'Item(&#123;!r&#125;)'</span>.format(self.name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    q = PriorityQueue()</span><br><span class="line">    q.push(Item(<span class="string">'foo'</span>), <span class="number">1</span>)</span><br><span class="line">    q.push(Item(<span class="string">'bar'</span>), <span class="number">5</span>)</span><br><span class="line">    q.push(Item(<span class="string">'spam'</span>), <span class="number">4</span>)</span><br><span class="line">    q.push(Item(<span class="string">'grok'</span>), <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    print(q.pop())</span><br><span class="line">    print(q.pop())</span><br><span class="line">    print(q.pop())</span><br><span class="line">    print(q.pop())</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><blockquote><p>第一个 <code>pop()</code>操作返回优先级最高的元素。 另外注意到如果两个有 着相同优先级的元素( <code>foo</code> 和 <code>grok</code> )，<code>pop</code>操作按照它们被插入到队列的顺序返回的</p></blockquote><h2 id="Pycharm追踪"><a href="#Pycharm追踪" class="headerlink" title="Pycharm追踪"></a>Pycharm追踪</h2><h3 id="加入断点"><a href="#加入断点" class="headerlink" title="加入断点"></a>加入断点</h3><p><img src="加入断点.png" alt="加入断点"></p><h3 id="push操作"><a href="#push操作" class="headerlink" title="push操作"></a>push操作</h3><p><img src="加入4个元组.png" alt="加入4个元组"></p><h3 id="pop操作"><a href="#pop操作" class="headerlink" title="pop操作"></a>pop操作</h3><p><img src="执行pop操作.png" alt="执行pop操作"></p><p><img src="最先优先级别bar出队列.png" alt="最先优先级别bar出队列"></p><h3 id="执行结果"><a href="#执行结果" class="headerlink" title="执行结果"></a>执行结果</h3><p><img src="执行结果.png" alt="执行结果"></p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><ol><li>函数 <code>heapq.heappush()</code> 和 <code>heapq.heappop()</code> 分别在队列 <code>_queue</code> 上插入和删除第一个元素</li><li><code>heappop()</code>总是返回最小的元素，这是保证队列pop操作返回正确元素的关键</li><li><code>push</code>和<code>pop</code>的时间复杂度为<code>O（N）</code>,所以就算N很大，运行速度也很快</li><li>（-priority, index, item），优先级为负数的原因就是使得元素按照优先级从高到低排序</li><li>index变量的作用是保证同等优先级元素的正确排序，其实就是插入顺序</li></ol><hr><p>注：<strong>本文使用的实例代码，参考自《python cookbook 第三版》</strong></p>]]></content>
      
      
      <categories>
          
          <category> python学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> python cookbook </tag>
            
            <tag> 队列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何从一个集合中获得最大或最小的N个元素列表</title>
      <link href="/2019/11/22/%E5%A6%82%E4%BD%95%E4%BB%8E%E4%B8%80%E4%B8%AA%E9%9B%86%E5%90%88%E4%B8%AD%E8%8E%B7%E5%BE%97%E6%9C%80%E5%A4%A7%E6%88%96%E6%9C%80%E5%B0%8F%E7%9A%84N%E4%B8%AA%E5%85%83%E7%B4%A0%E5%88%97%E8%A1%A8/"/>
      <url>/2019/11/22/%E5%A6%82%E4%BD%95%E4%BB%8E%E4%B8%80%E4%B8%AA%E9%9B%86%E5%90%88%E4%B8%AD%E8%8E%B7%E5%BE%97%E6%9C%80%E5%A4%A7%E6%88%96%E6%9C%80%E5%B0%8F%E7%9A%84N%E4%B8%AA%E5%85%83%E7%B4%A0%E5%88%97%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="如何从一个集合中获得最大或最小的N个元素列表"><a href="#如何从一个集合中获得最大或最小的N个元素列表" class="headerlink" title="如何从一个集合中获得最大或最小的N个元素列表?"></a>如何从一个集合中获得最大或最小的N个元素列表?</h1><h2 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h2><p><code>heapq</code>模块有两个函数： <code>nlargest()</code> 和 <code>nsmallest()</code> 可以完美解决这个问题</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> heapq</span><br><span class="line"></span><br><span class="line">nums = [<span class="number">1</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">23</span>, <span class="number">7</span>, <span class="number">-4</span>, <span class="number">18</span>, <span class="number">23</span>, <span class="number">42</span>, <span class="number">37</span>, <span class="number">2</span>]</span><br><span class="line">print(nums)</span><br><span class="line">print(max(nums))</span><br><span class="line">print(min(nums))</span><br><span class="line">print(heapq.nlargest(<span class="number">3</span>, nums))</span><br><span class="line">print(heapq.nsmallest(<span class="number">3</span>, nums))</span><br><span class="line">heapq.heapify(nums)</span><br><span class="line">print(nums)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"pop:%d"</span> % heapq.heappop(nums))</span><br><span class="line">print(nums)</span><br><span class="line">print(<span class="string">"pop:%d"</span> % heapq.heappop(nums))</span><br><span class="line">print(nums)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> heapq</span><br><span class="line">portfolio = [</span><br><span class="line">    &#123;<span class="string">'name'</span>: <span class="string">'IBM'</span>, <span class="string">'shares'</span>: <span class="number">100</span>, <span class="string">'price'</span>: <span class="number">91.1</span>&#125;,</span><br><span class="line">    &#123;<span class="string">'name'</span>: <span class="string">'AAPL'</span>, <span class="string">'shares'</span>: <span class="number">50</span>, <span class="string">'price'</span>: <span class="number">543.22</span>&#125;,</span><br><span class="line">    &#123;<span class="string">'name'</span>: <span class="string">'FB'</span>, <span class="string">'shares'</span>: <span class="number">200</span>, <span class="string">'price'</span>: <span class="number">21.09</span>&#125;,</span><br><span class="line">    &#123;<span class="string">'name'</span>: <span class="string">'HPQ'</span>, <span class="string">'shares'</span>: <span class="number">35</span>, <span class="string">'price'</span>: <span class="number">31.75</span>&#125;,</span><br><span class="line">    &#123;<span class="string">'name'</span>: <span class="string">'YHOO'</span>, <span class="string">'shares'</span>: <span class="number">45</span>, <span class="string">'price'</span>: <span class="number">16.35</span>&#125;,</span><br><span class="line">    &#123;<span class="string">'name'</span>: <span class="string">'ACME'</span>, <span class="string">'shares'</span>: <span class="number">75</span>, <span class="string">'price'</span>: <span class="number">115.65</span>&#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">cheap = heapq.nsmallest(<span class="number">3</span>, portfolio, key=<span class="keyword">lambda</span> s: s[<span class="string">'price'</span>])</span><br><span class="line">expensive = heapq.nlargest(<span class="number">3</span>, portfolio, key=<span class="keyword">lambda</span> s: s[<span class="string">'price'</span>])</span><br><span class="line"></span><br><span class="line">print(cheap)</span><br><span class="line">print(expensive)</span><br></pre></td></tr></table></figure><h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\liuqi\AppData\Local\Programs\Python\Python37\python.exe F:/python/CODE/Python_cookbook.py</span><br><span class="line">[1, 8, 2, 23, 7, -4, 18, 23, 42, 37, 2]</span><br><span class="line">42</span><br><span class="line">-4</span><br><span class="line">[42, 37, 23]</span><br><span class="line">[-4, 1, 2]</span><br><span class="line">[-4, 2, 1, 23, 7, 2, 18, 23, 42, 37, 8]</span><br><span class="line">pop:-4</span><br><span class="line">[1, 2, 2, 23, 7, 8, 18, 23, 42, 37]</span><br><span class="line">pop:1</span><br><span class="line">[2, 2, 8, 23, 7, 37, 18, 23, 42]</span><br><span class="line">[&#123;<span class="string">'name'</span>: <span class="string">'YHOO'</span>, <span class="string">'shares'</span>: 45, <span class="string">'price'</span>: 16.35&#125;, &#123;<span class="string">'name'</span>: <span class="string">'FB'</span>, <span class="string">'shares'</span>: 200, <span class="string">'price'</span>: 21.09&#125;, &#123;<span class="string">'name'</span>: <span class="string">'HPQ'</span>, <span class="string">'shares'</span>: 35, <span class="string">'price'</span>: 31.75&#125;]</span><br><span class="line">[&#123;<span class="string">'name'</span>: <span class="string">'AAPL'</span>, <span class="string">'shares'</span>: 50, <span class="string">'price'</span>: 543.22&#125;, &#123;<span class="string">'name'</span>: <span class="string">'ACME'</span>, <span class="string">'shares'</span>: 75, <span class="string">'price'</span>: 115.65&#125;, &#123;<span class="string">'name'</span>: <span class="string">'IBM'</span>, <span class="string">'shares'</span>: 100, <span class="string">'price'</span>: 91.1&#125;]</span><br></pre></td></tr></table></figure><h2 id="讨论"><a href="#讨论" class="headerlink" title="讨论"></a>讨论</h2><p>当要查找的元素个数相对比较小的时候，函数 <code>nlargest()</code>和 <code>nsmallest()</code>是很合适的。 如果你仅仅想查找唯一的最小或最大(N=1)的元素的话，那么使用min()和max()函数会更 快些。 类似的，如果N的大小和集合大小接近的时候，通常先排序这个集合然后再使用切 片操作会更快点 ( sorted(items)[:N] 或者是 sorted(items)[-N:] )。 需要在正确场合使用函数<code>nlargest()</code>和 <code>nsmallest()</code>才能发挥它们的优势 (如果N快接近集合大小了，那么使用排 序操作会更好些)。 </p><hr><p>注：<strong>本文使用的实例代码，参考自《python cookbook 第三版》</strong></p>]]></content>
      
      
      <categories>
          
          <category> python学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> python cookbook </tag>
            
            <tag> heapq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>保留最后N个元素-collections.deque</title>
      <link href="/2019/11/22/%E4%BF%9D%E7%95%99%E6%9C%80%E5%90%8EN%E4%B8%AA%E5%85%83%E7%B4%A0-collections-deque/"/>
      <url>/2019/11/22/%E4%BF%9D%E7%95%99%E6%9C%80%E5%90%8EN%E4%B8%AA%E5%85%83%E7%B4%A0-collections-deque/</url>
      
        <content type="html"><![CDATA[<h1 id="保留最后N个元素"><a href="#保留最后N个元素" class="headerlink" title="保留最后N个元素"></a>保留最后N个元素</h1><h2 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h2><blockquote><p>from collections import deque</p></blockquote><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p>collections 是 python 内建的一个集合模块，里面封装了许多集合类，其中队列相关的集合只有一个：deque。 deque 是双边队列（double-ended queue），具有队列和栈的性质，在 list 的基础上增加了移动、旋转和增删等</p><h2 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h2><blockquote><p>d = collections.deque()</p></blockquote><table><thead><tr><th style="text-align:center">函数</th><th>功能简介</th></tr></thead><tbody><tr><td style="text-align:center">d.append(‘a’)</td><td>在最右边添加一个元素，此时 d=deque(‘a’)</td></tr><tr><td style="text-align:center">d.appendleft(‘b’)</td><td>在最左边添加一个元素，此时 d=deque([‘b’, ‘a’])</td></tr><tr><td style="text-align:center">d.extend([‘c’,’d’])</td><td>在最右边添加所有元素，此时 d=deque([‘b’, ‘a’, ‘c’, ‘d’])</td></tr><tr><td style="text-align:center">d.extendleft([‘e’,’f’])</td><td>在最左边添加所有元素，此时 d=deque([‘f’, ‘e’, ‘b’, ‘a’, ‘c’, ‘d’])</td></tr><tr><td style="text-align:center">d.pop()</td><td>将最右边的元素取出，返回 ‘d’，此时 d=deque([‘f’, ‘e’, ‘b’, ‘a’, ‘c’])</td></tr><tr><td style="text-align:center">d.popleft()</td><td>将最左边的元素取出，返回 ‘f’，此时 d=deque([‘e’, ‘b’, ‘a’, ‘c’])</td></tr><tr><td style="text-align:center">d.rotate(-2)</td><td>向左旋转两个位置（正数则向右旋转），此时 d=deque([‘a’, ‘c’, ‘e’, ‘b’])</td></tr><tr><td style="text-align:center">d.count(‘a’)</td><td>队列中’a’的个数，返回 1</td></tr><tr><td style="text-align:center">d.remove(‘c’)</td><td>从队列中将’c’删除，此时 d=deque([‘a’, ‘e’, ‘b’])</td></tr><tr><td style="text-align:center">d.reverse()</td><td>将队列倒序，此时 d=deque([‘b’, ‘e’, ‘a’])</td></tr></tbody></table><hr><p><strong>在迭代操作或者其他操作的时候，怎样只保留最后有限几个元素的历史记录？</strong></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下方代码是输出 包含“liuqi”所在行的前五行记录</span></span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> deque</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search</span><span class="params">(lines, pattern, history=<span class="number">5</span>)</span>:</span></span><br><span class="line">    previous_lines = deque(maxlen=history)</span><br><span class="line">    <span class="keyword">for</span> li <span class="keyword">in</span> lines:</span><br><span class="line">        <span class="keyword">if</span> pattern <span class="keyword">in</span> li:</span><br><span class="line">            <span class="keyword">yield</span> li, previous_lines</span><br><span class="line">        previous_lines.append(li)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'logger.conf'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        <span class="keyword">for</span> line, prelines <span class="keyword">in</span> search(fp, <span class="string">'liuqi'</span>, <span class="number">5</span>):</span><br><span class="line">            <span class="keyword">for</span> pline <span class="keyword">in</span> prelines:</span><br><span class="line">                print(pline, end=<span class="string">''</span>)</span><br><span class="line">            print(line,end=<span class="string">''</span>)</span><br><span class="line">            print(<span class="string">'-'</span>*<span class="number">20</span>)</span><br></pre></td></tr></table></figure><blockquote><p>使用 deque(maxlen=N) 构造函数会新建一个固定大小的队列。当新的元素加入并且这个队列已满的时候， 最老的元素会自动被移除掉</p></blockquote><h2 id="Pycharm-debug流程"><a href="#Pycharm-debug流程" class="headerlink" title="Pycharm debug流程"></a>Pycharm debug流程</h2><h3 id="加入断点"><a href="#加入断点" class="headerlink" title="加入断点"></a>加入断点</h3><p><img src="加入断点.png" alt="加入断点"></p><h3 id="logger-conf"><a href="#logger-conf" class="headerlink" title="logger.conf"></a>logger.conf</h3><p><img src="logger conf.png" alt="要搜索的文件"></p><h3 id="search流程"><a href="#search流程" class="headerlink" title="search流程"></a>search流程</h3><p><img src="search流程.png" alt="search流程"></p><h3 id="search返回生成器"><a href="#search返回生成器" class="headerlink" title="search返回生成器"></a>search返回生成器</h3><p><img src="search返回生成器.png" alt="search返回生成器"></p><h3 id="终端效果"><a href="#终端效果" class="headerlink" title="终端效果"></a>终端效果</h3><p><img src="打印的数据.png" alt="终端效果"></p><h3 id="一个生成器完成后"><a href="#一个生成器完成后" class="headerlink" title="一个生成器完成后"></a>一个生成器完成后</h3><p><img src="一个生成器完成后返回到原来的地方.png" alt="一个生成器完成后返回到原来的地方"></p><p>这边我只显示了搜索到一次‘liuqi’时的效果</p><p>注：<strong>本文使用的实例代码，参考自《python cookbook 第三版》</strong></p>]]></content>
      
      
      <categories>
          
          <category> python学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> deque </tag>
            
            <tag> python cookbook </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>项目-飞机大战</title>
      <link href="/2019/11/17/%E9%A1%B9%E7%9B%AE-%E9%A3%9E%E6%9C%BA%E5%A4%A7%E6%88%98/"/>
      <url>/2019/11/17/%E9%A1%B9%E7%9B%AE-%E9%A3%9E%E6%9C%BA%E5%A4%A7%E6%88%98/</url>
      
        <content type="html"><![CDATA[<h1 id="项目-飞机大战"><a href="#项目-飞机大战" class="headerlink" title="项目-飞机大战"></a>项目-飞机大战</h1><h2 id="使用的模块-pygame"><a href="#使用的模块-pygame" class="headerlink" title="使用的模块-pygame"></a>使用的模块-pygame</h2><ul><li><code>pygame</code> 就是一个 Python 模块，专为电子游戏设计</li><li>官方网站：<a href="https://www.pygame.org/" target="_blank" rel="noopener">https://www.pygame.org/</a><ul><li><strong>提示</strong>：要学习第三方模块，通常最好的参考资料就在官方网站</li></ul></li></ul><table><thead><tr><th>网站栏目</th><th>内容</th></tr></thead><tbody><tr><td><code>GettingStarted</code></td><td>在各平台安装模块的说明</td></tr><tr><td><code>Docs</code></td><td><code>pygame</code> 模块所有 <strong>类</strong> 和 <strong>子类</strong> 的参考手册</td></tr></tbody></table><h3 id="安装-pygame"><a href="#安装-pygame" class="headerlink" title="安装 pygame"></a>安装 pygame</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pip3 install pygame</span><br></pre></td></tr></table></figure><h3 id="验证安装"><a href="#验证安装" class="headerlink" title="验证安装"></a>验证安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python3 -m pygame.examples.aliens</span><br></pre></td></tr></table></figure><h2 id="pygame的基本应用"><a href="#pygame的基本应用" class="headerlink" title="pygame的基本应用"></a>pygame的基本应用</h2><h3 id="初始化和退出"><a href="#初始化和退出" class="headerlink" title="初始化和退出"></a>初始化和退出</h3><ul><li>要使用 <code>pygame</code> 提供的所有功能之前，需要调用 <code>init</code> 方法</li><li>在游戏结束前需要调用一下 <code>quit</code> 方法 </li></ul><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td><code>pygame.init()</code></td><td>导入并初始化所有 <code>pygame</code> 模块，使用其他模块之前，必须先调用 <code>init</code> 方法</td></tr><tr><td><code>pygame.quit()</code></td><td>卸载所有 <code>pygame</code> 模块，在游戏结束之前调用！</td></tr></tbody></table><h3 id="坐标系"><a href="#坐标系" class="headerlink" title="坐标系"></a>坐标系</h3><ul><li><strong>原点</strong> 在 <strong>左上角</strong> <code>(0, 0)</code></li><li><strong>x 轴</strong> 水平方向向 <strong>右</strong>，逐渐增加</li><li><strong>y 轴</strong> 垂直方向向 <strong>下</strong>，逐渐增加</li></ul><p><img src="002_游戏窗口和坐标系.png" alt="002_游戏窗口和坐标系"></p><ul><li>在游戏中，<strong>所有可见的元素</strong> 都是以 <strong>矩形区域</strong> 来描述位置的<ul><li>要描述一个矩形区域有四个要素：<code>(x, y) (width, height)</code></li></ul></li><li><code>pygame</code> 专门提供了一个类 <code>pygame.Rect</code> 用于描述 <strong>矩形区域</strong></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Rect(x, y, width, height) -&gt; Rect</span><br></pre></td></tr></table></figure><p><img src="003_pygame.Rect.png" alt="pygame.Rect"></p><h3 id="创建游戏的主窗口"><a href="#创建游戏的主窗口" class="headerlink" title="创建游戏的主窗口"></a>创建游戏的主窗口</h3><ul><li><code>pygame</code> 专门提供了一个 <strong>模块</strong> <code>pygame.display</code> 用于创建、管理 <strong>游戏窗口</strong></li></ul><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td><code>pygame.display.set_mode()</code></td><td>初始化游戏显示窗口</td></tr><tr><td><code>pygame.display.update()</code></td><td>刷新屏幕内容显示，稍后使用</td></tr></tbody></table><p><strong><code>set_mode</code> 方法</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set_mode(resolution=(0,0), flags=0, depth=0) -&gt; Surface</span><br></pre></td></tr></table></figure><ul><li><strong>作用</strong> —— 创建游戏显示窗口</li><li><strong>参数</strong><ul><li><code>resolution</code> 指定屏幕的 <code>宽</code> 和 <code>高</code>，默认创建的窗口大小和屏幕大小一致</li><li><code>flags</code> 参数指定屏幕的附加选项，例如是否全屏等等，默认不需要传递</li><li><code>depth</code> 参数表示颜色的位数，默认自动匹配</li></ul></li><li><strong>返回值</strong><ul><li><strong>暂时</strong> 可以理解为 <strong>游戏的屏幕</strong>，<strong>游戏的元素</strong> 都需要被绘制到 <strong>游戏的屏幕</strong> 上</li></ul></li><li><strong>注意</strong>：必须使用变量记录 <code>set_mode</code> 方法的返回结果！因为：后续所有的图像绘制都基于这个返回结果</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建游戏主窗口</span></span><br><span class="line">screen = pygame.display.set_mode((<span class="number">480</span>, <span class="number">700</span>))</span><br></pre></td></tr></table></figure><h3 id="图像的绘制"><a href="#图像的绘制" class="headerlink" title="图像的绘制"></a>图像的绘制</h3><ul><li>在游戏中，能够看到的 <strong>游戏元素</strong> 大多都是 <strong>图像</strong><ul><li><strong>图像文件</strong> 初始是保存在磁盘上的，如果需要使用，<strong>第一步</strong> 就需要 <strong>被加载到内存</strong></li></ul></li><li>要在屏幕上 <strong>看到某一个图像的内容</strong>，需要按照三个步骤：<ol><li>使用 <code>pygame.image.load()</code> <strong>加载图像的数据</strong></li><li>使用 <strong>游戏屏幕</strong> 对象，调用 <code>blit</code> 方法 将图像绘制到指定位置</li><li>调用 <code>pygame.display.update()</code> 方法更新整个屏幕的显示</li></ol></li></ul><p><img src="004_加载和显示图像.png" alt="加载和显示图像"></p><table><thead><tr><th style="text-align:left">函数</th><th>功能</th></tr></thead><tbody><tr><td style="text-align:left">bg = pygame.image.load()</td><td>加载图片</td></tr><tr><td style="text-align:left">screen.blit(bg,(0,0))</td><td>从(0,0)开始绘制图片</td></tr><tr><td style="text-align:left">pygame.display.update()</td><td>屏幕刷新显示图片</td></tr></tbody></table><h3 id="时钟"><a href="#时钟" class="headerlink" title="时钟"></a>时钟</h3><p>动画的效果其实就是图像按照一定的帧率移动导致的，所以需要时钟来进行控制</p><ul><li>pygame<code>专门提供了一个类</code>pygame.time.Clock` 可以非常方便的设置屏幕绘制速度 —— <strong>刷新帧率</strong></li><li>要使用 <strong>时钟对象</strong> 需要两步：<ul><li>1）在 <strong>游戏初始化</strong> 创建一个 <strong>时钟对象</strong></li><li>2）在 <strong>游戏循环</strong> 中让时钟对象调用 <code>tick(帧率)</code> 方法 </li></ul></li><li><code>tick</code> 方法会根据 <strong>上次被调用的时间</strong>，自动设置 <strong>游戏循环</strong> 中的延时</li></ul><h3 id="事件监听"><a href="#事件监听" class="headerlink" title="事件监听"></a>事件监听</h3><h4 id="事件-event"><a href="#事件-event" class="headerlink" title="事件 event"></a>事件 <code>event</code></h4><ul><li>就是游戏启动后，<strong>用户针对游戏所做的操作</strong></li><li>例如：<strong>点击关闭按钮</strong>，<strong>点击鼠标</strong>，<strong>按下键盘</strong>…</li></ul><h4 id="监听"><a href="#监听" class="headerlink" title="监听"></a>监听</h4><ul><li>在 <strong>游戏循环</strong> 中，判断用户 <strong>具体的操作</strong></li></ul><blockquote><p>只有 <strong>捕获</strong> 到用户具体的操作，才能有针对性的做出响应</p></blockquote><h4 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h4><ul><li><code>pygame</code> 中通过 <code>pygame.event.get()</code> 可以获得 <strong>用户当前所做动作</strong> 的 <strong>事件列表</strong><ul><li>用户可以同一时间做很多事情</li></ul></li></ul><h3 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h3><p>因为敌机的出现是随机的，所以我们需要一个定时器每隔一段时间就自动出现一架飞机</p><ul><li>在 <code>pygame</code> 中可以使用 <code>pygame.time.set_timer()</code> 来添加 <strong>定时器</strong></li><li>所谓 <strong>定时器</strong>，就是 <strong>每隔一段时间</strong>，去 <strong>执行一些动作</strong></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set_timer(eventid, milliseconds) -&gt; None</span><br></pre></td></tr></table></figure><ul><li><code>set_timer</code> 可以创建一个 <strong>事件</strong></li><li>可以在 <strong>游戏循环</strong> 的 <strong>事件监听</strong> 方法中捕获到该事件</li><li>第 1 个参数 <strong>事件代号</strong> 需要基于常量 <code>pygame.USEREVENT</code> 来指定<ul><li><code>USEREVENT</code> 是一个整数，再增加的事件可以使用 <code>USEREVENT + 1</code> 指定，依次类推…</li></ul></li><li>第 2 个参数是 <strong>事件触发</strong> 间隔的 <strong>毫秒值</strong></li></ul><p><strong>定时器事件的监听</strong></p><ul><li>通过 <code>pygame.event.get()</code> 可以获取当前时刻所有的 <strong>事件列表</strong></li><li><strong>遍历列表</strong> 并且判断 <code>event.type</code> 是否等于 <code>eventid</code>，如果相等，表示 <strong>定时器事件</strong> 发生</li></ul><h3 id="精灵和精灵组"><a href="#精灵和精灵组" class="headerlink" title="精灵和精灵组"></a>精灵和精灵组</h3><p>为了简化开发步骤，<code>pygame</code> 提供了两个类</p><ul><li><code>pygame.sprite.Sprite</code> —— 存储 <strong>图像数据 image</strong> 和 <strong>位置 rect</strong> 的 <strong>对象</strong></li><li><code>pygame.sprite.Group</code></li></ul><p><img src="006_pygame.Sprite.png" alt="pygame.Sprite.png"></p><h4 id="精灵"><a href="#精灵" class="headerlink" title="精灵"></a>精灵</h4><ul><li>在游戏开发中，通常把 <strong>显示图像的对象</strong> 叫做精灵 <code>Sprite</code></li><li><strong>精灵</strong> 需要 有 <strong>两个重要的属性</strong><ul><li><code>image</code> 要显示的图像</li><li><code>rect</code> 图像要显示在屏幕的位置</li></ul></li><li>默认的 <code>update()</code> 方法什么事情也没做<ul><li>子类可以重写此方法，在每次刷新屏幕时，更新精灵位置</li></ul></li><li><strong>注意</strong>：<code>pygame.sprite.Sprite</code> 并没有提供 <code>image</code> 和 <code>rect</code> 两个属性<ul><li>需要程序员从 <code>pygame.sprite.Sprite</code> 派生子类</li><li>并在 <strong>子类</strong> 的 <strong>初始化方法</strong> 中，设置 <code>image</code> 和 <code>rect</code> 属性</li></ul></li></ul><h4 id="精灵组"><a href="#精灵组" class="headerlink" title="精灵组"></a>精灵组</h4><ul><li>一个 <strong>精灵组</strong> 可以包含多个 <strong>精灵</strong> 对象</li><li>调用 <strong>精灵组</strong> 对象的 <code>update()</code> 方法<ul><li>可以 <strong>自动</strong> 调用 <strong>组内每一个精灵</strong> 的 <code>update()</code> 方法</li></ul></li><li>调用 <strong>精灵组</strong> 对象的 <code>draw(屏幕对象)</code> 方法<ul><li>可以将 <strong>组内每一个精灵</strong> 的 <code>image</code> 绘制在 <code>rect</code> 位置</li></ul></li></ul><h2 id="游戏框架"><a href="#游戏框架" class="headerlink" title="游戏框架"></a>游戏框架</h2><h3 id="主游戏类PlaneGame"><a href="#主游戏类PlaneGame" class="headerlink" title="主游戏类PlaneGame"></a>主游戏类PlaneGame</h3><p><img src="009_游戏主程序.png" alt="游戏主程序"></p><ul><li><strong>游戏初始化</strong> ——  <code>__init__()</code> 会调用以下方法： </li></ul><table><thead><tr><th>方法</th><th>职责</th></tr></thead><tbody><tr><td><code>__create_sprites(self)</code></td><td>创建所有精灵和精灵组</td></tr></tbody></table><ul><li><strong>游戏循环</strong> —— <code>start_game()</code> 会调用以下方法：</li></ul><table><thead><tr><th>方法</th><th>职责</th></tr></thead><tbody><tr><td><code>__event_handler(self)</code></td><td>事件监听</td></tr><tr><td><code>__check_collide(self)</code></td><td>碰撞检测 —— 子弹销毁敌机、敌机撞毁英雄</td></tr><tr><td><code>__update_sprites(self)</code></td><td>精灵组更新和绘制</td></tr><tr><td><code>__game_over()</code></td><td>游戏结束</td></tr></tbody></table><h3 id="精灵组的创建"><a href="#精灵组的创建" class="headerlink" title="精灵组的创建"></a>精灵组的创建</h3><p><img src="010_精灵组确定.png" alt="精灵组确定"></p><ul><li>创建精灵组方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__create_sprites</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="string">"""创建精灵组"""</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 背景组</span></span><br><span class="line">    self.back_group = pygame.sprite.Group()</span><br><span class="line">    <span class="comment"># 敌机组</span></span><br><span class="line">    self.enemy_group = pygame.sprite.Group()</span><br><span class="line">    <span class="comment"># 英雄组</span></span><br><span class="line">    self.hero_group = pygame.sprite.Group()</span><br></pre></td></tr></table></figure><ul><li>更新精灵组方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__update_sprites</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="string">"""更新精灵组"""</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> group <span class="keyword">in</span> [self.back_group, self.enemy_group, self.hero_group]:</span><br><span class="line">    </span><br><span class="line">        group.update()</span><br><span class="line">        group.draw(self.screen)</span><br></pre></td></tr></table></figure><h2 id="背景图片"><a href="#背景图片" class="headerlink" title="背景图片"></a>背景图片</h2><p><img src="013_背景图片交替滚动.png" alt="背景图片交替滚动"></p><ol><li>创建两张背景图像精灵<ul><li>第 <code>1</code> 张 <strong>完全和屏幕重合</strong></li><li>第 <code>2</code> 张在 <strong>屏幕的正上方</strong></li></ul></li><li>两张图像 <strong>一起向下方运动</strong><ul><li><code>self.rect.y += self.speed</code></li></ul></li><li>当 <strong>任意背景精灵</strong> 的 <code>rect.y &gt;= 屏幕的高度</code> 说明已经 <strong>移动到屏幕下方</strong></li><li>将 <strong>移动到屏幕下方的这张图像</strong> 设置到 <strong>屏幕的正上方</strong><ul><li><code>rect.y = -rect.height</code>  </li></ul></li></ol><h2 id="敌机精灵组"><a href="#敌机精灵组" class="headerlink" title="敌机精灵组"></a>敌机精灵组</h2><p><img src="014_派生Enemy子类.png" alt="派生Enemy子类"></p><ul><li><strong>初始化方法</strong><ul><li>指定 <strong>敌机图片</strong></li><li><strong>随机</strong> 敌机的 <strong>初始位置</strong> 和 <strong>初始速度</strong></li></ul></li><li>重写 <strong>update()</strong> 方法<ul><li>判断 <strong>是否飞出屏幕</strong>，如果是，从 <strong>精灵组</strong> 删除</li></ul></li></ul><h3 id="需要实现的功能"><a href="#需要实现的功能" class="headerlink" title="需要实现的功能"></a>需要实现的功能</h3><ul><li>新建 <code>Enemy</code> 继承自 <code>GameSprite</code></li><li>重写 <strong>初始化方法</strong>，直接指定 <strong>图片名称</strong></li><li><strong>随机速度</strong> 和 <strong>随机位置</strong> 的指定由random模块来随机化</li><li>重写 <code>update</code> 方法，判断是否飞出屏幕</li></ul><h3 id="创建敌机精灵组"><a href="#创建敌机精灵组" class="headerlink" title="创建敌机精灵组"></a>创建敌机精灵组</h3><ol><li>在 <code>__create_sprites</code>，添加 <strong>敌机精灵组</strong><ul><li>敌机是 <strong>定时被创建的</strong>，因此在初始化方法中，不需要创建敌机</li></ul></li><li>在 <code>__event_handler</code>，创建敌机，并且 <strong>添加到精灵组</strong><ul><li>调用 <strong>精灵组</strong> 的 <code>add</code> 方法可以 <strong>向精灵组添加精灵</strong></li></ul></li><li>在 <code>__update_sprites</code>，让 <strong>敌机精灵组</strong> 调用 <code>update</code> 和 <code>draw</code> 方法</li></ol><p><img src="006_pygame.SpriteII.png" alt="pygame.SpriteII"></p><h3 id="随机"><a href="#随机" class="headerlink" title="随机"></a>随机</h3><p>使用 <code>pygame.Rect</code> 提供的 <code>bottom</code> 属性，在指定敌机初始位置时，会比较方便</p><ul><li><code>bottom = y + height</code></li><li><code>y = bottom - height</code></li></ul><h4 id="代码实现-1"><a href="#代码实现-1" class="headerlink" title="代码实现"></a>代码实现</h4><ul><li>修改 <strong>初始化方法</strong>，随机敌机出现 <strong>速度</strong> 和 <strong>位置</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1. 调用父类方法，创建敌机精灵，并且指定敌机的图像</span></span><br><span class="line">    super().__init__(<span class="string">"./images/enemy1.png"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2. 设置敌机的随机初始速度 1 ~ 3</span></span><br><span class="line">    self.speed = random.randint(<span class="number">1</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 3. 设置敌机的随机初始位置</span></span><br><span class="line">    self.rect.bottom = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    max_x = SCREEN_RECT.width - self.rect.width</span><br><span class="line">    self.rect.x = random.randint(<span class="number">0</span>, max_x)</span><br></pre></td></tr></table></figure><h2 id="英雄战机精灵"><a href="#英雄战机精灵" class="headerlink" title="英雄战机精灵"></a>英雄战机精灵</h2><h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><ol><li>游戏启动后，<strong>英雄</strong> 出现在屏幕的 <strong>水平中间</strong> 位置，距离 <strong>屏幕底部</strong> <code>120</code> <strong>像素</strong></li><li><strong>英雄</strong> 每隔 <code>0.5</code> 秒发射一次子弹，每次 <strong>连发三枚子弹</strong></li><li><strong>英雄</strong> 默认不会移动，需要通过 <strong>左/右</strong> 方向键，控制 <strong>英雄</strong> 在水平方向移动</li></ol><h3 id="创建英雄战机"><a href="#创建英雄战机" class="headerlink" title="创建英雄战机"></a>创建英雄战机</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Hero</span><span class="params">(GameSprite)</span>:</span></span><br><span class="line">    <span class="string">"""英雄精灵"""</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line"></span><br><span class="line">        super().__init__(<span class="string">"./images/me1.png"</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 设置初始位置</span></span><br><span class="line">        self.rect.centerx = SCREEN_RECT.centerx</span><br><span class="line">        self.rect.bottom = SCREEN_RECT.bottom - <span class="number">120</span></span><br></pre></td></tr></table></figure><h3 id="屏幕上绘制英雄"><a href="#屏幕上绘制英雄" class="headerlink" title="屏幕上绘制英雄"></a>屏幕上绘制英雄</h3><ol><li>在 <code>__create_sprites</code>，添加 <strong>英雄精灵</strong> 和 <strong>英雄精灵组</strong><ul><li>后续要针对 <strong>英雄</strong> 做 <strong>碰撞检测</strong> 以及 <strong>发射子弹</strong></li><li>所以 <strong>英雄</strong> 需要 <strong>单独定义成属性</strong></li></ul></li><li>在 <code>__update_sprites</code>，让 <strong>英雄精灵组</strong> 调用 <code>update</code> 和 <code>draw</code> 方法</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__create_sprites</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#...</span></span><br><span class="line">self.hero = Hero()</span><br><span class="line">self.hero_group = pygame.sprite.Group(self.hero)</span><br><span class="line"><span class="comment">#...</span></span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__update_sprites</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#...</span></span><br><span class="line">    self.hero_group.update()</span><br><span class="line">self.hero_group.draw(self.screen)</span><br><span class="line">    <span class="comment">#...</span></span><br></pre></td></tr></table></figure><h3 id="战机的移动"><a href="#战机的移动" class="headerlink" title="战机的移动"></a>战机的移动</h3><blockquote><p>在 <code>pygame</code> 中针对 <strong>键盘按键的捕获</strong>，有 <strong>两种</strong> 方式</p></blockquote><ul><li><strong>第一种方式</strong> 判断 <code>event.type == pygame.KEYDOWN</code>，用户 <strong>必须要抬起按键</strong> 才算一次 <strong>按键事件</strong>，<strong>操作灵活性会大打折扣</strong></li><li><p><strong>第二种方式</strong> </p><ol><li><p>首先使用 <code>pygame.key.get_pressed()</code> 返回 <strong>所有按键元组</strong></p></li><li><p>通过 <strong>键盘常量</strong>，判断元组中 <strong>某一个键是否被按下</strong> —— 如果被按下，对应数值为 <code>1</code></p><p><strong>第二种方式</strong> 用户可以按住方向键不放，就能够实现持续向某一个方向移动了，<strong>操作灵活性更好</strong></p></li></ol></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update</span><span class="params">(self)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 飞机水平移动</span></span><br><span class="line">    self.rect.x += self.speed</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__event_handler</span><span class="params">()</span>:</span></span><br><span class="line"><span class="comment"># 获取用户按键</span></span><br><span class="line">keys_pressed = pygame.key.get_pressed()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> keys_pressed[pygame.K_RIGHT]:</span><br><span class="line">    self.hero.speed = <span class="number">2</span></span><br><span class="line"><span class="keyword">elif</span> keys_pressed[pygame.K_LEFT]:</span><br><span class="line">    self.hero.speed = <span class="number">-2</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    self.hero.speed = <span class="number">0</span></span><br></pre></td></tr></table></figure><p>原理就是通过按键的事件检测来赋予hero.speed来控制左移还是右移，通过hero.update方法来进行刷新</p><h2 id="子弹精灵组"><a href="#子弹精灵组" class="headerlink" title="子弹精灵组"></a>子弹精灵组</h2><ol><li>在 <code>Hero</code> 的 <strong>初始化方法</strong> 中创建 <strong>子弹精灵组</strong> 属性</li><li>修改 <code>plane_main.py</code> 的 <code>__update_sprites</code> 方法，让 <strong>子弹精灵组</strong> 调用 <code>update</code> 和 <code>draw</code> 方法</li><li>实现 <code>fire()</code> 方法<ul><li>创建子弹精灵</li><li>设置初始位置 —— 在 <strong>英雄的正上方</strong></li><li>将 <strong>子弹</strong> 添加到精灵组</li></ul></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__create_sprites</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 创建子弹的精灵组</span></span><br><span class="line">    self.bullets = pygame.sprite.Group()</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Hero</span><span class="params">(GameSprites)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fire</span><span class="params">(self)</span>:</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 1. 创建子弹精灵</span></span><br><span class="line">        bullet = Bullet()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 2. 设置精灵的位置</span></span><br><span class="line">        bullet.rect.bottom = self.rect.y - <span class="number">20</span></span><br><span class="line">        bullet.rect.centerx = self.rect.centerx</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 3. 将精灵添加到精灵组</span></span><br><span class="line">        self.bullets.add(bullet)</span><br></pre></td></tr></table></figure><p><img src="子弹.png" alt="子弹"></p><h2 id="碰撞检测"><a href="#碰撞检测" class="headerlink" title="碰撞检测"></a>碰撞检测</h2><p>pygame` 提供了 <strong>两个非常方便</strong> 的方法可以实现碰撞检测：</p><h3 id="pygame-sprite-groupcollide"><a href="#pygame-sprite-groupcollide" class="headerlink" title="pygame.sprite.groupcollide()"></a>pygame.sprite.groupcollide()</h3><ul><li><strong>两个精灵组</strong> 中 <strong>所有的精灵</strong> 的碰撞检测</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupcollide(group1, group2, dokill1, dokill2, collided = None) -&gt; Sprite_dict</span><br></pre></td></tr></table></figure><ul><li>如果将 <code>dokill</code> 设置为 <code>True</code>，则 <strong>发生碰撞的精灵将被自动移除</strong></li><li><code>collided</code> 参数是用于 <strong>计算碰撞的回调函数</strong><ul><li>如果没有指定，则每个精灵必须有一个 <code>rect</code> 属性</li></ul></li></ul><h3 id="pygame-sprite-spritecollide"><a href="#pygame-sprite-spritecollide" class="headerlink" title="pygame.sprite.spritecollide()"></a>pygame.sprite.spritecollide()</h3><ul><li>判断 <strong>某个精灵</strong> 和 <strong>指定精灵组</strong> 中的精灵的碰撞</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spritecollide(sprite, group, dokill, collided = None) -&gt; Sprite_list</span><br></pre></td></tr></table></figure><ul><li>如果将 <code>dokill</code> 设置为 <code>True</code>，则 <strong>指定精灵组</strong> 中 <strong>发生碰撞的精灵将被自动移除</strong></li><li><code>collided</code> 参数是用于 <strong>计算碰撞的回调函数</strong><ul><li>如果没有指定，则每个精灵必须有一个 <code>rect</code> 属性</li></ul></li><li>返回 <strong>精灵组</strong> 中跟 <strong>精灵</strong> 发生碰撞的 <strong>精灵列表</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__check_collide</span><span class="params">(self)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1. 子弹摧毁敌机</span></span><br><span class="line">    pygame.sprite.groupcollide(self.hero.bullets, self.enemy_group, <span class="literal">True</span>, <span class="literal">True</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 2. 敌机撞毁英雄</span></span><br><span class="line">    enemies = pygame.sprite.spritecollide(self.hero, self.enemy_group, <span class="literal">True</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 判断列表时候有内容</span></span><br><span class="line">    <span class="keyword">if</span> len(enemies) &gt; <span class="number">0</span>:</span><br><span class="line">    </span><br><span class="line">        <span class="comment"># 让英雄牺牲</span></span><br><span class="line">        self.hero.kill()</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 结束游戏</span></span><br><span class="line">        PlaneGame.__game_over()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 项目 </tag>
            
            <tag> 飞机大战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>eval函数</title>
      <link href="/2019/11/16/eval%E5%87%BD%E6%95%B0/"/>
      <url>/2019/11/16/eval%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="eval-函数"><a href="#eval-函数" class="headerlink" title="eval 函数"></a><code>eval</code> 函数</h1><p><code>eval()</code> 函数十分强大 —— <strong>将字符串</strong> 当成 <strong>有效的表达式</strong> 来求值 并 <strong>返回计算结果</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 基本的数学计算</span></span><br><span class="line">In [<span class="number">1</span>]: eval(<span class="string">"1 + 1"</span>)</span><br><span class="line">Out[<span class="number">1</span>]: <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 字符串重复</span></span><br><span class="line">In [<span class="number">2</span>]: eval(<span class="string">"'*' * 10"</span>)</span><br><span class="line">Out[<span class="number">2</span>]: <span class="string">'**********'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将字符串转换成列表</span></span><br><span class="line">In [<span class="number">3</span>]: type(eval(<span class="string">"[1, 2, 3, 4, 5]"</span>))</span><br><span class="line">Out[<span class="number">3</span>]: list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将字符串转换成字典</span></span><br><span class="line">In [<span class="number">4</span>]: type(eval(<span class="string">"&#123;'name': 'xiaoming', 'age': 18&#125;"</span>))</span><br><span class="line">Out[<span class="number">4</span>]: dict</span><br></pre></td></tr></table></figure><h2 id="案例-计算器"><a href="#案例-计算器" class="headerlink" title="案例 - 计算器"></a>案例 - 计算器</h2><p><strong>需求</strong></p><ol><li>提示用户输入一个 <strong>加减乘除混合运算</strong></li><li>返回计算结果</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">input_str = input(<span class="string">"请输入一个算术题："</span>)</span><br><span class="line"></span><br><span class="line">print(eval(input_str))</span><br></pre></td></tr></table></figure><h2 id="不要滥用-eval"><a href="#不要滥用-eval" class="headerlink" title="不要滥用 eval"></a>不要滥用 <code>eval</code></h2><blockquote><p>在开发时千万不要使用 <code>eval</code> 直接转换 <code>input</code> 的结果</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">__import__(<span class="string">'os'</span>).system(<span class="string">'ls'</span>)</span><br></pre></td></tr></table></figure><ul><li>等价代码</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">os.system(<span class="string">"终端命令"</span>)</span><br></pre></td></tr></table></figure><ul><li>执行成功，返回 0</li><li>执行失败，返回错误信息</li></ul>]]></content>
      
      
      <categories>
          
          <category> python学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> eval </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件操作</title>
      <link href="/2019/11/16/%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/"/>
      <url>/2019/11/16/%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h1><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ul><li>文件的概念</li><li>文件的基本操作</li><li>文件/文件夹的常用操作</li><li>文本文件的编码方式</li></ul><h2 id="01-文件的概念"><a href="#01-文件的概念" class="headerlink" title="01. 文件的概念"></a>01. 文件的概念</h2><h3 id="1-1-文件的概念和作用"><a href="#1-1-文件的概念和作用" class="headerlink" title="1.1 文件的概念和作用"></a>1.1 文件的概念和作用</h3><ul><li>计算机的 <strong>文件</strong>，就是存储在某种 <strong>长期储存设备</strong> 上的一段 <strong>数据</strong></li><li>长期存储设备包括：硬盘、U 盘、移动硬盘、光盘…</li></ul><p><strong>文件的作用</strong></p><p>将数据长期保存下来，在需要的时候使用</p><table><thead><tr><th style="text-align:center">CPU</th><th style="text-align:center">内存</th><th style="text-align:center">硬盘</th></tr></thead><tbody><tr><td style="text-align:center"><img src="CPU.jpg" alt="CPU">￼</td><td style="text-align:center"><img src="内存条.png" alt="内存条">￼</td><td style="text-align:center"><img src="硬盘.jpg" alt="硬盘">￼</td></tr></tbody></table><h3 id="1-2-文件的存储方式"><a href="#1-2-文件的存储方式" class="headerlink" title="1.2 文件的存储方式"></a>1.2 文件的存储方式</h3><ul><li>在计算机中，文件是以 <strong>二进制</strong> 的方式保存在磁盘上的</li></ul><h4 id="文本文件和二进制文件"><a href="#文本文件和二进制文件" class="headerlink" title="文本文件和二进制文件"></a>文本文件和二进制文件</h4><ul><li>文本文件<ul><li>可以使用 <strong>文本编辑软件</strong> 查看</li><li>本质上还是二进制文件</li><li>例如：python 的源程序</li></ul></li><li>二进制文件<ul><li>保存的内容 不是给人直接阅读的，而是 <strong>提供给其他软件使用的</strong></li><li>例如：图片文件、音频文件、视频文件等等</li><li>二进制文件不能使用 <strong>文本编辑软件</strong> 查看</li></ul></li></ul><h2 id="02-文件的基本操作"><a href="#02-文件的基本操作" class="headerlink" title="02. 文件的基本操作"></a>02. 文件的基本操作</h2><h3 id="2-1-操作文件的套路"><a href="#2-1-操作文件的套路" class="headerlink" title="2.1 操作文件的套路"></a>2.1 操作文件的套路</h3><p>在 <strong>计算机</strong> 中要操作文件的套路非常固定，一共包含<strong>三个步骤</strong>：</p><ol><li>打开文件</li><li>读、写文件<ul><li><strong>读</strong> 将文件内容读入内存</li><li><strong>写</strong> 将内存内容写入文件</li></ul></li><li>关闭文件</li></ol><h3 id="2-2-操作文件的函数-方法"><a href="#2-2-操作文件的函数-方法" class="headerlink" title="2.2 操作文件的函数/方法"></a>2.2 操作文件的函数/方法</h3><ul><li>在 <code>Python</code> 中要操作文件需要记住 1 个函数和 3 个方法</li></ul><table><thead><tr><th style="text-align:left">序号</th><th style="text-align:left">函数/方法</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:left">01</td><td style="text-align:left">open</td><td style="text-align:left">打开文件，并且返回文件操作对象</td></tr><tr><td style="text-align:left">02</td><td style="text-align:left">read</td><td style="text-align:left">将文件内容读取到内存</td></tr><tr><td style="text-align:left">03</td><td style="text-align:left">write</td><td style="text-align:left">将指定内容写入文件</td></tr><tr><td style="text-align:left">04</td><td style="text-align:left">close</td><td style="text-align:left">关闭文件</td></tr></tbody></table><ul><li><code>open</code> 函数负责打开文件，并且返回文件对象</li><li><code>read</code>/<code>write</code>/<code>close</code> 三个方法都需要通过 <strong>文件对象</strong> 来调用</li></ul><h3 id="2-3-read-方法-——-读取文件"><a href="#2-3-read-方法-——-读取文件" class="headerlink" title="2.3 read 方法 —— 读取文件"></a>2.3 read 方法 —— 读取文件</h3><ul><li><code>open</code>函数的第一个参数是要打开的文件名（文件名区分大小写）<ul><li>如果文件 <strong>存在</strong>，返回 <strong>文件操作对象</strong></li><li>如果文件 <strong>不存在</strong>，会 <strong>抛出异常</strong></li></ul></li><li><code>read</code> 方法可以一次性 <strong>读入</strong> 并 <strong>返回</strong> 文件的 <strong>所有内容</strong></li><li><code>close</code>方法负责关闭文件<ul><li>如果 <strong>忘记关闭文件</strong>，<strong>会造成系统资源消耗，而且会影响到后续对文件的访问</strong></li></ul></li><li><strong>注意</strong>：<code>read</code> 方法执行后，会把 <strong>文件指针</strong> 移动到 <strong>文件的末尾</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 打开 - 文件名需要注意大小写</span></span><br><span class="line">file = open(<span class="string">"README"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 读取</span></span><br><span class="line">text = file.read()</span><br><span class="line">print(text)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 关闭</span></span><br><span class="line">file.close()</span><br></pre></td></tr></table></figure><p><strong>提示</strong></p><ul><li>在开发中，通常会先编写 <strong>打开</strong> 和 <strong>关闭</strong> 的代码，再编写中间针对文件的 <strong>读/写</strong> 操作！</li></ul><h4 id="文件指针（知道）"><a href="#文件指针（知道）" class="headerlink" title="文件指针（知道）"></a>文件指针（知道）</h4><ul><li><p><strong>文件指针</strong> 标记 <strong>从哪个位置开始读取数据</strong></p></li><li><p><strong>第一次打开</strong> 文件时，通常 <strong>文件指针会指向文件的开始位置</strong></p></li><li><p>当执行了<code>read</code>方法后，文件指针会移动到读取内容的末尾</p><ul><li>默认情况下会移动到 <strong>文件末尾</strong></li></ul></li></ul><p><strong>思考</strong></p><ul><li>如果执行了一次 <code>read</code> 方法，读取了所有内容，那么再次调用 <code>read</code> 方法，还能够获得到内容吗？</li></ul><p><strong>答案</strong></p><ul><li>不能</li><li>第一次读取之后，文件指针移动到了文件末尾，再次调用不会读取到任何的内容</li></ul><h3 id="2-4-打开文件的方式"><a href="#2-4-打开文件的方式" class="headerlink" title="2.4 打开文件的方式"></a>2.4 打开文件的方式</h3><ul><li><code>open</code> 函数默认以 <strong>只读方式</strong> 打开文件，并且返回文件对象</li></ul><p>语法如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f = open(<span class="string">"文件名"</span>, <span class="string">"访问方式"</span>)</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">访问方式</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:center">r</td><td style="text-align:left">以<strong>只读</strong>方式打开文件。文件的指针将会放在文件的开头，这是<strong>默认模式</strong>。如果文件不存在，抛出异常</td></tr><tr><td style="text-align:center">w</td><td style="text-align:left">以<strong>只写</strong>方式打开文件。如果文件存在会被覆盖。如果文件不存在，创建新文件</td></tr><tr><td style="text-align:center">a</td><td style="text-align:left">以<strong>追加</strong>方式打开文件。如果该文件已存在，文件指针将会放在文件的结尾。如果文件不存在，创建新文件进行写入</td></tr><tr><td style="text-align:center">r+</td><td style="text-align:left">以<strong>读写</strong>方式打开文件。文件的指针将会放在文件的开头。如果文件不存在，抛出异常</td></tr><tr><td style="text-align:center">w+</td><td style="text-align:left">以<strong>读写</strong>方式打开文件。如果文件存在会被覆盖。如果文件不存在，创建新文件</td></tr><tr><td style="text-align:center">a+</td><td style="text-align:left">以<strong>读写</strong>方式打开文件。如果该文件已存在，文件指针将会放在文件的结尾。如果文件不存在，创建新文件进行写入</td></tr></tbody></table><p><strong>提示</strong></p><ul><li>频繁的移动文件指针，<strong>会影响文件的读写效率</strong>，开发中更多的时候会以 <strong>只读</strong>、<strong>只写</strong> 的方式来操作文件</li></ul><p><strong>写入文件示例</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打开文件</span></span><br><span class="line">f = open(<span class="string">"README"</span>, <span class="string">"w"</span>)</span><br><span class="line"></span><br><span class="line">f.write(<span class="string">"hello python！\n"</span>)</span><br><span class="line">f.write(<span class="string">"今天天气真好"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭文件</span></span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><h3 id="2-5-按行读取文件内容"><a href="#2-5-按行读取文件内容" class="headerlink" title="2.5 按行读取文件内容"></a>2.5 按行读取文件内容</h3><ul><li><code>read</code> 方法默认会把文件的 <strong>所有内容</strong> <strong>一次性读取到内存</strong></li><li>如果文件太大，对内存的占用会非常严重</li></ul><h4 id="readline-方法"><a href="#readline-方法" class="headerlink" title="readline 方法"></a><code>readline</code> 方法</h4><ul><li><code>readline</code> 方法可以一次读取一行内容</li><li>方法执行后，会把 <strong>文件指针</strong> 移动到下一行，准备再次读取</li></ul><p><strong>读取大文件的正确姿势</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打开文件</span></span><br><span class="line">file = open(<span class="string">"README"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="comment"># 读取一行内容</span></span><br><span class="line">    text = file.readline()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 判断是否读到内容</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> text:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 每读取一行的末尾已经有了一个 `\n`</span></span><br><span class="line">    print(text, end=<span class="string">""</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭文件</span></span><br><span class="line">file.close()</span><br></pre></td></tr></table></figure><h3 id="2-6-文件读写案例-——-复制文件"><a href="#2-6-文件读写案例-——-复制文件" class="headerlink" title="2.6 文件读写案例 —— 复制文件"></a>2.6 文件读写案例 —— 复制文件</h3><p><strong>目标</strong></p><p>用代码的方式，来实现文件复制过程</p><p><img src="025_复制文件.png" alt="复制文件">￼</p><h4 id="小文件复制"><a href="#小文件复制" class="headerlink" title="小文件复制"></a>小文件复制</h4><ul><li>打开一个已有文件，读取完整内容，并写入到另外一个文件</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 打开文件</span></span><br><span class="line">file_read = open(<span class="string">"README"</span>)</span><br><span class="line">file_write = open(<span class="string">"README[复件]"</span>, <span class="string">"w"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 读取并写入文件</span></span><br><span class="line">text = file_read.read()</span><br><span class="line">file_write.write(text)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 关闭文件</span></span><br><span class="line">file_read.close()</span><br><span class="line">file_write.close()</span><br></pre></td></tr></table></figure><h4 id="大文件复制"><a href="#大文件复制" class="headerlink" title="大文件复制"></a>大文件复制</h4><ul><li>打开一个已有文件，逐行读取内容，并顺序写入到另外一个文件</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 打开文件</span></span><br><span class="line">file_read = open(<span class="string">"README"</span>)</span><br><span class="line">file_write = open(<span class="string">"README[复件]"</span>, <span class="string">"w"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 读取并写入文件</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="comment"># 每次读取一行</span></span><br><span class="line">    text = file_read.readline()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 判断是否读取到内容</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> text:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    file_write.write(text)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 关闭文件</span></span><br><span class="line">file_read.close()</span><br><span class="line">file_write.close()</span><br></pre></td></tr></table></figure><h2 id="03-文件-目录的常用管理操作"><a href="#03-文件-目录的常用管理操作" class="headerlink" title="03. 文件/目录的常用管理操作"></a>03. 文件/目录的常用管理操作</h2><ul><li>在终端/文件浏览器、 中可以执行常规的文件/目录管理操作，例如：<ul><li>创建、重命名、删除、改变路径、查看目录内容、……</li></ul></li><li>在 <code>Python</code> 中，如果希望通过程序实现上述功能，需要导入 <code>os</code> 模块</li></ul><h3 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h3><table><thead><tr><th style="text-align:left">序号</th><th style="text-align:left">方法名</th><th style="text-align:left">说明</th><th style="text-align:left">示例</th></tr></thead><tbody><tr><td style="text-align:left">01</td><td style="text-align:left">rename</td><td style="text-align:left">重命名文件</td><td style="text-align:left"><code>os.rename(源文件名, 目标文件名)</code></td></tr><tr><td style="text-align:left">02</td><td style="text-align:left">remove</td><td style="text-align:left">删除文件</td><td style="text-align:left"><code>os.remove(文件名)</code></td></tr></tbody></table><h3 id="目录操作"><a href="#目录操作" class="headerlink" title="目录操作"></a>目录操作</h3><table><thead><tr><th style="text-align:left">序号</th><th style="text-align:left">方法名</th><th style="text-align:left">说明</th><th style="text-align:left">示例</th></tr></thead><tbody><tr><td style="text-align:left">01</td><td style="text-align:left">listdir</td><td style="text-align:left">目录列表</td><td style="text-align:left"><code>os.listdir(目录名)</code></td></tr><tr><td style="text-align:left">02</td><td style="text-align:left">mkdir</td><td style="text-align:left">创建目录</td><td style="text-align:left"><code>os.mkdir(目录名)</code></td></tr><tr><td style="text-align:left">03</td><td style="text-align:left">rmdir</td><td style="text-align:left">删除目录</td><td style="text-align:left"><code>os.rmdir(目录名)</code></td></tr><tr><td style="text-align:left">04</td><td style="text-align:left">getcwd</td><td style="text-align:left">获取当前目录</td><td style="text-align:left"><code>os.getcwd()</code></td></tr><tr><td style="text-align:left">05</td><td style="text-align:left">chdir</td><td style="text-align:left">修改工作目录</td><td style="text-align:left"><code>os.chdir(目标目录)</code></td></tr><tr><td style="text-align:left">06</td><td style="text-align:left">path.isdir</td><td style="text-align:left">判断是否是文件</td><td style="text-align:left"><code>os.path.isdir(文件路径)</code></td></tr></tbody></table><blockquote><p>提示：文件或者目录操作都支持 <strong>相对路径</strong> 和 <strong>绝对路径</strong></p></blockquote><h2 id="04-文本文件的编码格式（科普）"><a href="#04-文本文件的编码格式（科普）" class="headerlink" title="04. 文本文件的编码格式（科普）"></a>04. 文本文件的编码格式（科普）</h2><ul><li>文本文件存储的内容是基于 <strong>字符编码</strong> 的文件，常见的编码有 <code>ASCII</code> 编码，<code>UNICODE</code> 编码等</li></ul><blockquote><p>Python 2.x 默认使用 <code>ASCII</code> 编码格式<br>Python 3.x 默认使用 <code>UTF-8</code> 编码格式</p></blockquote><h3 id="4-1-ASCII-编码和-UNICODE-编码"><a href="#4-1-ASCII-编码和-UNICODE-编码" class="headerlink" title="4.1 ASCII 编码和 UNICODE 编码"></a>4.1 ASCII 编码和 UNICODE 编码</h3><h4 id="ASCII-编码"><a href="#ASCII-编码" class="headerlink" title="ASCII 编码"></a><code>ASCII</code> 编码</h4><ul><li><p>计算机中只有 <code>256</code> 个 <code>ASCII</code> 字符</p></li><li><p>一个<code>ASCII</code>在内存中占用1 个字节的空间</p><ul><li><code>8</code> 个 <code>0/1</code> 的排列组合方式一共有 <code>256</code> 种，也就是 <code>2 ** 8</code></li></ul></li></ul><p><img src="001_ASCII编码表1.jpg" alt="ASCII编码表1">￼</p><h4 id="UTF-8-编码格式"><a href="#UTF-8-编码格式" class="headerlink" title="UTF-8 编码格式"></a><code>UTF-8</code> 编码格式</h4><ul><li>计算机中使用 <strong>1~6 个字节</strong> 来表示一个 <code>UTF-8</code> 字符，涵盖了 <strong>地球上几乎所有地区的文字</strong></li><li>大多数汉字会使用 <strong>3 个字节</strong> 表示</li><li><code>UTF-8</code> 是 <code>UNICODE</code> 编码的一种编码格式</li></ul><h3 id="4-2-Ptyhon-2-x-中如何使用中文"><a href="#4-2-Ptyhon-2-x-中如何使用中文" class="headerlink" title="4.2 Ptyhon 2.x 中如何使用中文"></a>4.2 Ptyhon 2.x 中如何使用中文</h3><blockquote><p>Python 2.x 默认使用 <code>ASCII</code> 编码格式<br>Python 3.x 默认使用 <code>UTF-8</code> 编码格式</p></blockquote><ul><li>在 Python 2.x 文件的 <strong>第一行</strong> 增加以下代码，解释器会以 <code>utf-8</code> 编码来处理 python 文件</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># *-* coding:utf8 *-*</span></span><br></pre></td></tr></table></figure><blockquote><p>这方式是官方推荐使用的！</p></blockquote><ul><li>也可以使用</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf8</span></span><br></pre></td></tr></table></figure><h4 id="unicode-字符串"><a href="#unicode-字符串" class="headerlink" title="unicode 字符串"></a>unicode 字符串</h4><ul><li>在 <code>Python 2.x</code> 中，即使指定了文件使用 <code>UTF-8</code> 的编码格式，但是在遍历字符串时，仍然会 <strong>以字节为单位遍历</strong> 字符串</li><li>要能够 <strong>正确的遍历字符串</strong>，在定义字符串时，需要 <strong>在字符串的引号前</strong>，增加一个小写字母 <code>u</code>，告诉解释器这是一个 <code>unicode</code> 字符串（使用 <code>UTF-8</code> 编码格式的字符串）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># *-* coding:utf8 *-*</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在字符串前，增加一个 `u` 表示这个字符串是一个 utf8 字符串</span></span><br><span class="line">hello_str = <span class="string">u"你好世界"</span></span><br><span class="line"></span><br><span class="line">print(hello_str)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> hello_str:</span><br><span class="line">    print(c)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> open </tag>
            
            <tag> write </tag>
            
            <tag> read </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>模块和包</title>
      <link href="/2019/11/16/%E6%A8%A1%E5%9D%97%E5%92%8C%E5%8C%85/"/>
      <url>/2019/11/16/%E6%A8%A1%E5%9D%97%E5%92%8C%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<h1 id="模块和包"><a href="#模块和包" class="headerlink" title="模块和包"></a>模块和包</h1><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ul><li>模块</li><li>包</li><li>发布模块</li></ul><h2 id="01-模块"><a href="#01-模块" class="headerlink" title="01. 模块"></a>01. 模块</h2><h3 id="1-1-模块的概念"><a href="#1-1-模块的概念" class="headerlink" title="1.1 模块的概念"></a>1.1 模块的概念</h3><blockquote><p><strong>模块是 Python 程序架构的一个核心概念</strong></p></blockquote><ul><li>每一个以扩展名 <code>py</code> 结尾的 <code>Python</code> 源代码文件都是一个 <strong>模块</strong></li><li><strong>模块名</strong> 同样也是一个 <strong>标识符</strong>，需要符合标识符的命名规则</li><li>在模块中定义的 <strong>全局变量</strong> 、<strong>函数</strong>、<strong>类</strong> 都是提供给外界直接使用的 <strong>工具</strong></li><li><strong>模块</strong> 就好比是 <strong>工具包</strong>，要想使用这个工具包中的工具，就需要先 <strong>导入</strong> 这个模块</li></ul><h3 id="1-2-模块的两种导入方式"><a href="#1-2-模块的两种导入方式" class="headerlink" title="1.2 模块的两种导入方式"></a>1.2 模块的两种导入方式</h3><h4 id="1）import-导入"><a href="#1）import-导入" class="headerlink" title="1）import 导入"></a>1）import 导入</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> 模块名<span class="number">1</span>, 模块名<span class="number">2</span></span><br></pre></td></tr></table></figure><blockquote><p>提示：在导入模块时，每个导入应该独占一行</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> 模块名<span class="number">1</span></span><br><span class="line"><span class="keyword">import</span> 模块名<span class="number">2</span></span><br></pre></td></tr></table></figure><ul><li>导入之后<ul><li>通过 <code>模块名.</code> 使用 <strong>模块提供的工具</strong> —— <strong>全局变量</strong>、<strong>函数</strong>、<strong>类</strong></li></ul></li></ul><h5 id="使用-as-指定模块的别名"><a href="#使用-as-指定模块的别名" class="headerlink" title="使用 as 指定模块的别名"></a>使用 <code>as</code> 指定模块的别名</h5><blockquote><p><strong>如果模块的名字太长</strong>，可以使用 <code>as</code> 指定模块的名称，以方便在代码中的使用</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> 模块名<span class="number">1</span> <span class="keyword">as</span> 模块别名</span><br></pre></td></tr></table></figure><blockquote><p>注意：<strong>模块别名</strong> 应该符合 <strong>大驼峰命名法</strong></p></blockquote><h4 id="2）from…import-导入"><a href="#2）from…import-导入" class="headerlink" title="2）from…import 导入"></a>2）from…import 导入</h4><ul><li>如果希望 <strong>从某一个模块</strong> 中，导入 <strong>部分</strong> 工具，就可以使用 <code>from ... import</code> 的方式</li><li><code>import 模块名</code> 是 <strong>一次性</strong> 把模块中 <strong>所有工具全部导入</strong>，并且通过 <strong>模块名/别名</strong> 访问</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从 模块 导入 某一个工具</span></span><br><span class="line"><span class="keyword">from</span> 模块名<span class="number">1</span> <span class="keyword">import</span> 工具名</span><br></pre></td></tr></table></figure><ul><li>导入之后<ul><li><strong>不需要</strong> 通过 <code>模块名.</code></li><li>可以直接使用 <strong>模块提供的工具</strong> —— <strong>全局变量</strong>、<strong>函数</strong>、<strong>类</strong></li></ul></li></ul><p><strong>注意</strong></p><blockquote><p>如果 <strong>两个模块</strong>，存在 <strong>同名的函数</strong>，那么 <strong>后导入模块的函数</strong>，会 <strong>覆盖掉先导入的函数</strong></p></blockquote><ul><li>开发时 <code>import</code> 代码应该统一写在 <strong>代码的顶部</strong>，更容易及时发现冲突</li><li>一旦发现冲突，可以使用 <code>as</code> 关键字 <strong>给其中一个工具起一个别名</strong></li></ul><h5 id="from…import-（知道）"><a href="#from…import-（知道）" class="headerlink" title="from…import *（知道）"></a>from…import *（知道）</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从 模块 导入 所有工具</span></span><br><span class="line"><span class="keyword">from</span> 模块名<span class="number">1</span> <span class="keyword">import</span> *</span><br></pre></td></tr></table></figure><p><strong>注意</strong></p><blockquote><p>这种方式不推荐使用，因为函数重名并没有任何的提示，出现问题不好排查</p></blockquote><h3 id="1-3-模块的搜索顺序-扩展"><a href="#1-3-模块的搜索顺序-扩展" class="headerlink" title="1.3 模块的搜索顺序[扩展]"></a>1.3 模块的搜索顺序[扩展]</h3><p><code>Python</code> 的解释器在 <strong>导入模块</strong> 时，会：</p><ol><li>搜索 <strong>当前目录</strong> 指定模块名的文件，<strong>如果有就直接导入</strong></li><li>如果没有，再搜索 <strong>系统目录</strong></li></ol><blockquote><p>在开发时，给文件起名，不要和 <strong>系统的模块文件</strong> <strong>重名</strong></p></blockquote><p><code>Python</code> 中每一个模块都有一个内置属性 <code>__file__</code> 可以 <strong>查看模块</strong> 的 <strong>完整路径</strong></p><p><strong>示例</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成一个 0～10 的数字</span></span><br><span class="line">rand = random.randint(<span class="number">0</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">print(rand)</span><br></pre></td></tr></table></figure><blockquote><p>注意：如果当前目录下，存在一个 <code>random.py</code> 的文件，程序就无法正常执行了！</p></blockquote><ul><li>这个时候，<code>Python</code> 的解释器会 <strong>加载当前目录</strong> 下的 <code>random.py</code> 而不会加载 <strong>系统的</strong> <code>random</code> 模块</li></ul><h3 id="1-4-原则-——-每一个文件都应该是可以被导入的"><a href="#1-4-原则-——-每一个文件都应该是可以被导入的" class="headerlink" title="1.4 原则 —— 每一个文件都应该是可以被导入的"></a>1.4 原则 —— 每一个文件都应该是可以被导入的</h3><ul><li>一个 <strong>独立的 Python 文件</strong> 就是一个 <strong>模块</strong></li><li>在导入文件时，文件中 <strong>所有没有任何缩进的代码</strong> 都会被执行一遍！</li></ul><p><strong>实际开发场景</strong></p><ul><li>在实际开发中，每一个模块都是独立开发的，大多都有专人负责</li><li>开发人员通常会在模块下方增加一些测试代码<ul><li>仅在模块内使用，而被导入到其他文件中不需要执行</li></ul></li></ul><h4 id="name-属性"><a href="#name-属性" class="headerlink" title="__name__ 属性"></a><code>__name__</code> 属性</h4><blockquote><ul><li><code>__name__</code> 属性可以做到，测试模块的代码 <strong>只在测试情况下被运行</strong>，而在 <strong>被导入时不会被执行</strong>！</li></ul></blockquote><ul><li><code>__name__</code> 是 <code>Python</code> 的一个内置属性，记录着一个 <strong>字符串</strong></li><li>如果 <strong>是被其他文件导入的</strong>，<code>__name__</code> 就是 <strong>模块名</strong></li><li>如果 <strong>是当前执行的程序</strong> <code>__name__</code> 是 <strong><strong>main</strong></strong></li></ul><p><strong>在很多 Python 文件中都会看到以下格式的代码</strong>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入模块</span></span><br><span class="line"><span class="comment"># 定义全局变量</span></span><br><span class="line"><span class="comment"># 定义类</span></span><br><span class="line"><span class="comment"># 定义函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在代码的最下方</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># ...</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据 __name__ 判断是否执行下方代码</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h2 id="02-包（Package）"><a href="#02-包（Package）" class="headerlink" title="02. 包（Package）"></a>02. 包（Package）</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><ul><li><strong>包</strong> 是一个 <strong>包含多个模块</strong> 的 <strong>特殊目录</strong></li><li>目录下有一个 <strong>特殊的文件</strong> <code>__init__.py</code></li><li>包名的 <strong>命名方式</strong> 和变量名一致，<strong>小写字母</strong> + <code>_</code></li></ul><p><strong>好处</strong></p><ul><li>使用 <code>import 包名</code> 可以一次性导入 <strong>包</strong> 中 <strong>所有的模块</strong></li></ul><h3 id="案例演练"><a href="#案例演练" class="headerlink" title="案例演练"></a>案例演练</h3><ol><li>新建一个 <code>hm_message</code> 的 <strong>包</strong></li><li>在目录下，新建两个文件 <code>send_message</code> 和 <code>receive_message</code></li><li>在 <code>send_message</code> 文件中定义一个 <code>send</code> 函数</li><li>在 <code>receive_message</code> 文件中定义一个 <code>receive</code> 函数</li><li>在外部直接导入 <code>hm_message</code> 的包</li></ol><h3 id="init-py"><a href="#init-py" class="headerlink" title="__init__.py"></a><code>__init__.py</code></h3><ul><li>要在外界使用 <strong>包</strong> 中的模块，需要在 <code>__init__.py</code> 中指定 <strong>对外界提供的模块列表</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从 当前目录 导入 模块列表</span></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> send_message</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> receive_message</span><br></pre></td></tr></table></figure><h2 id="03-发布模块（知道）"><a href="#03-发布模块（知道）" class="headerlink" title="03. 发布模块（知道）"></a>03. 发布模块（知道）</h2><ul><li>如果希望自己开发的模块，<strong>分享</strong> 给其他人，可以按照以下步骤操作</li></ul><h3 id="3-1-制作发布压缩包步骤"><a href="#3-1-制作发布压缩包步骤" class="headerlink" title="3.1 制作发布压缩包步骤"></a>3.1 制作发布压缩包步骤</h3><h4 id="1-创建-setup-py"><a href="#1-创建-setup-py" class="headerlink" title="1) 创建 setup.py"></a>1) 创建 setup.py</h4><ul><li><code>setup.py</code> 的文件</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> distutils.core <span class="keyword">import</span> setup</span><br><span class="line"></span><br><span class="line">setup(name=<span class="string">"hm_message"</span>,  <span class="comment"># 包名</span></span><br><span class="line">      version=<span class="string">"1.0"</span>,  <span class="comment"># 版本</span></span><br><span class="line">      description=<span class="string">"itheima's 发送和接收消息模块"</span>,  <span class="comment"># 描述信息</span></span><br><span class="line">      long_description=<span class="string">"完整的发送和接收消息模块"</span>,  <span class="comment"># 完整描述信息</span></span><br><span class="line">      author=<span class="string">"itheima"</span>,  <span class="comment"># 作者</span></span><br><span class="line">      author_email=<span class="string">"itheima@itheima.com"</span>,  <span class="comment"># 作者邮箱</span></span><br><span class="line">      url=<span class="string">"www.itheima.com"</span>,  <span class="comment"># 主页</span></span><br><span class="line">      py_modules=[<span class="string">"hm_message.send_message"</span>,</span><br><span class="line">                  <span class="string">"hm_message.receive_message"</span>])</span><br></pre></td></tr></table></figure><p>有关字典参数的详细信息，可以参阅官方网站：</p><p><a href="https://docs.python.org/2/distutils/apiref.html" target="_blank" rel="noopener">https://docs.python.org/2/distutils/apiref.html</a></p><h4 id="2-构建模块"><a href="#2-构建模块" class="headerlink" title="2) 构建模块"></a>2) 构建模块</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python3 setup.py build</span><br></pre></td></tr></table></figure><h4 id="3-生成发布压缩包"><a href="#3-生成发布压缩包" class="headerlink" title="3) 生成发布压缩包"></a>3) 生成发布压缩包</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python3 setup.py sdist</span><br></pre></td></tr></table></figure><blockquote><p>注意：要制作哪个版本的模块，就使用哪个版本的解释器执行！</p></blockquote><h3 id="3-2-安装模块"><a href="#3-2-安装模块" class="headerlink" title="3.2 安装模块"></a>3.2 安装模块</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ tar -zxvf hm_message-1.0.tar.gz </span><br><span class="line"></span><br><span class="line">$ sudo python3 setup.py install</span><br></pre></td></tr></table></figure><p><strong>卸载模块</strong></p><p>直接从安装目录下，把安装模块的 <strong>目录</strong> 删除就可以</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/lib/python3.5/dist-packages/</span><br><span class="line">$ sudo rm -r hm_message*</span><br></pre></td></tr></table></figure><h3 id="3-3-pip-安装第三方模块"><a href="#3-3-pip-安装第三方模块" class="headerlink" title="3.3 pip 安装第三方模块"></a>3.3 <code>pip</code> 安装第三方模块</h3><ul><li><p>第三方模块通常是指由知名的第三方团队开发的并且被程序员广泛使用的<code>Python</code>包 / 模块</p><ul><li>例如 <code>pygame</code> 就是一套非常成熟的 <strong>游戏开发模块</strong></li></ul></li><li><p><code>pip</code> 是一个现代的，通用的 <code>Python</code> 包管理工具</p></li><li><p>提供了对 <code>Python</code> 包的查找、下载、安装、卸载等功能</p></li></ul><p>安装和卸载命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将模块安装到 Python 2.x 环境</span></span><br><span class="line">$ sudo pip install pygame</span><br><span class="line">$ sudo pip uninstall pygame</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将模块安装到 Python 3.x 环境</span></span><br><span class="line">$ sudo pip3 install pygame</span><br><span class="line">$ sudo pip3 uninstall pygame</span><br></pre></td></tr></table></figure><h4 id="在-Mac-下安装-iPython"><a href="#在-Mac-下安装-iPython" class="headerlink" title="在 Mac 下安装 iPython"></a>在 <code>Mac</code> 下安装 <code>iPython</code></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pip install ipython</span><br></pre></td></tr></table></figure><h4 id="在-Linux-下安装-iPython"><a href="#在-Linux-下安装-iPython" class="headerlink" title="在 Linux 下安装 iPython"></a>在 <code>Linux</code> 下安装 <code>iPython</code></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install ipython</span><br><span class="line">$ sudo apt install ipython3</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 模块 </tag>
            
            <tag> 包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>异常</title>
      <link href="/2019/11/16/%E5%BC%82%E5%B8%B8/"/>
      <url>/2019/11/16/%E5%BC%82%E5%B8%B8/</url>
      
        <content type="html"><![CDATA[<h1 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h1><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ul><li>异常的概念</li><li>捕获异常</li><li>异常的传递</li><li>抛出异常</li></ul><h2 id="01-异常的概念"><a href="#01-异常的概念" class="headerlink" title="01. 异常的概念"></a>01. 异常的概念</h2><ul><li>程序在运行时，如果 <code>Python 解释器</code> <strong>遇到</strong> 到一个错误，<strong>会停止程序的执行，并且提示一些错误信息</strong>，这就是 <strong>异常</strong></li><li><strong>程序停止执行并且提示错误信息</strong> 这个动作，我们通常称之为：<strong>抛出(raise)异常</strong></li></ul><p><img src="001_异常示意图.png" alt="异常示意图"></p><blockquote><p>程序开发时，很难将 <strong>所有的特殊情况</strong> 都处理的面面俱到，通过 <strong>异常捕获</strong> 可以针对突发事件做集中的处理，从而保证程序的 <strong>稳定性和健壮性</strong></p></blockquote><h2 id="02-捕获异常"><a href="#02-捕获异常" class="headerlink" title="02. 捕获异常"></a>02. 捕获异常</h2><h3 id="2-1-简单的捕获异常语法"><a href="#2-1-简单的捕获异常语法" class="headerlink" title="2.1 简单的捕获异常语法"></a>2.1 简单的捕获异常语法</h3><ul><li>在程序开发中，如果 <strong>对某些代码的执行不能确定是否正确</strong>，可以增加 <code>try(尝试)</code> 来 <strong>捕获异常</strong></li><li>捕获异常最简单的语法格式：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    尝试执行的代码</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    出现错误的处理</span><br></pre></td></tr></table></figure><ul><li><code>try</code> <strong>尝试</strong>，下方编写要尝试代码，不确定是否能够正常执行的代码</li><li><code>except</code> <strong>如果不是</strong>，下方编写尝试失败的代码</li></ul><h4 id="简单异常捕获演练-——-要求用户输入整数"><a href="#简单异常捕获演练-——-要求用户输入整数" class="headerlink" title="简单异常捕获演练 —— 要求用户输入整数"></a>简单异常捕获演练 —— 要求用户输入整数</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># 提示用户输入一个数字</span></span><br><span class="line">    num = int(input(<span class="string">"请输入数字："</span>))</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(<span class="string">"请输入正确的数字"</span>)</span><br></pre></td></tr></table></figure><h3 id="2-2-错误类型捕获"><a href="#2-2-错误类型捕获" class="headerlink" title="2.2 错误类型捕获"></a>2.2 错误类型捕获</h3><ul><li>在程序执行时，可能会遇到 <strong>不同类型的异常</strong>，并且需要 <strong>针对不同类型的异常，做出不同的响应</strong>，这个时候，就需要捕获错误类型了</li><li>语法如下：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># 尝试执行的代码</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">except</span> 错误类型<span class="number">1</span>:</span><br><span class="line">    <span class="comment"># 针对错误类型1，对应的代码处理</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">except</span> (错误类型<span class="number">2</span>, 错误类型<span class="number">3</span>):</span><br><span class="line">    <span class="comment"># 针对错误类型2 和 3，对应的代码处理</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> result:</span><br><span class="line">    print(<span class="string">"未知错误 %s"</span> % result)</span><br></pre></td></tr></table></figure><ul><li>当 <code>Python</code> 解释器 <strong>抛出异常</strong> 时，<strong>最后一行错误信息的第一个单词，就是错误类型</strong></li></ul><h4 id="异常类型捕获演练-——-要求用户输入整数"><a href="#异常类型捕获演练-——-要求用户输入整数" class="headerlink" title="异常类型捕获演练 —— 要求用户输入整数"></a>异常类型捕获演练 —— 要求用户输入整数</h4><p><strong>需求</strong></p><ol><li>提示用户输入一个整数</li><li>使用 <code>8</code> 除以用户输入的整数并且输出</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    num = int(input(<span class="string">"请输入整数："</span>))</span><br><span class="line">    result = <span class="number">8</span> / num</span><br><span class="line">    print(result)</span><br><span class="line"><span class="keyword">except</span> ValueError:</span><br><span class="line">    print(<span class="string">"请输入正确的整数"</span>)</span><br><span class="line"><span class="keyword">except</span> ZeroDivisionError:</span><br><span class="line">    print(<span class="string">"除 0 错误"</span>)</span><br></pre></td></tr></table></figure><h4 id="捕获未知错误"><a href="#捕获未知错误" class="headerlink" title="捕获未知错误"></a>捕获未知错误</h4><ul><li>在开发时，<strong>要预判到所有可能出现的错误</strong>，还是有一定难度的</li><li>如果希望程序 <strong>无论出现任何错误</strong>，都不会因为 <code>Python</code> 解释器 <strong>抛出异常而被终止</strong>，可以再增加一个 <code>except</code></li></ul><p>语法如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> result:</span><br><span class="line">    print(<span class="string">"未知错误 %s"</span> % result)</span><br></pre></td></tr></table></figure><h3 id="2-3-异常捕获完整语法"><a href="#2-3-异常捕获完整语法" class="headerlink" title="2.3 异常捕获完整语法"></a>2.3 异常捕获完整语法</h3><ul><li>在实际开发中，为了能够处理复杂的异常情况，完整的异常语法如下：</li></ul><blockquote><p>提示：</p><ul><li>有关完整语法的应用场景，在后续学习中，<strong>结合实际的案例</strong>会更好理解</li><li>现在先对这个语法结构有个印象即可</li></ul></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># 尝试执行的代码</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">except</span> 错误类型<span class="number">1</span>:</span><br><span class="line">    <span class="comment"># 针对错误类型1，对应的代码处理</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">except</span> 错误类型<span class="number">2</span>:</span><br><span class="line">    <span class="comment"># 针对错误类型2，对应的代码处理</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">except</span> (错误类型<span class="number">3</span>, 错误类型<span class="number">4</span>):</span><br><span class="line">    <span class="comment"># 针对错误类型3 和 4，对应的代码处理</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> result:</span><br><span class="line">    <span class="comment"># 打印错误信息</span></span><br><span class="line">    print(result)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="comment"># 没有异常才会执行的代码</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    <span class="comment"># 无论是否有异常，都会执行的代码</span></span><br><span class="line">    print(<span class="string">"无论是否有异常，都会执行的代码"</span>)</span><br></pre></td></tr></table></figure><ul><li><code>else</code> 只有在没有异常时才会执行的代码</li><li><code>finally</code> 无论是否有异常，都会执行的代码</li><li>之前一个演练的 <strong>完整捕获异常</strong> 的代码如下：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    num = int(input(<span class="string">"请输入整数："</span>))</span><br><span class="line">    result = <span class="number">8</span> / num</span><br><span class="line">    print(result)</span><br><span class="line"><span class="keyword">except</span> ValueError:</span><br><span class="line">    print(<span class="string">"请输入正确的整数"</span>)</span><br><span class="line"><span class="keyword">except</span> ZeroDivisionError:</span><br><span class="line">    print(<span class="string">"除 0 错误"</span>)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> result:</span><br><span class="line">    print(<span class="string">"未知错误 %s"</span> % result)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"正常执行"</span>)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    print(<span class="string">"执行完成，但是不保证正确"</span>)</span><br></pre></td></tr></table></figure><h2 id="03-异常的传递"><a href="#03-异常的传递" class="headerlink" title="03. 异常的传递"></a>03. 异常的传递</h2><ul><li><strong>异常的传递</strong> —— 当 <strong>函数/方法</strong> 执行 <strong>出现异常</strong>，会 <strong>将异常传递</strong> 给 函数/方法 的 <strong>调用一方</strong></li><li>如果 <strong>传递到主程序</strong>，仍然 <strong>没有异常处理</strong>，程序才会被终止</li></ul><p><strong>提示</strong></p><ul><li>在开发中，可以在主函数中增加 <strong>异常捕获</strong></li><li>而在主函数中调用的其他函数，只要出现异常，都会传递到主函数的 <strong>异常捕获</strong> 中</li><li>这样就不需要在代码中，增加大量的 <strong>异常捕获</strong>，能够保证代码的整洁</li></ul><p><strong>需求</strong></p><ol><li>定义函数 <code>demo1()</code> <strong>提示用户输入一个整数并且返回</strong></li><li>定义函数 <code>demo2()</code> 调用 <code>demo1()</code></li><li>在主程序中调用 <code>demo2()</code></li></ol><h2 id="04-抛出-raise-异常"><a href="#04-抛出-raise-异常" class="headerlink" title="04. 抛出 raise 异常"></a>04. 抛出 <code>raise</code> 异常</h2><h3 id="4-1-应用场景"><a href="#4-1-应用场景" class="headerlink" title="4.1 应用场景"></a>4.1 应用场景</h3><ul><li>在开发中，除了 <strong>代码执行出错</strong> <code>Python</code> 解释器会 <strong>抛出</strong> 异常之外</li><li>还可以根据 <strong>应用程序</strong> <strong>特有的业务需求</strong> <strong>主动抛出异常</strong></li></ul><p><strong>示例</strong></p><ul><li>提示用户 <strong>输入密码</strong>，如果 <strong>长度少于 8</strong>，抛出 <strong>异常</strong></li></ul><p><img src="024_自定义异常.png" alt="自定义异常.png"></p><p><strong>注意</strong></p><ul><li>当前函数 <strong>只负责</strong> 提示用户输入密码，如果 <strong>密码长度不正确，需要其他的函数进行额外处理</strong></li><li>因此可以 <strong>抛出异常</strong>，由其他需要处理的函数 <strong>捕获异常</strong></li></ul><h3 id="4-2-抛出异常"><a href="#4-2-抛出异常" class="headerlink" title="4.2 抛出异常"></a>4.2 抛出异常</h3><ul><li><code>Python</code> 中提供了一个 <code>Exception</code> <strong>异常类</strong></li><li>在开发时，如果满足特定业务需求时，希望抛出异常，可以：<ol><li><strong>创建</strong> 一个 <code>Exception</code> 的 <strong>对象</strong></li><li>使用 <code>raise</code> <strong>关键字</strong> 抛出 <strong>异常对象</strong></li></ol></li></ul><p><strong>需求</strong></p><ul><li>定义 <code>input_password</code> 函数，提示用户输入密码</li><li>如果用户输入长度 &lt; 8，抛出异常</li><li>如果用户输入长度 &gt;=8，返回输入的密码</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">input_password</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1. 提示用户输入密码</span></span><br><span class="line">    pwd = input(<span class="string">"请输入密码："</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2. 判断密码长度，如果长度 &gt;= 8，返回用户输入的密码</span></span><br><span class="line">    <span class="keyword">if</span> len(pwd) &gt;= <span class="number">8</span>:</span><br><span class="line">        <span class="keyword">return</span> pwd</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 3. 密码长度不够，需要抛出异常</span></span><br><span class="line">    <span class="comment"># 1&gt; 创建异常对象 - 使用异常的错误信息字符串作为参数</span></span><br><span class="line">    ex = Exception(<span class="string">"密码长度不够"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2&gt; 抛出异常对象</span></span><br><span class="line">    <span class="keyword">raise</span> ex</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    user_pwd = input_password()</span><br><span class="line">    print(user_pwd)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> result:</span><br><span class="line">    print(<span class="string">"发现错误：%s"</span> % result)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 异常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单例</title>
      <link href="/2019/11/16/%E5%8D%95%E4%BE%8B/"/>
      <url>/2019/11/16/%E5%8D%95%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="单例"><a href="#单例" class="headerlink" title="单例"></a>单例</h1><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ul><li>单例设计模式</li><li><code>__new__</code> 方法</li><li>Python 中的单例</li></ul><h2 id="01-单例设计模式"><a href="#01-单例设计模式" class="headerlink" title="01. 单例设计模式"></a>01. 单例设计模式</h2><ul><li>设计模式<ul><li><strong>设计模式</strong> 是 <strong>前人工作的总结和提炼</strong>，通常，被人们广泛流传的设计模式都是针对 <strong>某一特定问题</strong> 的成熟的解决方案</li><li>使用 <strong>设计模式</strong> 是为了可重用代码、让代码更容易被他人理解、保证代码可靠性</li></ul></li><li>单例设计模式<ul><li><strong>目的</strong> —— 让 <strong>类</strong> 创建的对象，在系统中 <strong>只有</strong> <strong>唯一的一个实例</strong></li><li>每一次执行 <code>类名()</code> 返回的对象，<strong>内存地址是相同的</strong></li></ul></li></ul><h3 id="单例设计模式的应用场景"><a href="#单例设计模式的应用场景" class="headerlink" title="单例设计模式的应用场景"></a>单例设计模式的应用场景</h3><ul><li><strong>音乐播放</strong> 对象</li><li><strong>回收站</strong> 对象</li><li><strong>打印机</strong> 对象</li><li>……</li></ul><h2 id="02-new-方法"><a href="#02-new-方法" class="headerlink" title="02. __new__ 方法"></a>02. <code>__new__</code> 方法</h2><ul><li>使用 <strong>类名()</strong> 创建对象时，<code>Python</code> 的解释器 <strong>首先</strong> 会 调用 <code>__new__</code> 方法为对象 <strong>分配空间</strong></li><li><code>__new__</code>是一个 由<code>object</code>基类提供的内置的静态方法，主要作用有两个：<ul><li>1) 在内存中为对象 <strong>分配空间</strong></li><li>2) <strong>返回</strong> 对象的引用</li></ul></li><li><code>Python</code> 的解释器获得对象的 <strong>引用</strong> 后，将引用作为 <strong>第一个参数</strong>，传递给 <code>__init__</code> 方法</li></ul><blockquote><p>重写 <code>__new__</code> 方法 的代码非常固定！</p></blockquote><ul><li>重写 <code>__new__</code> 方法 <strong>一定要</strong> <code>return super().__new__(cls)</code></li><li>否则 Python 的解释器 <strong>得不到</strong> 分配了空间的 <strong>对象引用</strong>，<strong>就不会调用对象的初始化方法</strong></li><li>注意：<code>__new__</code> 是一个静态方法，在调用时需要 <strong>主动传递</strong> <code>cls</code> 参数</li></ul><p><img src="022_对象分配空间和初始化.png" alt="对象分配空间和初始化"></p><p><strong>示例代码</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MusicPlayer</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__new__</span><span class="params">(cls, *args, **kwargs)</span>:</span></span><br><span class="line">        <span class="comment"># 如果不返回任何结果，</span></span><br><span class="line">        <span class="keyword">return</span> super().__new__(cls)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"初始化音乐播放对象"</span>)</span><br><span class="line"></span><br><span class="line">player = MusicPlayer()</span><br><span class="line"></span><br><span class="line">print(player)</span><br></pre></td></tr></table></figure><h2 id="03-Python-中的单例"><a href="#03-Python-中的单例" class="headerlink" title="03. Python 中的单例"></a>03. Python 中的单例</h2><ul><li><p>单例 —— 让类创建的对象，在系统中只有唯一的一个实例</p><ol><li>定义一个 <strong>类属性</strong>，初始值是 <code>None</code>，用于记录 <strong>单例对象的引用</strong></li><li>重写 <code>__new__</code> 方法</li><li>如果 <strong>类属性</strong> <code>is None</code>，调用父类方法分配空间，并在类属性中记录结果</li><li>返回 <strong>类属性</strong> 中记录的 <strong>对象引用</strong></li></ol></li></ul><p><img src="023_单例流程.png" alt="单例流程"></p><h3 id="只执行一次初始化工作"><a href="#只执行一次初始化工作" class="headerlink" title="只执行一次初始化工作"></a>只执行一次初始化工作</h3><ul><li><p>在每次使用<code>类名()</code>创建对象时，<code>Python</code>的解释器都会自动调用两个方法：</p><ul><li><code>__new__</code> 分配空间</li><li><code>__init__</code> 对象初始化</li></ul></li><li><p>在上一小节对 <code>__new__</code> 方法改造之后，每次都会得到 <strong>第一次被创建对象的引用</strong></p></li><li><p>但是：<strong>初始化方法还会被再次调用</strong></p></li></ul><p><strong>需求</strong></p><ul><li>让 <strong>初始化动作</strong> 只被 <strong>执行一次</strong></li></ul><p><strong>解决办法</strong></p><ol><li>定义一个类属性 <code>init_flag</code> 标记是否 <strong>执行过初始化动作</strong>，初始值为 <code>False</code></li><li>在 <code>__init__</code> 方法中，判断 <code>init_flag</code>，如果为 <code>False</code> 就执行初始化动作</li><li>然后将 <code>init_flag</code> 设置为 <code>True</code></li><li>这样，再次 <strong>自动</strong> 调用 <code>__init__</code> 方法时，<strong>初始化动作就不会被再次执行</strong> 了</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MusicPlayer</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 记录第一个被创建对象的引用</span></span><br><span class="line">    instance = <span class="literal">None</span></span><br><span class="line">    <span class="comment"># 记录是否执行过初始化动作</span></span><br><span class="line">    init_flag = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__new__</span><span class="params">(cls, *args, **kwargs)</span>:</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 1. 判断类属性是否是空对象</span></span><br><span class="line">        <span class="keyword">if</span> cls.instance <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="comment"># 2. 调用父类的方法，为第一个对象分配空间</span></span><br><span class="line">            cls.instance = super().__new__(cls)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 3. 返回类属性保存的对象引用</span></span><br><span class="line">        <span class="keyword">return</span> cls.instance</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> MusicPlayer.init_flag:</span><br><span class="line">            print(<span class="string">"初始化音乐播放器"</span>)</span><br><span class="line"></span><br><span class="line">            MusicPlayer.init_flag = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建多个对象</span></span><br><span class="line">player1 = MusicPlayer()</span><br><span class="line">print(player1)</span><br><span class="line"></span><br><span class="line">player2 = MusicPlayer()</span><br><span class="line">print(player2)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 单例 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>项目-学生管理系统</title>
      <link href="/2019/11/15/%E9%A1%B9%E7%9B%AE-%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
      <url>/2019/11/15/%E9%A1%B9%E7%9B%AE-%E5%AD%A6%E7%94%9F%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="项目-学生管理系统"><a href="#项目-学生管理系统" class="headerlink" title="项目-学生管理系统"></a>项目-学生管理系统</h1><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><p>综合应用已经学习过的知识点：</p><ul><li>变量</li><li>流程控制</li><li>函数</li><li>文件操作</li><li>列表</li><li>字典</li><li>字符串</li></ul><h2 id="系统需求"><a href="#系统需求" class="headerlink" title="系统需求"></a>系统需求</h2><ol><li><p>程序启动，显示功能菜单</p><p><img src="功能菜单.png" alt="功能菜单"></p></li><li><p>用户根据不同数字选择不同功能</p></li><li><p>学生记录的信息有姓名，性别和电话</p></li></ol><h2 id="方法一：使用全局变量保存信息"><a href="#方法一：使用全局变量保存信息" class="headerlink" title="方法一：使用全局变量保存信息"></a>方法一：使用全局变量保存信息</h2><h3 id="主函数"><a href="#主函数" class="headerlink" title="主函数"></a>主函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    show_menu()</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        value = input(<span class="string">"请输入你的选择："</span>)</span><br><span class="line">        value = int(value)</span><br><span class="line">        <span class="comment"># 新增学生记录</span></span><br><span class="line">        <span class="keyword">if</span> value == <span class="number">1</span>:</span><br><span class="line">            add_student()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 查询学生记录</span></span><br><span class="line">        <span class="keyword">elif</span> value == <span class="number">2</span>:</span><br><span class="line">            find_name = input(<span class="string">"请输入要查询的学生姓名："</span>)</span><br><span class="line">            print(stu_find(find_name))</span><br><span class="line">            </span><br><span class="line">        <span class="comment"># 删除学生记录</span></span><br><span class="line">        <span class="keyword">elif</span> value == <span class="number">3</span>:</span><br><span class="line">            del_stu_name = input(<span class="string">"请输入要删除学生的姓名："</span>)</span><br><span class="line">            stu_del(del_stu_name)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 显示所有学生记录</span></span><br><span class="line">        <span class="keyword">elif</span> value == <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">for</span> x <span class="keyword">in</span> STUDENT:</span><br><span class="line">                print(x)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 退出系统</span></span><br><span class="line">        <span class="keyword">elif</span> value == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"请输入正确的选项!"</span>)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h3 id="功能菜单显示函数"><a href="#功能菜单显示函数" class="headerlink" title="功能菜单显示函数"></a>功能菜单显示函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_menu</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"1. 新增学生记录"</span>)</span><br><span class="line">    print(<span class="string">"2. 查询学生记录"</span>)</span><br><span class="line">    print(<span class="string">"3. 删除学生记录"</span>)</span><br><span class="line">    print(<span class="string">"4. 显示全部学生"</span>)</span><br><span class="line">    print(<span class="string">"0. 退出管理系统"</span>)</span><br></pre></td></tr></table></figure><h3 id="新增学生记录"><a href="#新增学生记录" class="headerlink" title="新增学生记录"></a>新增学生记录</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_student</span><span class="params">()</span>:</span></span><br><span class="line">    stu_name = input(<span class="string">"请输入学生姓名："</span>)</span><br><span class="line">    stu_sex = input(<span class="string">"请输入学生性别："</span>)</span><br><span class="line">    stu_phone = input(<span class="string">"请输入学生电话："</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 定义一个字典用来存学生信息</span></span><br><span class="line">    student = &#123;&#125;</span><br><span class="line">    student[<span class="string">'name'</span>] = stu_name</span><br><span class="line">    student[<span class="string">'sex'</span>] = stu_sex</span><br><span class="line">    student[<span class="string">'phone'</span>] = stu_phone</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 将每个学生的信息字典加入到总列表中</span></span><br><span class="line">    STUDENT.append(student)</span><br><span class="line">    print(<span class="string">"新增学生成功"</span>)</span><br></pre></td></tr></table></figure><h3 id="查询学生信息"><a href="#查询学生信息" class="headerlink" title="查询学生信息"></a>查询学生信息</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">stu_find</span><span class="params">(find_stu_name)</span>:</span></span><br><span class="line">    is_value = <span class="literal">False</span></span><br><span class="line">    <span class="comment"># 遍历列表</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> STUDENT:</span><br><span class="line">        <span class="comment"># 如果找到该学生，返回列表中的成员字典</span></span><br><span class="line">        <span class="keyword">if</span> find_stu_name == x[<span class="string">'name'</span>]:</span><br><span class="line">            is_value = <span class="literal">True</span></span><br><span class="line">            <span class="keyword">return</span> x</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            is_value = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span></span><br></pre></td></tr></table></figure><h3 id="删除学生信息"><a href="#删除学生信息" class="headerlink" title="删除学生信息"></a>删除学生信息</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">stu_del</span><span class="params">(del_stu_name)</span>:</span></span><br><span class="line">    is_value = stu_find(del_stu_name)</span><br><span class="line">    <span class="keyword">if</span> is_value == <span class="number">-1</span>:</span><br><span class="line">        print(<span class="string">"数据库中不存在此学生记录"</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        STUDENT.remove(is_value)</span><br></pre></td></tr></table></figure><h3 id="程序运行结果"><a href="#程序运行结果" class="headerlink" title="程序运行结果"></a>程序运行结果</h3><p><img src="程序运行结果.png" alt="程序运行结果"></p><h2 id="方法二：使用文本保存学生记录改写"><a href="#方法二：使用文本保存学生记录改写" class="headerlink" title="方法二：使用文本保存学生记录改写"></a>方法二：使用文本保存学生记录改写</h2><h3 id="主函数-1"><a href="#主函数-1" class="headerlink" title="主函数"></a>主函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    show_menu()</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        value = input(<span class="string">"请输入你的选择："</span>)</span><br><span class="line">        value = int(value)</span><br><span class="line">        <span class="keyword">if</span> value == <span class="number">1</span>:</span><br><span class="line">            add_student()</span><br><span class="line">        <span class="keyword">elif</span> value == <span class="number">2</span>:</span><br><span class="line">            find_name = input(<span class="string">"请输入要查询的学生姓名："</span>)</span><br><span class="line">            stu_find(find_name)</span><br><span class="line">        <span class="keyword">elif</span> value == <span class="number">3</span>:</span><br><span class="line">            del_stu_name = input(<span class="string">"请输入要删除学生的姓名："</span>)</span><br><span class="line">            stu_del(del_stu_name)</span><br><span class="line">        <span class="keyword">elif</span> value == <span class="number">4</span>:</span><br><span class="line">            show_all()</span><br><span class="line">        <span class="keyword">elif</span> value == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"请输入正确的选项!"</span>)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h3 id="新增学生记录-1"><a href="#新增学生记录-1" class="headerlink" title="新增学生记录"></a>新增学生记录</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_student</span><span class="params">()</span>:</span></span><br><span class="line">    stu_name = input(<span class="string">"请输入学生姓名："</span>)</span><br><span class="line">    stu_sex = input(<span class="string">"请输入学生性别："</span>)</span><br><span class="line">    stu_phone = input(<span class="string">"请输入学生电话："</span>)</span><br><span class="line"><span class="comment"># 以“|”来分隔</span></span><br><span class="line">    line = <span class="string">"姓名：&#123;0&#125;|性别：&#123;1&#125;|电话：&#123;2&#125;\n"</span>.format(stu_name,stu_sex,stu_phone)</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">"student_information.txt"</span>, <span class="string">"a"</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        fp.writelines(line)</span><br><span class="line">    print(<span class="string">"新增学生成功"</span>)</span><br></pre></td></tr></table></figure><h3 id="查询学生记录"><a href="#查询学生记录" class="headerlink" title="查询学生记录"></a>查询学生记录</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">stu_find</span><span class="params">(find_stu_name)</span>:</span></span><br><span class="line">    num = <span class="number">0</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">"student_information.txt"</span>, <span class="string">"r"</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> fp:</span><br><span class="line">            <span class="comment"># 去除每行最后的一个字符“\n”，然后以“|”分隔字符串</span></span><br><span class="line">            infos = line.replace(<span class="string">"\n"</span>, <span class="string">""</span>).split(<span class="string">"|"</span>)</span><br><span class="line">            <span class="comment"># 然后以“：”将上面分隔完成的继续以“：”分隔成列表</span></span><br><span class="line">            student_list = [x.split(<span class="string">'：'</span>,<span class="number">1</span>) <span class="keyword">for</span> x <span class="keyword">in</span> infos]</span><br><span class="line">            <span class="comment"># 将列表转化成字典</span></span><br><span class="line">            student_dict = dict(student_list)</span><br><span class="line">            <span class="comment">#print(student_dict)</span></span><br><span class="line">            <span class="keyword">if</span> student_dict.get(<span class="string">'姓名'</span>) == find_stu_name:</span><br><span class="line">                num += <span class="number">1</span></span><br><span class="line">                print(student_dict)</span><br><span class="line">        <span class="keyword">if</span> num == <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">"数据库中没有此人"</span>)</span><br></pre></td></tr></table></figure><h3 id="删除学生信息-1"><a href="#删除学生信息-1" class="headerlink" title="删除学生信息"></a>删除学生信息</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">stu_del</span><span class="params">(del_stu_name)</span>:</span></span><br><span class="line">    temp = <span class="string">''</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">"student_information.txt"</span>, <span class="string">"r+"</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> fp:</span><br><span class="line">            <span class="keyword">if</span> del_stu_name <span class="keyword">in</span> line:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                temp = line</span><br><span class="line">    fp.close()</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">"student_information.txt"</span>, <span class="string">"w+"</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        fp.write(temp)</span><br></pre></td></tr></table></figure><p>这里的逻辑就是去一行一行的读，如果那行存在要删除学生的姓名的字符串 就不把那行缓存到temp变量中，等读完再写回源文件来进行删除操作</p><h2 id="方法三：使用类以及封装的思想"><a href="#方法三：使用类以及封装的思想" class="headerlink" title="方法三：使用类以及封装的思想"></a>方法三：使用类以及封装的思想</h2><h3 id="学生类"><a href="#学生类" class="headerlink" title="学生类"></a>学生类</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, student_name, student_sex, student_phone)</span>:</span></span><br><span class="line">        self.name = student_name</span><br><span class="line">        self.sex = student_sex</span><br><span class="line">        self.phone = student_phone</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">line_to_stu</span><span class="params">(cls,line)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> line == <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            student_name, student_sex,student_phone = line.replace(<span class="string">'\n'</span>,<span class="string">''</span>).split(<span class="string">'|'</span>)</span><br><span class="line">            student = Student(student_name,student_sex,student_phone)</span><br><span class="line">        <span class="keyword">return</span> student</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">stu_to_line</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"&#123;name&#125;|&#123;sex&#125;|&#123;phone&#125;\n"</span>.format(name = self.name,sex = self.sex,phone = self.phone)</span><br></pre></td></tr></table></figure><h3 id="学生的管理类"><a href="#学生的管理类" class="headerlink" title="学生的管理类"></a>学生的管理类</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StuManager</span><span class="params">(object)</span>:</span></span><br><span class="line">    __instance = <span class="literal">None</span></span><br><span class="line">    __filename = <span class="string">'student_information.txt'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__new__</span><span class="params">(cls, *args, **kwargs)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> cls.__instance:</span><br><span class="line">            cls.__instance = super(StuManager,cls).__new__(cls, *args, **kwargs)</span><br><span class="line">        <span class="keyword">return</span> cls.__instance</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_student</span><span class="params">(self,student_name, student_sex, student_phone)</span>:</span></span><br><span class="line">        student = Student(student_name,student_sex,student_phone)</span><br><span class="line">        <span class="keyword">with</span> open(StuManager.__filename,<span class="string">'a'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">            fp.write(student.stu_to_line())</span><br><span class="line">        fp.close()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">search_student</span><span class="params">(self,student_name)</span>:</span></span><br><span class="line">        <span class="keyword">with</span> open(StuManager.__filename, <span class="string">'r'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">            <span class="keyword">for</span> line <span class="keyword">in</span> fp:</span><br><span class="line">                student = Student.line_to_stu(line)</span><br><span class="line">                <span class="keyword">if</span> student.name == student_name:</span><br><span class="line">                    <span class="keyword">return</span> student</span><br><span class="line">        fp.close()</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete_student</span><span class="params">(self,student_name)</span>:</span></span><br><span class="line">        temp = <span class="string">''</span></span><br><span class="line">        num = <span class="number">0</span></span><br><span class="line">        <span class="keyword">with</span> open(StuManager.__filename, <span class="string">'r'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">            <span class="keyword">for</span> line <span class="keyword">in</span> fp.readlines():</span><br><span class="line">                <span class="keyword">if</span> student_name <span class="keyword">in</span> line:</span><br><span class="line">                    num += <span class="number">1</span></span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    temp += line</span><br><span class="line">        fp.close()</span><br><span class="line">        <span class="keyword">if</span> num == <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">"无此人的记录"</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">with</span> open(StuManager.__filename,<span class="string">'w'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">            fp.write(temp)</span><br><span class="line">        fp.close()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list_all_student</span><span class="params">(self)</span>:</span></span><br><span class="line">        all_student = []</span><br><span class="line">        <span class="keyword">with</span> open(StuManager.__filename, <span class="string">'r'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">            <span class="keyword">for</span> line <span class="keyword">in</span> fp:</span><br><span class="line">                student = Student.line_to_stu(line)</span><br><span class="line">                <span class="keyword">if</span> student == <span class="literal">None</span>:</span><br><span class="line">                    print(<span class="string">"一个学生的记录都没有"</span>)</span><br><span class="line">                    <span class="keyword">return</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    all_student.append(student)</span><br><span class="line">        fp.close()</span><br><span class="line">        <span class="keyword">return</span> all_student</span><br></pre></td></tr></table></figure><h3 id="用来执行的流程类"><a href="#用来执行的流程类" class="headerlink" title="用来执行的流程类"></a>用来执行的流程类</h3><blockquote><p>主要就是对学生的管理类进行再次封装</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Application</span><span class="params">(object)</span>:</span></span><br><span class="line">    __instance = <span class="literal">None</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__new__</span><span class="params">(cls, *args, **kwargs)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> cls.__instance:</span><br><span class="line">            cls.__instance = super(Application, cls).__new__(cls, *args, **kwargs)</span><br><span class="line">        <span class="keyword">return</span> cls.__instance</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__add_new_student</span><span class="params">(self)</span>:</span></span><br><span class="line">        stu_name = input(<span class="string">"请输入学生姓名："</span>)</span><br><span class="line">        stu_sex = input(<span class="string">"请输入学生性别："</span>)</span><br><span class="line">        stu_phone = input(<span class="string">"请输入学生电话："</span>)</span><br><span class="line">        student_manager.add_student(stu_name,stu_sex,stu_phone)</span><br><span class="line">        print(<span class="string">"新增学生成功"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__find_student</span><span class="params">(self)</span>:</span></span><br><span class="line">        student_name = input(<span class="string">"请输入想要查询的学生姓名："</span>)</span><br><span class="line">        student = student_manager.search_student(student_name)</span><br><span class="line">        <span class="keyword">if</span> student:</span><br><span class="line">            print(<span class="string">"name\t\tsex\t\tphone"</span>)</span><br><span class="line">            print(<span class="string">"&#123;0&#125;\t\t&#123;1&#125;\t\t&#123;2&#125;"</span>.format(student.name, student.sex, student.phone))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"没有此学生的记录"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__del_student</span><span class="params">(self)</span>:</span></span><br><span class="line">        student_name = input(<span class="string">"请输入想要删除的学生姓名："</span>)</span><br><span class="line">        student = student_manager.delete_student(student_name)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__list_all_student</span><span class="params">(self)</span>:</span></span><br><span class="line">        all_student = student_manager.list_all_student()</span><br><span class="line">        print(<span class="string">"name\t\tsex\t\tphone"</span>)</span><br><span class="line">        <span class="keyword">for</span> student <span class="keyword">in</span> all_student:</span><br><span class="line">            print(<span class="string">"&#123;0&#125;\t\t&#123;1&#125;\t\t&#123;2&#125;"</span>.format(student.name,student.sex,student.phone))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            print(<span class="string">"1. 新增学生记录"</span>)</span><br><span class="line">            print(<span class="string">"2. 查询学生记录"</span>)</span><br><span class="line">            print(<span class="string">"3. 删除学生记录"</span>)</span><br><span class="line">            print(<span class="string">"4. 显示全部学生"</span>)</span><br><span class="line">            print(<span class="string">"0. 退出管理系统"</span>)</span><br><span class="line">            option = input(<span class="string">"请输入操作序号："</span>)</span><br><span class="line">            <span class="keyword">if</span> option == <span class="string">'0'</span>:</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            <span class="keyword">elif</span> option == <span class="string">'1'</span>:</span><br><span class="line">                app.__add_new_student()</span><br><span class="line">            <span class="keyword">elif</span> option == <span class="string">'2'</span>:</span><br><span class="line">                app.__find_student()</span><br><span class="line">            <span class="keyword">elif</span> option == <span class="string">'3'</span>:</span><br><span class="line">                app.__del_student()</span><br><span class="line">            <span class="keyword">elif</span> option == <span class="string">'4'</span>:</span><br><span class="line">                app.__list_all_student()</span><br></pre></td></tr></table></figure><h3 id="主函数-2"><a href="#主函数-2" class="headerlink" title="主函数"></a>主函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">student_manager = StuManager()</span><br><span class="line">app = Application()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    app.run()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>本篇以三种方法实现了学生管理系统，待后续学了数据库的接口在进行优化。本篇有些函数只是为了夯实基础故意这么设计，其实不必这么麻烦。</p>]]></content>
      
      
      <categories>
          
          <category> python学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目 </tag>
            
            <tag> 学生管理系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>类属性和类方法</title>
      <link href="/2019/11/09/%E7%B1%BB%E5%B1%9E%E6%80%A7%E5%92%8C%E7%B1%BB%E6%96%B9%E6%B3%95/"/>
      <url>/2019/11/09/%E7%B1%BB%E5%B1%9E%E6%80%A7%E5%92%8C%E7%B1%BB%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="类属性和类方法"><a href="#类属性和类方法" class="headerlink" title="类属性和类方法"></a>类属性和类方法</h1><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ul><li>类的结构</li><li>类属性和实例属性</li><li>类方法和静态方法</li></ul><h2 id="01-类的结构"><a href="#01-类的结构" class="headerlink" title="01. 类的结构"></a>01. 类的结构</h2><h3 id="1-1-术语-——-实例"><a href="#1-1-术语-——-实例" class="headerlink" title="1.1 术语 —— 实例"></a>1.1 术语 —— 实例</h3><ol><li><p>使用面相对象开发，<strong>第 1 步</strong> 是设计 <strong>类</strong></p></li><li><p>使用类名()创建对象，创建对象的动作有两步：</p><ul><li>1) 在内存中为对象 <strong>分配空间</strong></li><li>2) 调用初始化方法 <code>__init__</code> 为 <strong>对象初始化</strong></li></ul></li><li><p>对象创建后，<strong>内存</strong> 中就有了一个对象的 <strong>实实在在</strong> 的存在 —— <strong>实例</strong></p></li></ol><p><img src="017_类的结构示意图I.png" alt="类的结构示意图I"></p><p>因此，通常也会把：</p><ol><li>创建出来的 <strong>对象</strong> 叫做 <strong>类</strong> 的 <strong>实例</strong></li><li>创建对象的 <strong>动作</strong> 叫做 <strong>实例化</strong></li><li><strong>对象的属性</strong> 叫做 <strong>实例属性</strong></li><li><strong>对象调用的方法</strong> 叫做 <strong>实例方法</strong></li></ol><p>在程序执行时：</p><ol><li><p>对象各自拥有自己的 <strong>实例属性</strong></p></li><li><p>调用对象方法，可以通过<code>self.</code></p><ul><li>访问自己的属性</li><li>调用自己的方法</li></ul></li></ol><p><strong>结论</strong></p><ul><li><strong>每一个对象</strong> 都有自己 <strong>独立的内存空间</strong>，<strong>保存各自不同的属性</strong></li><li><strong>多个对象的方法</strong>，<strong>在内存中只有一份</strong>，在调用方法时，<strong>需要把对象的引用</strong> 传递到方法内部</li></ul><h3 id="1-2-类是一个特殊的对象"><a href="#1-2-类是一个特殊的对象" class="headerlink" title="1.2 类是一个特殊的对象"></a>1.2 类是一个特殊的对象</h3><blockquote><p><code>Python</code> 中 <strong>一切皆对象</strong>：</p><ul><li><code>class AAA:</code> 定义的类属于 <strong>类对象</strong></li><li><code>obj1 = AAA()</code> 属于 <strong>实例对象</strong></li></ul></blockquote><ul><li><p>在程序运行时，<strong>类</strong> 同样 <strong>会被加载到内存</strong></p></li><li><p>在 <code>Python</code> 中，<strong>类</strong> 是一个特殊的对象 —— <strong>类对象</strong></p></li><li><p>在程序运行时，<strong>类对象</strong> 在内存中 <strong>只有一份</strong>，使用 <strong>一个类</strong> 可以创建出 <strong>很多个对象实例</strong></p></li><li><p>除了封装实例的属性和方法外，类对象还可以拥有自己的属性和方法</p><ol><li><strong>类属性</strong></li><li><strong>类方法</strong></li></ol></li><li><p>通过 <strong>类名.</strong> 的方式可以 <strong>访问类的属性</strong> 或者 <strong>调用类的方法</strong></p></li></ul><p><img src="017_类的结构示意图II.png" alt="类的结构示意图II"></p><h2 id="02-类属性和实例属性"><a href="#02-类属性和实例属性" class="headerlink" title="02. 类属性和实例属性"></a>02. 类属性和实例属性</h2><h3 id="2-1-概念和使用"><a href="#2-1-概念和使用" class="headerlink" title="2.1 概念和使用"></a>2.1 概念和使用</h3><ul><li><strong>类属性</strong> 就是给 <strong>类对象</strong> 中定义的 <strong>属性</strong></li><li>通常用来记录 <strong>与这个类相关</strong> 的特征</li><li><strong>类属性</strong> <strong>不会用于</strong>记录 <strong>具体对象的特征</strong></li></ul><p><strong>示例需求</strong></p><ul><li>定义一个 <strong>工具类</strong></li><li>每件工具都有自己的 <code>name</code></li><li><strong>需求</strong> —— 知道使用这个类，创建了多少个工具对象？</li></ul><p><img src="018_类属性案例I.png" alt="类属性案例I"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tool</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 使用赋值语句，定义类属性，记录创建工具对象的总数</span></span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 针对类属性做一个计数+1</span></span><br><span class="line">        Tool.count += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建工具对象</span></span><br><span class="line">tool1 = Tool(<span class="string">"斧头"</span>)</span><br><span class="line">tool2 = Tool(<span class="string">"榔头"</span>)</span><br><span class="line">tool3 = Tool(<span class="string">"铁锹"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 知道使用 Tool 类到底创建了多少个对象?</span></span><br><span class="line">print(<span class="string">"现在创建了 %d 个工具"</span> % Tool.count)</span><br></pre></td></tr></table></figure><h3 id="2-2-属性的获取机制（科普）"><a href="#2-2-属性的获取机制（科普）" class="headerlink" title="2.2 属性的获取机制（科普）"></a>2.2 属性的获取机制（科普）</h3><ul><li>在 <code>Python</code> 中 <strong>属性的获取</strong> 存在一个 <strong>向上查找机制</strong></li></ul><p><img src="019_通过对象访问类属性.png" alt="通过对象访问类属性"></p><ul><li>因此，要访问类属性有两种方式：<ol><li><strong>类名.类属性</strong></li><li><strong>对象.类属性</strong> （不推荐）</li></ol></li></ul><p><strong>注意</strong></p><ul><li>如果使用 <code>对象.类属性 = 值</code> 赋值语句，只会 <strong>给对象添加一个属性</strong>，而不会影响到 <strong>类属性的值</strong></li></ul><h2 id="03-类方法和静态方法"><a href="#03-类方法和静态方法" class="headerlink" title="03. 类方法和静态方法"></a>03. 类方法和静态方法</h2><h3 id="3-1-类方法"><a href="#3-1-类方法" class="headerlink" title="3.1 类方法"></a>3.1 类方法</h3><ul><li><p>类属性就是针对类对象定义的属性</p><ul><li>使用 <strong>赋值语句</strong> 在 <code>class</code> 关键字下方可以定义 <strong>类属性</strong></li><li><strong>类属性</strong> 用于记录 <strong>与这个类相关</strong> 的特征</li></ul></li><li><p>类方法就是针对类对象 定义的方法</p><ul><li>在 <strong>类方法</strong> 内部可以直接访问 <strong>类属性</strong> 或者调用其他的 <strong>类方法</strong></li></ul></li></ul><p><strong>语法如下</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@classmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> 类方法名<span class="params">(cls)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><p>类方法需要用 <strong>修饰器</strong> <code>@classmethod</code> 来标识，<strong>告诉解释器这是一个类方法</strong></p></li><li><p>类方法的第一个参数应该是<code>cls</code></p><ul><li>由 <strong>哪一个类</strong> 调用的方法，方法内的 <code>cls</code> 就是 <strong>哪一个类的引用</strong></li><li>这个参数和 <strong>实例方法</strong> 的第一个参数是 <code>self</code> 类似</li><li><strong>提示</strong> 使用其他名称也可以，不过习惯使用 <code>cls</code></li></ul></li><li><p>通过 <strong>类名.</strong> 调用 <strong>类方法</strong>，<strong>调用方法时</strong>，不需要传递 <code>cls</code> 参数</p></li><li><p>在方法内部</p><ul><li>可以通过 <code>cls.</code> <strong>访问类的属性</strong></li><li>也可以通过 <code>cls.</code> <strong>调用其他的类方法</strong></li></ul></li></ul><p><strong>示例需求</strong></p><ul><li>定义一个 <strong>工具类</strong></li><li>每件工具都有自己的 <code>name</code></li><li><strong>需求</strong> —— 在 <strong>类</strong> 封装一个 <code>show_tool_count</code> 的类方法，输出使用当前这个类，创建的对象个数</li></ul><p><img src="020_类方法案例.png" alt="类方法案例"></p><blockquote><p>在类方法内部，可以直接使用 <code>cls</code> 访问 <strong>类属性</strong> 或者 <strong>调用类方法</strong></p></blockquote><h3 id="3-2-静态方法"><a href="#3-2-静态方法" class="headerlink" title="3.2 静态方法"></a>3.2 静态方法</h3><ul><li>在开发时，如果需要在 <strong>类</strong> 中封装一个方法，这个方法：<ul><li>既 <strong>不需要</strong> 访问 <strong>实例属性</strong> 或者调用 <strong>实例方法</strong></li><li>也 <strong>不需要</strong> 访问 <strong>类属性</strong> 或者调用 <strong>类方法</strong></li></ul></li><li>这个时候，可以把这个方法封装成一个 <strong>静态方法</strong></li></ul><p><strong>语法如下</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@staticmethod</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> 静态方法名<span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>静态方法</strong> 需要用 <strong>修饰器</strong> <code>@staticmethod</code> 来标识，<strong>告诉解释器这是一个静态方法</strong></li><li>通过 <strong>类名.</strong> 调用 <strong>静态方法</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span><span class="params">(object)</span>:</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 狗对象计数</span></span><br><span class="line">    dog_count = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">()</span>:</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 不需要访问实例属性也不需要访问类属性的方法</span></span><br><span class="line">        print(<span class="string">"狗在跑..."</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        self.name = name</span><br></pre></td></tr></table></figure><h3 id="3-3-方法综合案例"><a href="#3-3-方法综合案例" class="headerlink" title="3.3 方法综合案例"></a>3.3 方法综合案例</h3><p><strong>需求</strong></p><ol><li>设计一个 <code>Game</code> 类</li><li>属性：<ul><li>定义一个 <strong>类属性</strong> <code>top_score</code> 记录游戏的 <strong>历史最高分</strong></li><li>定义一个 <strong>实例属性</strong> <code>player_name</code> 记录 <strong>当前游戏的玩家姓名</strong></li></ul></li><li>方法：<ul><li><strong>静态方法</strong> <code>show_help</code> 显示游戏帮助信息</li><li><strong>类方法</strong> <code>show_top_score</code> 显示历史最高分</li><li><strong>实例方法</strong> <code>start_game</code> 开始当前玩家的游戏</li></ul></li><li>主程序步骤<ul><li>1) 查看帮助信息</li><li>2) 查看历史最高分</li><li>3) 创建游戏对象，开始游戏</li></ul></li></ol><p><img src="021_方法综合案例.png" alt="方法综合案例"></p><h4 id="案例小结"><a href="#案例小结" class="headerlink" title="案例小结"></a>案例小结</h4><ol><li><p>实例方法—— 方法内部需要访问<code>实例属性</code></p><ul><li><strong>实例方法</strong> 内部可以使用 <strong>类名.</strong> 访问类属性</li></ul></li><li><p><strong>类方法</strong> —— 方法内部 <strong>只</strong> 需要访问 <strong>类属性</strong></p></li><li><p><strong>静态方法</strong> —— 方法内部，不需要访问 <strong>实例属性</strong> 和 <strong>类属性</strong></p></li></ol><p><strong>提问</strong></p><p>如果方法内部 即需要访问 <strong>实例属性</strong>，又需要访问 <strong>类属性</strong>，应该定义成什么方法？</p><p><strong>答案</strong></p><ul><li>应该定义 <strong>实例方法</strong></li><li>因为，<strong>类只有一个</strong>，在 <strong>实例方法</strong> 内部可以使用 <strong>类名.</strong> 访问类属性</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Game</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 游戏最高分，类属性</span></span><br><span class="line">    top_score = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_help</span><span class="params">()</span>:</span></span><br><span class="line">        print(<span class="string">"帮助信息：让僵尸走进房间"</span>)</span><br><span class="line">        </span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show_top_score</span><span class="params">(cls)</span>:</span></span><br><span class="line">        print(<span class="string">"游戏最高分是 %d"</span> % cls.top_score)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, player_name)</span>:</span></span><br><span class="line">        self.player_name = player_name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">start_game</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"[%s] 开始游戏..."</span> % self.player_name)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 使用类名.修改历史最高分</span></span><br><span class="line">        Game.top_score = <span class="number">999</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 查看游戏帮助</span></span><br><span class="line">Game.show_help()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 查看游戏最高分</span></span><br><span class="line">Game.show_top_score()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 创建游戏对象，开始游戏</span></span><br><span class="line">game = Game(<span class="string">"小明"</span>)</span><br><span class="line"></span><br><span class="line">game.start_game()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4. 游戏结束，查看游戏最高分</span></span><br><span class="line">Game.show_top_score()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 类 </tag>
            
            <tag> 类属性 </tag>
            
            <tag> 类方法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多态</title>
      <link href="/2019/11/09/%E5%A4%9A%E6%80%81/"/>
      <url>/2019/11/09/%E5%A4%9A%E6%80%81/</url>
      
        <content type="html"><![CDATA[<h1 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h1><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ul><li>多态</li></ul><p><strong>面向对象三大特性</strong></p><ol><li><p>封装根据职责将属性和方法封装到一个抽象的类中</p><ul><li>定义类的准则</li></ul></li><li><p>继承实现代码的重用，相同的代码不需要重复的编写</p><ul><li>设计类的技巧</li><li>子类针对自己特有的需求，编写特定的代码</li></ul></li><li><p><strong>多态</strong> 不同的 <strong>子类对象</strong> 调用相同的 <strong>父类方法</strong>，产生不同的执行结果</p><ul><li><strong>多态</strong> 可以 <strong>增加代码的灵活度</strong></li><li>以 <strong>继承</strong> 和 <strong>重写父类方法</strong> 为前提</li><li>是调用方法的技巧，<strong>不会影响到类的内部设计</strong></li></ul></li></ol><p><img src="016_多态示意图.png" alt="多态示意图"></p><h2 id="多态案例演练"><a href="#多态案例演练" class="headerlink" title="多态案例演练"></a>多态案例演练</h2><p><strong>需求</strong></p><ol><li><p>在<code>Dog</code>类中封装方法<code>game</code></p><ul><li>普通狗只是简单的玩耍</li></ul></li><li><p>定义<code>XiaoTianDog</code>继承自<code>Dog</code>，并且重写<code>game</code>方法</p><ul><li>哮天犬需要在天上玩耍</li></ul></li><li><p>定义<code>Person</code>类，并且封装一个和狗玩的方法</p><ul><li>在方法内部，直接让 <strong>狗对象</strong> 调用 <code>game</code> 方法</li></ul></li></ol><p><img src="016_多态.png" alt="多态"></p><p><strong>案例小结</strong></p><ul><li><code>Person</code>类中只需要让狗对象调用<code>game</code>方法，而不关心具体是什么狗</li><li><p><code>game</code> 方法是在 <code>Dog</code> 父类中定义的</p></li><li><p>在程序执行时，传入不同的 <strong>狗对象</strong> 实参，就会产生不同的执行效果</p></li></ul><blockquote><p><strong>多态</strong> 更容易编写出出通用的代码，做出通用的编程，以适应需求的不断变化！</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">game</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"%s 蹦蹦跳跳的玩耍..."</span> % self.name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">XiaoTianDog</span><span class="params">(Dog)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">game</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"%s 飞到天上去玩耍..."</span> % self.name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">game_with_dog</span><span class="params">(self, dog)</span>:</span></span><br><span class="line"></span><br><span class="line">        print(<span class="string">"%s 和 %s 快乐的玩耍..."</span> % (self.name, dog.name))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 让狗玩耍</span></span><br><span class="line">        dog.game()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 创建一个狗对象</span></span><br><span class="line"><span class="comment"># wangcai = Dog("旺财")</span></span><br><span class="line">wangcai = XiaoTianDog(<span class="string">"飞天旺财"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 创建一个小明对象</span></span><br><span class="line">xiaoming = Person(<span class="string">"小明"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 让小明调用和狗玩的方法</span></span><br><span class="line">xiaoming.game_with_dog(wangcai)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 类 </tag>
            
            <tag> 多态 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>继承</title>
      <link href="/2019/11/09/%E7%BB%A7%E6%89%BF/"/>
      <url>/2019/11/09/%E7%BB%A7%E6%89%BF/</url>
      
        <content type="html"><![CDATA[<h1 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h1><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ul><li>单继承</li><li>多继承</li></ul><p><strong>面向对象三大特性</strong></p><ol><li><strong>封装</strong> 根据 <strong>职责</strong> 将 <strong>属性</strong> 和 <strong>方法</strong> <strong>封装</strong> 到一个抽象的 <strong>类</strong> 中</li><li><strong>继承</strong> <strong>实现代码的重用</strong>，相同的代码不需要重复的编写</li><li><strong>多态</strong> 不同的对象调用相同的方法，产生不同的执行结果，<strong>增加代码的灵活度</strong></li></ol><h2 id="01-单继承"><a href="#01-单继承" class="headerlink" title="01. 单继承"></a>01. 单继承</h2><h3 id="1-1-继承的概念、语法和特点"><a href="#1-1-继承的概念、语法和特点" class="headerlink" title="1.1 继承的概念、语法和特点"></a>1.1 继承的概念、语法和特点</h3><p><strong>继承的概念</strong>：<strong>子类</strong> 拥有 <strong>父类</strong> 的所有 <strong>方法</strong> 和 <strong>属性</strong></p><p><img src="011_继承对比图示.png" alt="继承对比图示"></p><h4 id="1-继承的语法"><a href="#1-继承的语法" class="headerlink" title="1) 继承的语法"></a>1) 继承的语法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> 类名<span class="params">(父类名)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>子类</strong> 继承自 <strong>父类</strong>，可以直接 <strong>享受</strong> 父类中已经封装好的方法，不需要再次开发</li><li><strong>子类</strong> 中应该根据 <strong>职责</strong>，封装 <strong>子类特有的</strong> <strong>属性和方法</strong></li></ul><h4 id="2-专业术语"><a href="#2-专业术语" class="headerlink" title="2) 专业术语"></a>2) 专业术语</h4><ul><li><code>Dog</code> 类是 <code>Animal</code> 类的<strong>子类</strong>，<code>Animal</code> 类是 <code>Dog</code> 类的<strong>父类</strong>，<code>Dog</code> 类从 <code>Animal</code> 类<strong>继承</strong></li><li><code>Dog</code> 类是 <code>Animal</code> 类的<strong>派生类</strong>，<code>Animal</code> 类是 <code>Dog</code> 类的<strong>基类</strong>，<code>Dog</code> 类从 <code>Animal</code> 类<strong>派生</strong></li></ul><h4 id="3-继承的传递性"><a href="#3-继承的传递性" class="headerlink" title="3) 继承的传递性"></a>3) 继承的传递性</h4><ul><li><code>C</code> 类从 <code>B</code> 类继承，<code>B</code> 类又从 <code>A</code> 类继承</li><li>那么 <code>C</code> 类就具有 <code>B</code> 类和 <code>A</code> 类的所有属性和方法</li></ul><p><strong>子类</strong> 拥有 <strong>父类</strong> 以及 <strong>父类的父类</strong> 中封装的所有 <strong>属性</strong> 和 <strong>方法</strong></p><p><strong>提问</strong></p><p><strong>哮天犬</strong> 能够调用 <code>Cat</code> 类中定义的 <code>catch</code> 方法吗？</p><p><strong>答案</strong></p><p><strong>不能</strong>，因为 <strong>哮天犬</strong> 和 <code>Cat</code> 之间没有 <strong>继承</strong> 关系</p><h3 id="1-2-方法的重写"><a href="#1-2-方法的重写" class="headerlink" title="1.2 方法的重写"></a>1.2 方法的重写</h3><ul><li><strong>子类</strong> 拥有 <strong>父类</strong> 的所有 <strong>方法</strong> 和 <strong>属性</strong></li><li><strong>子类</strong> 继承自 <strong>父类</strong>，可以直接 <strong>享受</strong> 父类中已经封装好的方法，不需要再次开发</li></ul><p><strong>应用场景</strong></p><ul><li>当 <strong>父类</strong> 的方法实现不能满足子类需求时，可以对方法进行 <strong>重写(override)</strong></li></ul><p><img src="012_继承方法的重写.png" alt="继承方法的重写"></p><p><strong>重写</strong> 父类方法有两种情况：</p><ol><li><strong>覆盖</strong> 父类的方法</li><li>对父类方法进行 <strong>扩展</strong></li></ol><h4 id="1-覆盖父类的方法"><a href="#1-覆盖父类的方法" class="headerlink" title="1) 覆盖父类的方法"></a>1) 覆盖父类的方法</h4><ul><li>如果在开发中，<strong>父类的方法实现</strong> 和 <strong>子类的方法实现</strong>，<strong>完全不同</strong></li><li>就可以使用 <strong>覆盖</strong> 的方式，<strong>在子类中</strong> <strong>重新编写</strong> 父类的方法实现</li></ul><blockquote><p>具体的实现方式，就相当于在 <strong>子类中</strong> 定义了一个 <strong>和父类同名的方法并且实现</strong></p></blockquote><p>重写之后，在运行时，<strong>只会调用</strong> 子类中重写的方法，而不再会调用 <strong>父类封装的方法</strong></p><h4 id="2-对父类方法进行-扩展"><a href="#2-对父类方法进行-扩展" class="headerlink" title="2) 对父类方法进行 扩展"></a>2) 对父类方法进行 <strong>扩展</strong></h4><ul><li><p>如果在开发中，子类的方法实现中包含父类的方法实现</p><ul><li><strong>父类原本封装的方法实现</strong> 是 <strong>子类方法的一部分</strong></li></ul></li><li><p>就可以使用扩展的方式</p><ol><li><strong>在子类中</strong> <strong>重写</strong> 父类的方法</li><li>在需要的位置使用 <code>super().父类方法</code> 来调用父类方法的执行</li><li>代码其他的位置针对子类的需求，编写 <strong>子类特有的代码实现</strong></li></ol></li></ul><h5 id="关于-super"><a href="#关于-super" class="headerlink" title="关于 super"></a>关于 <code>super</code></h5><ul><li>在 <code>Python</code> 中 <code>super</code> 是一个 <strong>特殊的类</strong></li><li><code>super()</code> 就是使用 <code>super</code> 类创建出来的对象</li><li><strong>最常</strong> 使用的场景就是在 <strong>重写父类方法时</strong>，调用 <strong>在父类中封装的方法实现</strong></li></ul><h5 id="调用父类方法的另外一种方式（知道）"><a href="#调用父类方法的另外一种方式（知道）" class="headerlink" title="调用父类方法的另外一种方式（知道）"></a>调用父类方法的另外一种方式（知道）</h5><blockquote><p>在 <code>Python 2.x</code> 时，如果需要调用父类的方法，还可以使用以下方式：</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">父类名.方法(self)</span><br></pre></td></tr></table></figure><ul><li>这种方式，目前在 <code>Python 3.x</code> 还支持这种方式</li><li>这种方法 <strong>不推荐使用</strong>，因为一旦 <strong>父类发生变化</strong>，方法调用位置的 <strong>类名</strong> 同样需要修改</li></ul><p><strong>提示</strong></p><ul><li>在开发时，<code>父类名</code> 和 <code>super()</code> 两种方式不要混用</li><li>如果使用 <strong>当前子类名</strong> 调用方法，会形成递归调用，<strong>出现死循环</strong></li></ul><h3 id="1-3-父类的-私有属性-和-私有方法"><a href="#1-3-父类的-私有属性-和-私有方法" class="headerlink" title="1.3 父类的 私有属性 和 私有方法"></a>1.3 父类的 私有属性 和 私有方法</h3><ol><li><strong>子类对象</strong> <strong>不能</strong> 在自己的方法内部，<strong>直接</strong> 访问 父类的 <strong>私有属性</strong> 或 <strong>私有方法</strong></li><li><strong>子类对象</strong> 可以通过 <strong>父类</strong> 的 <strong>公有方法</strong> <strong>间接</strong> 访问到 <strong>私有属性</strong> 或 <strong>私有方法</strong></li></ol><blockquote><ul><li><strong>私有属性、方法</strong> 是对象的隐私，不对外公开，<strong>外界</strong> 以及 <strong>子类</strong> 都不能直接访问</li><li><strong>私有属性、方法</strong> 通常用于做一些内部的事情</li></ul></blockquote><p><strong>示例</strong></p><p><img src="013_父类的私有属性和私有方法.png" alt="父类的私有属性和私有方法"></p><ul><li><code>B</code> 的对象不能直接访问 <code>__num2</code> 属性</li><li><code>B</code> 的对象不能在 <code>demo</code> 方法内访问 <code>__num2</code> 属性</li><li><code>B</code> 的对象可以在 <code>demo</code> 方法内，调用父类的 <code>test</code> 方法</li><li>父类的 <code>test</code> 方法内部，能够访问 <code>__num2</code> 属性和 <code>__test</code> 方法</li></ul><h2 id="02-多继承"><a href="#02-多继承" class="headerlink" title="02. 多继承"></a>02. 多继承</h2><p><strong>概念</strong></p><ul><li><strong>子类</strong> 可以拥有 <strong>多个父类</strong>，并且具有 <strong>所有父类</strong> 的 <strong>属性</strong> 和 <strong>方法</strong></li><li>例如：<strong>孩子</strong> 会继承自己 <strong>父亲</strong> 和 <strong>母亲</strong> 的 <strong>特性</strong></li></ul><p><img src="014_多继承.png" alt="多继承"></p><p><strong>语法</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> 子类名<span class="params">(父类名<span class="number">1</span>, 父类名<span class="number">2.</span>..)</span></span></span><br><span class="line"><span class="class">    <span class="title">pass</span></span></span><br></pre></td></tr></table></figure><h3 id="2-1-多继承的使用注意事项"><a href="#2-1-多继承的使用注意事项" class="headerlink" title="2.1 多继承的使用注意事项"></a>2.1 多继承的使用注意事项</h3><p><strong>问题的提出</strong></p><ul><li>如果 <strong>不同的父类</strong> 中存在 <strong>同名的方法</strong>，<strong>子类对象</strong> 在调用方法时，会调用 <strong>哪一个父类中</strong>的方法呢？</li></ul><blockquote><p>提示：<strong>开发时，应该尽量避免这种容易产生混淆的情况！</strong> —— 如果 <strong>父类之间</strong> 存在 <strong>同名的属性或者方法</strong>，应该 <strong>尽量避免</strong> 使用多继承</p></blockquote><p><img src="015_多继承II.png" alt="多继承II"></p><h4 id="Python-中的-MRO-——-方法搜索顺序（知道）"><a href="#Python-中的-MRO-——-方法搜索顺序（知道）" class="headerlink" title="Python 中的 MRO —— 方法搜索顺序（知道）"></a>Python 中的 MRO —— 方法搜索顺序（知道）</h4><ul><li><code>Python</code> 中针对 <strong>类</strong> 提供了一个 <strong>内置属性</strong> <code>__mro__</code> 可以查看 <strong>方法</strong> 搜索顺序</li><li>MRO 是 <code>method resolution order</code>，主要用于 <strong>在多继承时判断 方法、属性 的调用 路径</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(C.__mro__)</span><br></pre></td></tr></table></figure><p><strong>输出结果</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(&lt;class '__main__.C'&gt;, &lt;class '__main__.A'&gt;, &lt;class '__main__.B'&gt;, &lt;class 'object'&gt;)</span><br></pre></td></tr></table></figure><ul><li>在搜索方法时，是按照 <code>__mro__</code> 的输出结果 <strong>从左至右</strong> 的顺序查找的</li><li>如果在当前类中 <strong>找到方法，就直接执行，不再搜索</strong></li><li>如果 <strong>没有找到，就查找下一个类</strong> 中是否有对应的方法，<strong>如果找到，就直接执行，不再搜索</strong></li><li>如果找到最后一个类，还没有找到方法，程序报错</li></ul><h3 id="2-2-新式类与旧式（经典）类"><a href="#2-2-新式类与旧式（经典）类" class="headerlink" title="2.2 新式类与旧式（经典）类"></a>2.2 新式类与旧式（经典）类</h3><blockquote><p><code>object</code> 是 <code>Python</code> 为所有对象提供的 <strong>基类</strong>，提供有一些内置的属性和方法，可以使用 <code>dir</code> 函数查看</p></blockquote><ul><li><strong>新式类</strong>：以 <code>object</code> 为基类的类，<strong>推荐使用</strong></li><li><strong>经典类</strong>：不以 <code>object</code> 为基类的类，<strong>不推荐使用</strong></li><li>在 <code>Python 3.x</code> 中定义类时，如果没有指定父类，会 <strong>默认使用</strong> <code>object</code> 作为该类的 <strong>基类</strong> —— <code>Python 3.x</code> 中定义的类都是 <strong>新式类</strong></li><li>在 <code>Python 2.x</code> 中定义类时，如果没有指定父类，则不会以 <code>object</code> 作为 <strong>基类</strong></li></ul><blockquote><p><strong>新式类</strong> 和 <strong>经典类</strong> 在多继承时 —— <strong>会影响到方法的搜索顺序</strong></p></blockquote><p>为了保证编写的代码能够同时在 <code>Python 2.x</code> 和 <code>Python 3.x</code> 运行！<br>今后在定义类时，<strong>如果没有父类，建议统一继承自 object</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> 类名<span class="params">(object)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 类 </tag>
            
            <tag> 继承 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>私有属性和私有方法</title>
      <link href="/2019/11/09/%E7%A7%81%E6%9C%89%E5%B1%9E%E6%80%A7%E5%92%8C%E7%A7%81%E6%9C%89%E6%96%B9%E6%B3%95/"/>
      <url>/2019/11/09/%E7%A7%81%E6%9C%89%E5%B1%9E%E6%80%A7%E5%92%8C%E7%A7%81%E6%9C%89%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="私有属性和私有方法"><a href="#私有属性和私有方法" class="headerlink" title="私有属性和私有方法"></a>私有属性和私有方法</h1><h2 id="01-应用场景及定义方式"><a href="#01-应用场景及定义方式" class="headerlink" title="01. 应用场景及定义方式"></a>01. 应用场景及定义方式</h2><p><strong>应用场景</strong></p><ul><li>在实际开发中，<strong>对象</strong> 的 <strong>某些属性或方法</strong> 可能只希望 <strong>在对象的内部被使用</strong>，而 <strong>不希望在外部被访问到</strong></li><li><strong>私有属性</strong> 就是 <strong>对象</strong> 不希望公开的 <strong>属性</strong></li><li><strong>私有方法</strong> 就是 <strong>对象</strong> 不希望公开的 <strong>方法</strong></li></ul><p><strong>定义方式</strong></p><ul><li>在 <strong>定义属性或方法时</strong>，在 <strong>属性名或者方法名前</strong> 增加 <strong>两个下划线</strong>，定义的就是 <strong>私有</strong> 属性或方法</li></ul><p><img src="010_私有属性和方法.png" alt="私有属性和方法"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Women</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name)</span>:</span></span><br><span class="line"></span><br><span class="line">        self.name = name</span><br><span class="line">        <span class="comment"># 不要问女生的年龄</span></span><br><span class="line">        self.__age = <span class="number">18</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__secret</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"我的年龄是 %d"</span> % self.__age)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">xiaofang = Women(<span class="string">"小芳"</span>)</span><br><span class="line"><span class="comment"># 私有属性，外部不能直接访问</span></span><br><span class="line"><span class="comment"># print(xiaofang.__age)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 私有方法，外部不能直接调用</span></span><br><span class="line"><span class="comment"># xiaofang.__secret()</span></span><br></pre></td></tr></table></figure><h2 id="02-伪私有属性和私有方法（科普）"><a href="#02-伪私有属性和私有方法（科普）" class="headerlink" title="02. 伪私有属性和私有方法（科普）"></a>02. 伪私有属性和私有方法（科普）</h2><blockquote><p>提示：在日常开发中，<strong>不要使用这种方式</strong>，<strong>访问对象的 私有属性 或 私有方法</strong></p></blockquote><p><code>Python</code> 中，并没有 <strong>真正意义</strong> 的 <strong>私有</strong></p><ul><li>在给 <strong>属性</strong>、<strong>方法</strong> 命名时，实际是对 <strong>名称</strong> 做了一些特殊处理，使得外界无法访问到</li><li><strong>处理方式</strong>：在 <strong>名称</strong> 前面加上 <code>_类名</code> =&gt; <code>_类名__名称</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 私有属性，外部不能直接访问到</span></span><br><span class="line">print(xiaofang._Women__age)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 私有方法，外部不能直接调用</span></span><br><span class="line">xiaofang._Women__secret()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 类 </tag>
            
            <tag> 私有属性 </tag>
            
            <tag> 私有方法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面向对象封装案例Ⅱ</title>
      <link href="/2019/11/09/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%B0%81%E8%A3%85%E6%A1%88%E4%BE%8B%E2%85%A1/"/>
      <url>/2019/11/09/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%B0%81%E8%A3%85%E6%A1%88%E4%BE%8B%E2%85%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="面向对象封装案例-II"><a href="#面向对象封装案例-II" class="headerlink" title="面向对象封装案例 II"></a>面向对象封装案例 II</h1><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ul><li>士兵突击案例</li><li>身份运算符</li></ul><p><strong>封装</strong></p><ol><li><strong>封装</strong> 是面向对象编程的一大特点</li><li>面向对象编程的 <strong>第一步</strong> —— 将 <strong>属性</strong> 和 <strong>方法</strong> <strong>封装</strong> 到一个抽象的 <strong>类</strong> 中</li><li><strong>外界</strong> 使用 <strong>类</strong> 创建 <strong>对象</strong>，然后 <strong>让对象调用方法</strong></li><li><strong>对象方法的细节</strong> 都被 <strong>封装</strong> 在 <strong>类的内部</strong></li></ol><blockquote><p>一个对象的 <strong>属性</strong> 可以是 <strong>另外一个类创建的对象</strong></p></blockquote><h2 id="01-士兵突击"><a href="#01-士兵突击" class="headerlink" title="01. 士兵突击"></a>01. 士兵突击</h2><p><strong>需求</strong></p><ol><li><strong>士兵</strong> <strong>许三多</strong> 有一把 <strong>AK47</strong></li><li><strong>士兵</strong> 可以 <strong>开火</strong></li><li><strong>枪</strong> 能够 <strong>发射</strong> 子弹</li><li><strong>枪</strong> 装填 <strong>装填子弹</strong> —— <strong>增加子弹数量</strong></li></ol><p><img src="009_士兵突击.png" alt="士兵突击"></p><h3 id="1-1-开发枪类"><a href="#1-1-开发枪类" class="headerlink" title="1.1 开发枪类"></a>1.1 开发枪类</h3><p><strong>shoot 方法需求</strong></p><ul><li>1&gt; 判断是否有子弹，没有子弹无法射击</li><li>2&gt; 使用 <code>print</code> 提示射击，并且输出子弹数量</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Gun</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, model)</span>:</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 枪的型号</span></span><br><span class="line">        self.model = model</span><br><span class="line">        <span class="comment"># 子弹数量</span></span><br><span class="line">        self.bullet_count = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_bullet</span><span class="params">(self, count)</span>:</span></span><br><span class="line"></span><br><span class="line">        self.bullet_count += count</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">shoot</span><span class="params">(self)</span>:</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 判断是否还有子弹</span></span><br><span class="line">        <span class="keyword">if</span> self.bullet_count &lt;= <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">"没有子弹了..."</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 发射一颗子弹</span></span><br><span class="line">        self.bullet_count -= <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">        print(<span class="string">"%s 发射子弹[%d]..."</span> % (self.model, self.bullet_count))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建枪对象</span></span><br><span class="line">ak47 = Gun(<span class="string">"ak47"</span>)</span><br><span class="line">ak47.add_bullet(<span class="number">50</span>)</span><br><span class="line">ak47.shoot()</span><br></pre></td></tr></table></figure><h3 id="1-2-开发士兵类"><a href="#1-2-开发士兵类" class="headerlink" title="1.2 开发士兵类"></a>1.2 开发士兵类</h3><blockquote><p>假设：每一个新兵 都 <strong>没有枪</strong></p></blockquote><p><strong>定义没有初始值的属性</strong></p><p>在定义属性时，如果 <strong>不知道设置什么初始值</strong>，可以设置为 <code>None</code></p><ul><li><code>None</code> <strong>关键字</strong> 表示 <strong>什么都没有</strong></li><li>表示一个 <strong>空对象</strong>，<strong>没有方法和属性，是一个特殊的常量</strong></li><li>可以将 <code>None</code> 赋值给任何一个变量</li></ul><p><strong>fire 方法需求</strong></p><ul><li>1&gt; 判断是否有枪，没有枪没法冲锋</li><li>2&gt; 喊一声口号</li><li>3&gt; 装填子弹</li><li>4&gt; 射击</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Soldier</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name)</span>:</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 姓名</span></span><br><span class="line">        self.name = name</span><br><span class="line">        <span class="comment"># 枪，士兵初始没有枪 None 关键字表示什么都没有</span></span><br><span class="line">        self.gun = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fire</span><span class="params">(self)</span>:</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 1. 判断士兵是否有枪</span></span><br><span class="line">        <span class="keyword">if</span> self.gun <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            print(<span class="string">"[%s] 还没有枪..."</span> % self.name)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 2. 高喊口号</span></span><br><span class="line">        print(<span class="string">"冲啊...[%s]"</span> % self.name)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 3. 让枪装填子弹</span></span><br><span class="line">        self.gun.add_bullet(<span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 4. 让枪发射子弹</span></span><br><span class="line">        self.gun.shoot()</span><br></pre></td></tr></table></figure><p><strong>小结</strong></p><ol><li>创建了一个 <strong>士兵类</strong>，使用到 <code>__init__</code> 内置方法</li><li>在定义属性时，如果 <strong>不知道设置什么初始值</strong>，可以设置为 <code>None</code></li><li>在 <strong>封装的</strong> 方法内部，还可以让 <strong>自己的</strong> <strong>使用其他类创建的对象属性</strong> 调用已经 <strong>封装好的方法</strong></li></ol><h2 id="02-身份运算符"><a href="#02-身份运算符" class="headerlink" title="02. 身份运算符"></a>02. 身份运算符</h2><p>身份运算符用于 <strong>比较</strong> 两个对象的 <strong>内存地址</strong> 是否一致 —— <strong>是否是对同一个对象的引用</strong></p><ul><li>在 <code>Python</code> 中针对 <code>None</code> 比较时，建议使用 <code>is</code> 判断</li></ul><table><thead><tr><th style="text-align:left">运算符</th><th style="text-align:left">描述</th><th style="text-align:left">实例</th></tr></thead><tbody><tr><td style="text-align:left">is</td><td style="text-align:left">is 是判断两个标识符是不是引用同一个对象</td><td style="text-align:left">x is y，类似 id(x) == id(y)</td></tr><tr><td style="text-align:left">is not</td><td style="text-align:left">is not 是判断两个标识符是不是引用不同对象</td><td style="text-align:left">x is not y，类似 id(a) != id(b)</td></tr></tbody></table><h3 id="is-与-区别："><a href="#is-与-区别：" class="headerlink" title="is 与 == 区别："></a>is 与 == 区别：</h3><p><code>is</code> 用于判断 <strong>两个变量 引用对象是否为同一个</strong><br><code>==</code> 用于判断 <strong>引用变量的值</strong> 是否相等</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b <span class="keyword">is</span> a </span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b == a</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> OOP </tag>
            
            <tag> 封装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面向对象封装案例</title>
      <link href="/2019/11/09/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%B0%81%E8%A3%85%E6%A1%88%E4%BE%8B/"/>
      <url>/2019/11/09/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%B0%81%E8%A3%85%E6%A1%88%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="面向对象封装案例"><a href="#面向对象封装案例" class="headerlink" title="面向对象封装案例"></a>面向对象封装案例</h1><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ul><li>封装</li><li>小明爱跑步</li><li>存放家具</li></ul><h3 id="01-封装"><a href="#01-封装" class="headerlink" title="01. 封装"></a>01. 封装</h3><ol><li><strong>封装</strong> 是面向对象编程的一大特点</li><li>面向对象编程的 <strong>第一步</strong> —— 将 <strong>属性</strong> 和 <strong>方法</strong> <strong>封装</strong> 到一个抽象的 <strong>类</strong> 中</li><li><strong>外界</strong> 使用 <strong>类</strong> 创建 <strong>对象</strong>，然后 <strong>让对象调用方法</strong></li><li><strong>对象方法的细节</strong> 都被 <strong>封装</strong> 在 <strong>类的内部</strong></li></ol><h2 id="02-小明爱跑步"><a href="#02-小明爱跑步" class="headerlink" title="02. 小明爱跑步"></a>02. 小明爱跑步</h2><p><strong>需求</strong></p><ol><li><strong>小明</strong> <strong>体重</strong> <code>75.0</code> 公斤</li><li>小明每次 <strong>跑步</strong> 会减肥 <code>0.5</code> 公斤</li><li>小明每次 <strong>吃东西</strong> 体重增加 <code>1</code> 公斤</li></ol><p><img src="007_小明爱跑步.png" alt="小明爱跑步"></p><blockquote><p>提示：在 <strong>对象的方法内部</strong>，是可以 <strong>直接访问对象的属性</strong> 的！</p></blockquote><ul><li>代码实现：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>:</span></span><br><span class="line">    <span class="string">"""人类"""</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, weight)</span>:</span></span><br><span class="line"></span><br><span class="line">        self.name = name</span><br><span class="line">        self.weight = weight</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"我的名字叫 %s 体重 %.2f 公斤"</span> % (self.name, self.weight)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""跑步"""</span></span><br><span class="line"></span><br><span class="line">        print(<span class="string">"%s 爱跑步，跑步锻炼身体"</span> % self.name)</span><br><span class="line">        self.weight -= <span class="number">0.5</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""吃东西"""</span></span><br><span class="line"></span><br><span class="line">        print(<span class="string">"%s 是吃货，吃完这顿再减肥"</span> % self.name)</span><br><span class="line">        self.weight += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">xiaoming = Person(<span class="string">"小明"</span>, <span class="number">75</span>)</span><br><span class="line"></span><br><span class="line">xiaoming.run()</span><br><span class="line">xiaoming.eat()</span><br><span class="line">xiaoming.eat()</span><br><span class="line"></span><br><span class="line">print(xiaoming)</span><br></pre></td></tr></table></figure><h3 id="2-1-小明爱跑步扩展-——-小美也爱跑步"><a href="#2-1-小明爱跑步扩展-——-小美也爱跑步" class="headerlink" title="2.1 小明爱跑步扩展 —— 小美也爱跑步"></a>2.1 小明爱跑步扩展 —— 小美也爱跑步</h3><p><strong>需求</strong></p><ol><li><strong>小明</strong> 和 <strong>小美</strong> 都爱跑步</li><li><strong>小明</strong> <strong>体重</strong> <code>75.0</code> 公斤</li><li><strong>小美</strong> <strong>体重</strong> <code>45.0</code> 公斤</li><li>每次 <strong>跑步</strong> 都会减少 <code>0.5</code> 公斤</li><li>每次 <strong>吃东西</strong> 都会增加 <code>1</code> 公斤</li></ol><p><img src="007_小明爱跑步.png" alt="小明爱跑步"></p><p><strong>提示</strong></p><ol><li>在 <strong>对象的方法内部</strong>，是可以 <strong>直接访问对象的属性</strong> 的</li><li><strong>同一个类</strong> 创建的 <strong>多个对象</strong> 之间，<strong>属性</strong> 互不干扰！</li></ol><h2 id="03-摆放家具"><a href="#03-摆放家具" class="headerlink" title="03. 摆放家具"></a>03. 摆放家具</h2><p><strong>需求</strong></p><ol><li><p>房子(House)有户型、总面积和家具名称列表</p><ul><li>新房子没有任何的家具</li></ul></li><li><p>家具(HouseItem)有名字和占地面积，其中</p><ul><li><strong>席梦思(bed)</strong> 占地 <code>4</code> 平米</li><li><strong>衣柜(chest)</strong> 占地 <code>2</code> 平米</li><li><strong>餐桌(table)</strong> 占地 <code>1.5</code> 平米</li></ul></li><li><p>将以上三件 <strong>家具</strong> <strong>添加</strong> 到 <strong>房子</strong> 中</p></li><li><p>打印房子时，要求输出：<strong>户型</strong>、<strong>总面积</strong>、<strong>剩余面积</strong>、<strong>家具名称列表</strong></p></li></ol><p><img src="008_摆放家具.png" alt="摆放家具"></p><p><strong>剩余面积</strong></p><ol><li>在创建房子对象时，定义一个 <strong>剩余面积的属性</strong>，<strong>初始值和总面积相等</strong></li><li>当调用 <code>add_item</code> 方法，向房间 <strong>添加家具</strong> 时，让 <strong>剩余面积</strong> -= <strong>家具面积</strong></li></ol><p><strong>思考</strong>：应该先开发哪一个类？</p><p><strong>答案</strong> —— <strong>家具类</strong></p><ol><li>家具简单</li><li>房子要使用到家具，<strong>被使用的类</strong>，通常应该先开发</li></ol><h3 id="3-1-创建家具"><a href="#3-1-创建家具" class="headerlink" title="3.1 创建家具"></a>3.1 创建家具</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HouseItem</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name, area)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        :param name: 家具名称</span></span><br><span class="line"><span class="string">        :param area: 占地面积</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.area = area</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"[%s] 占地面积 %.2f"</span> % (self.name, self.area)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 创建家具</span></span><br><span class="line">bed = HouseItem(<span class="string">"席梦思"</span>, <span class="number">4</span>)</span><br><span class="line">chest = HouseItem(<span class="string">"衣柜"</span>, <span class="number">2</span>)</span><br><span class="line">table = HouseItem(<span class="string">"餐桌"</span>, <span class="number">1.5</span>)</span><br><span class="line"></span><br><span class="line">print(bed)</span><br><span class="line">print(chest)</span><br><span class="line">print(table)</span><br></pre></td></tr></table></figure><p><strong>小结</strong></p><ol><li>创建了一个 <strong>家具类</strong>，使用到 <code>__init__</code> 和 <code>__str__</code> 两个内置方法</li><li>使用 <strong>家具类</strong> 创建了 <strong>三个家具对象</strong>，并且 <strong>输出家具信息</strong></li></ol><h3 id="3-2-创建房间"><a href="#3-2-创建房间" class="headerlink" title="3.2 创建房间"></a>3.2 创建房间</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">House</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, house_type, area)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        :param house_type: 户型</span></span><br><span class="line"><span class="string">        :param area: 总面积</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        self.house_type = house_type</span><br><span class="line">        self.area = area</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 剩余面积默认和总面积一致</span></span><br><span class="line">        self.free_area = area</span><br><span class="line">        <span class="comment"># 默认没有任何的家具</span></span><br><span class="line">        self.item_list = []</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Python 能够自动的将一对括号内部的代码连接在一起</span></span><br><span class="line">        <span class="keyword">return</span> (<span class="string">"户型：%s\n总面积：%.2f[剩余：%.2f]\n家具：%s"</span></span><br><span class="line">                % (self.house_type, self.area,</span><br><span class="line">                   self.free_area, self.item_list))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_item</span><span class="params">(self, item)</span>:</span></span><br><span class="line"></span><br><span class="line">        print(<span class="string">"要添加 %s"</span> % item)</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 创建房子对象</span></span><br><span class="line">my_home = House(<span class="string">"两室一厅"</span>, <span class="number">60</span>)</span><br><span class="line"></span><br><span class="line">my_home.add_item(bed)</span><br><span class="line">my_home.add_item(chest)</span><br><span class="line">my_home.add_item(table)</span><br><span class="line"></span><br><span class="line">print(my_home)</span><br></pre></td></tr></table></figure><p><strong>小结</strong></p><ol><li>创建了一个 <strong>房子类</strong>，使用到 <code>__init__</code> 和 <code>__str__</code> 两个内置方法</li><li>准备了一个 <code>add_item</code> 方法 <strong>准备添加家具</strong></li><li>使用 <strong>房子类</strong> 创建了 <strong>一个房子对象</strong></li><li>让 <strong>房子对象</strong> 调用了三次 <code>add_item</code> 方法，将 <strong>三件家具</strong> 以实参传递到 <code>add_item</code> 内部</li></ol><h3 id="3-3-添加家具"><a href="#3-3-添加家具" class="headerlink" title="3.3 添加家具"></a>3.3 添加家具</h3><p><strong>需求</strong></p><ul><li>1&gt; <strong>判断</strong> <strong>家具的面积</strong> 是否 <strong>超过剩余面积</strong>，<strong>如果超过</strong>，提示不能添加这件家具</li><li>2&gt; 将 <strong>家具的名称</strong> 追加到 <strong>家具名称列表</strong> 中</li><li>3&gt; 用 <strong>房子的剩余面积</strong> - <strong>家具面积</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add_item</span><span class="params">(self, item)</span>:</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">"要添加 %s"</span> % item)</span><br><span class="line">    <span class="comment"># 1. 判断家具面积是否大于剩余面积</span></span><br><span class="line">    <span class="keyword">if</span> item.area &gt; self.free_area:</span><br><span class="line">        print(<span class="string">"%s 的面积太大，不能添加到房子中"</span> % item.name)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2. 将家具的名称追加到名称列表中</span></span><br><span class="line">    self.item_list.append(item.name)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 3. 计算剩余面积</span></span><br><span class="line">    self.free_area -= item.area</span><br></pre></td></tr></table></figure><h3 id="3-4-小结"><a href="#3-4-小结" class="headerlink" title="3.4 小结"></a>3.4 小结</h3><ul><li>主程序只负责创建 <strong>房子</strong> 对象和 <strong>家具</strong> 对象</li><li>让 <strong>房子</strong> 对象调用 <code>add_item</code> 方法 <strong>将家具添加到房子</strong>中</li><li><strong>面积计算</strong>、<strong>剩余面积</strong>、<strong>家具列表</strong> 等处理都被 <strong>封装</strong> 到 <strong>房子类的内部</strong></li></ul>]]></content>
      
      
      <categories>
          
          <category> python学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 面向对象 </tag>
            
            <tag> OOP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面向对象基础语法</title>
      <link href="/2019/11/09/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
      <url>/2019/11/09/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="面相对象基础语法"><a href="#面相对象基础语法" class="headerlink" title="面相对象基础语法"></a>面相对象基础语法</h1><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ul><li><code>dir</code> 内置函数</li><li>定义简单的类（只包含方法）</li><li>方法中的 <code>self</code> 参数</li><li>初始化方法</li><li>内置方法和属性</li></ul><h2 id="01-dir-内置函数（知道）"><a href="#01-dir-内置函数（知道）" class="headerlink" title="01. dir 内置函数（知道）"></a>01. <code>dir</code> 内置函数（知道）</h2><ul><li>在 <code>Python</code> 中 <strong>对象几乎是无所不在的</strong>，我们之前学习的 <strong>变量</strong>、<strong>数据</strong>、<strong>函数</strong> 都是对象</li></ul><p>在 <code>Python</code> 中可以使用以下两个方法验证：</p><ol><li>在 <strong>标识符</strong> / <strong>数据</strong> 后输入一个 <code>.</code>，然后按下 <code>TAB</code> 键，<code>iPython</code> 会提示该对象能够调用的 <strong>方法列表</strong></li><li>使用内置函数 <code>dir</code> 传入 <strong>标识符</strong> / <strong>数据</strong>，可以查看对象内的 <strong>所有属性及方法</strong></li></ol><p><strong>提示</strong> <code>__方法名__</code> 格式的方法是 <code>Python</code> 提供的 <strong>内置方法 / 属性</strong>，稍后会给大家介绍一些常用的 内置方法 / 属性</p><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:center">方法名</th><th style="text-align:center">类型</th><th style="text-align:left">作用</th></tr></thead><tbody><tr><td style="text-align:center">01</td><td style="text-align:center"><code>__new__</code></td><td style="text-align:center">方法</td><td style="text-align:left"><strong>创建对象</strong>时，会被 <strong>自动</strong> 调用</td></tr><tr><td style="text-align:center">02</td><td style="text-align:center"><code>__init__</code></td><td style="text-align:center">方法</td><td style="text-align:left"><strong>对象被初始化</strong>时，会被 <strong>自动</strong> 调用</td></tr><tr><td style="text-align:center">03</td><td style="text-align:center"><code>__del__</code></td><td style="text-align:center">方法</td><td style="text-align:left"><strong>对象被从内存中销毁</strong>前，会被 <strong>自动</strong> 调用</td></tr><tr><td style="text-align:center">04</td><td style="text-align:center"><code>__str__</code></td><td style="text-align:center">方法</td><td style="text-align:left">返回<strong>对象的描述信息</strong>，<code>print</code> 函数输出使用</td></tr></tbody></table><p><strong>提示</strong> 利用好 <code>dir()</code> 函数，在学习时很多内容就不需要死记硬背了</p><h2 id="02-定义简单的类（只包含方法）"><a href="#02-定义简单的类（只包含方法）" class="headerlink" title="02. 定义简单的类（只包含方法）"></a>02. 定义简单的类（只包含方法）</h2><blockquote><p><strong>面向对象</strong> 是 <strong>更大</strong> 的 <strong>封装</strong>，在 <strong>一个类中 封装 多个方法</strong>，这样 <strong>通过这个类创建出来的对象，就可以直接调用这些方法了</strong>！</p></blockquote><h3 id="2-1-定义只包含方法的类"><a href="#2-1-定义只包含方法的类" class="headerlink" title="2.1 定义只包含方法的类"></a>2.1 定义只包含方法的类</h3><ul><li>在 <code>Python</code> 中要定义一个只包含方法的类，语法格式如下：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> 类名:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> 方法1<span class="params">(self, 参数列表)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> 方法2<span class="params">(self, 参数列表)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ul><li><strong>方法</strong> 的定义格式和之前学习过的<strong>函数</strong> 几乎一样</li><li>区别在于第一个参数必须是 <code>self</code>，大家暂时先记住，稍后介绍 <code>self</code></li></ul><blockquote><p>注意：<strong>类名</strong> 的 命名规则 要符合 <strong>大驼峰命名法</strong></p></blockquote><h3 id="2-3-第一个面向对象程序"><a href="#2-3-第一个面向对象程序" class="headerlink" title="2.3 第一个面向对象程序"></a>2.3 第一个面向对象程序</h3><p><strong>需求</strong></p><ul><li><strong>小猫</strong> 爱 <strong>吃</strong> 鱼，<strong>小猫</strong> 要 <strong>喝</strong> 水</li></ul><p><strong>分析</strong></p><ol><li>定义一个猫类 <code>Cat</code></li><li>定义两个方法 <code>eat</code> 和 <code>drink</code></li><li>按照需求 —— 不需要定义属性</li></ol><p><img src="004_Cat类1.png" alt="Cat类1"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span>:</span></span><br><span class="line">    <span class="string">"""这是一个猫类"""</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"小猫爱吃鱼"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">drink</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"小猫在喝水"</span>)</span><br><span class="line"></span><br><span class="line">tom = Cat()</span><br><span class="line">tom.drink()</span><br><span class="line">tom.eat()</span><br></pre></td></tr></table></figure><h4 id="引用概念的强调"><a href="#引用概念的强调" class="headerlink" title="引用概念的强调"></a>引用概念的强调</h4><blockquote><p>在面向对象开发中，<strong>引用</strong>的概念是同样适用的！</p></blockquote><ul><li>在 <code>Python</code> 中使用类 <strong>创建对象之后</strong>，<code>tom</code> 变量中 仍然记录的是 <strong>对象在内存中的地址</strong></li><li>也就是 <code>tom</code> 变量 <strong>引用</strong> 了 <strong>新建的猫对象</strong></li><li>使用 <code>print</code> 输出 <strong>对象变量</strong>，默认情况下，是能够输出这个变量 <strong>引用的对象</strong> 是 <strong>由哪一个类创建的对象</strong>，以及 <strong>在内存中的地址</strong>（<strong>十六进制表示</strong>）</li></ul><blockquote><p>提示：在计算机中，通常使用 <strong>十六进制</strong> 表示 <strong>内存地址</strong></p><ul><li><strong>十进制</strong> 和 <strong>十六进制</strong> 都是用来表达数字的，只是表示的方式不一样</li><li><strong>十进制</strong> 和 <strong>十六进制</strong> 的数字之间可以来回转换</li></ul></blockquote><ul><li><code>%d</code> 可以以 <strong>10 进制</strong> 输出数字</li><li><code>%x</code> 可以以 <strong>16 进制</strong> 输出数字</li></ul><h4 id="案例进阶-——-使用-Cat-类再创建一个对象"><a href="#案例进阶-——-使用-Cat-类再创建一个对象" class="headerlink" title="案例进阶 —— 使用 Cat 类再创建一个对象"></a>案例进阶 —— 使用 Cat 类再创建一个对象</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lazy_cat = Cat()</span><br><span class="line">lazy_cat.eat()</span><br><span class="line">lazy_cat.drink()</span><br></pre></td></tr></table></figure><blockquote><p><em>提问：</em><code>tom</code> <em>和</em> <code>lazy_cat</code> <em>是同一个对象吗？</em></p></blockquote><h2 id="03-方法中的-self-参数"><a href="#03-方法中的-self-参数" class="headerlink" title="03. 方法中的 self 参数"></a>03. 方法中的 <code>self</code> 参数</h2><h3 id="3-1-案例改造-——-给对象增加属性"><a href="#3-1-案例改造-——-给对象增加属性" class="headerlink" title="3.1 案例改造 —— 给对象增加属性"></a>3.1 案例改造 —— 给对象增加属性</h3><ul><li><p>在Python中，要给对象设置属性，非常的容易，但是不推荐使用</p><ul><li>因为：对象属性的封装应该封装在类的内部</li></ul></li><li><p>只需要在 <strong>类的外部的代码</strong> 中直接通过 <code>.</code> 设置一个属性即可</p></li></ul><blockquote><p>注意：这种方式虽然简单，但是不推荐使用！</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tom.name = <span class="string">"Tom"</span></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">lazy_cat.name = <span class="string">"大懒猫"</span></span><br></pre></td></tr></table></figure><h3 id="3-2-使用-self-在方法内部输出每一只猫的名字"><a href="#3-2-使用-self-在方法内部输出每一只猫的名字" class="headerlink" title="3.2 使用 self 在方法内部输出每一只猫的名字"></a>3.2 使用 <code>self</code> 在方法内部输出每一只猫的名字</h3><blockquote><p>由 <strong>哪一个对象</strong> 调用的方法，方法内的 <code>self</code> 就是 <strong>哪一个对象的引用</strong></p></blockquote><ul><li>在类封装的方法内部，<code>self</code> 就表示 <strong>当前调用方法的对象自己</strong></li><li><strong>调用方法时</strong>，程序员不需要传递 <code>self</code> 参数</li><li>在方法内部<ul><li>可以通过 <code>self.</code> <strong>访问对象的属性</strong></li><li>也可以通过 <code>self.</code> <strong>调用其他的对象方法</strong></li></ul></li><li>改造代码如下：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"%s 爱吃鱼"</span> % self.name)</span><br><span class="line"></span><br><span class="line">tom = Cat()</span><br><span class="line">tom.name = <span class="string">"Tom"</span></span><br><span class="line">tom.eat()</span><br><span class="line"></span><br><span class="line">lazy_cat = Cat()</span><br><span class="line">lazy_cat.name = <span class="string">"大懒猫"</span></span><br><span class="line">lazy_cat.eat()</span><br></pre></td></tr></table></figure><p><img src="005_方法中的self.png" alt="方法中的self"></p><ul><li>在 <strong>类的外部</strong>，通过 <code>变量名.</code> 访问对象的 <strong>属性和方法</strong></li><li>在 <strong>类封装的方法中</strong>，通过 <code>self.</code> 访问对象的 <strong>属性和方法</strong></li></ul><h2 id="04-初始化方法"><a href="#04-初始化方法" class="headerlink" title="04. 初始化方法"></a>04. 初始化方法</h2><h3 id="4-1-之前代码存在的问题-——-在类的外部给对象增加属性"><a href="#4-1-之前代码存在的问题-——-在类的外部给对象增加属性" class="headerlink" title="4.1 之前代码存在的问题 —— 在类的外部给对象增加属性"></a>4.1 之前代码存在的问题 —— 在类的外部给对象增加属性</h3><ul><li>将案例代码进行调整，<strong>先调用方法 再设置属性</strong>，观察一下执行效果</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tom = Cat()</span><br><span class="line">tom.drink()</span><br><span class="line">tom.eat()</span><br><span class="line">tom.name = <span class="string">"Tom"</span></span><br><span class="line">print(tom)</span><br></pre></td></tr></table></figure><ul><li>程序执行报错如下：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">AttributeError: <span class="string">'Cat'</span> object has no attribute <span class="string">'name'</span></span><br><span class="line">属性错误：<span class="string">'Cat'</span> 对象没有 <span class="string">'name'</span> 属性</span><br></pre></td></tr></table></figure><p><strong>提示</strong></p><ul><li>在日常开发中，不推荐在类的外部给对象增加属性<ul><li>如果<strong>在运行时，没有找到属性，程序会报错</strong></li></ul></li><li>对象应该包含有哪些属性，应该 <strong>封装在类的内部</strong></li></ul><h3 id="4-2-初始化方法"><a href="#4-2-初始化方法" class="headerlink" title="4.2 初始化方法"></a>4.2 初始化方法</h3><ul><li><p>当使用类名()创建对象时，会自动执行以下操作：</p><ol><li>为对象在内存中 <strong>分配空间</strong> —— 创建对象</li><li>为对象的属性 <strong>设置初始值</strong> —— 初始化方法(<code>init</code>)</li></ol></li><li><p>这个 <strong>初始化方法</strong> 就是 <code>__init__</code> 方法，<code>__init__</code> 是对象的<strong>内置方法</strong></p></li></ul><blockquote><p><code>__init__</code> 方法是 <strong>专门</strong> 用来定义一个类 <strong>具有哪些属性的方法</strong>！</p></blockquote><p>在 <code>Cat</code> 中增加 <code>__init__</code> 方法，验证该方法在创建对象时会被自动调用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span>:</span></span><br><span class="line">    <span class="string">"""这是一个猫类"""</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"初始化方法"</span>)</span><br></pre></td></tr></table></figure><h3 id="4-3-在初始化方法内部定义属性"><a href="#4-3-在初始化方法内部定义属性" class="headerlink" title="4.3 在初始化方法内部定义属性"></a>4.3 在初始化方法内部定义属性</h3><ul><li>在 <code>__init__</code> 方法内部使用 <code>self.属性名 = 属性的初始值</code> 就可以 <strong>定义属性</strong></li><li>定义属性之后，再使用 <code>Cat</code> 类创建的对象，都会拥有该属性</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line"></span><br><span class="line">        print(<span class="string">"这是一个初始化方法"</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 定义用 Cat 类创建的猫对象都有一个 name 的属性</span></span><br><span class="line">        self.name = <span class="string">"Tom"</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">eat</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"%s 爱吃鱼"</span> % self.name)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用类名()创建对象的时候，会自动调用初始化方法 __init__</span></span><br><span class="line">tom = Cat()</span><br><span class="line"></span><br><span class="line">tom.eat()</span><br></pre></td></tr></table></figure><h3 id="4-4-改造初始化方法-——-初始化的同时设置初始值"><a href="#4-4-改造初始化方法-——-初始化的同时设置初始值" class="headerlink" title="4.4 改造初始化方法 —— 初始化的同时设置初始值"></a>4.4 改造初始化方法 —— 初始化的同时设置初始值</h3><ul><li>在开发中，如果希望在创建对象的同时，就设置对象的属性，可以对<code>__init__</code>方法进行改造<ol><li>把希望设置的属性值，定义成 <code>__init__</code> 方法的参数</li><li>在方法内部使用 <code>self.属性 = 形参</code> 接收外部传递的参数</li><li>在创建对象时，使用 <code>类名(属性1, 属性2...)</code> 调用</li></ol></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        print(<span class="string">"初始化方法 %s"</span> % name)</span><br><span class="line">        self.name = name</span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">tom = Cat(<span class="string">"Tom"</span>)</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">lazy_cat = Cat(<span class="string">"大懒猫"</span>)</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="05-内置方法和属性"><a href="#05-内置方法和属性" class="headerlink" title="05. 内置方法和属性"></a>05. 内置方法和属性</h2><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:center">方法名</th><th style="text-align:center">类型</th><th style="text-align:left">作用</th></tr></thead><tbody><tr><td style="text-align:center">01</td><td style="text-align:center"><code>__del__</code></td><td style="text-align:center">方法</td><td style="text-align:left"><strong>对象被从内存中销毁</strong>前，会被 <strong>自动</strong> 调用</td></tr><tr><td style="text-align:center">02</td><td style="text-align:center"><code>__str__</code></td><td style="text-align:center">方法</td><td style="text-align:left">返回<strong>对象的描述信息</strong>，<code>print</code> 函数输出使用</td></tr></tbody></table><h3 id="5-1-del-方法（知道）"><a href="#5-1-del-方法（知道）" class="headerlink" title="5.1 __del__ 方法（知道）"></a>5.1 <code>__del__</code> 方法（知道）</h3><ul><li>在 <code>Python</code> 中<ul><li>当使用 <code>类名()</code> 创建对象时，为对象 <strong>分配完空间</strong>后，<strong>自动</strong> 调用 <code>__init__</code> 方法</li><li>当一个 <strong>对象被从内存中销毁</strong> 前，会 <strong>自动</strong> 调用 <code>__del__</code> 方法</li></ul></li><li><strong>应用场景</strong><ul><li><code>__init__</code> 改造初始化方法，可以让创建对象更加灵活</li><li><code>__del__</code> 如果希望在对象被销毁前，再做一些事情，可以考虑一下 <code>__del__</code> 方法</li></ul></li><li><strong>生命周期</strong><ul><li>一个对象从调用 <code>类名()</code> 创建，生命周期开始</li><li>一个对象的 <code>__del__</code> 方法一旦被调用，生命周期结束</li><li>在对象的生命周期内，可以访问对象属性，或者让对象调用方法</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, new_name)</span>:</span></span><br><span class="line"></span><br><span class="line">        self.name = new_name</span><br><span class="line"></span><br><span class="line">        print(<span class="string">"%s 来了"</span> % self.name)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__del__</span><span class="params">(self)</span>:</span></span><br><span class="line"></span><br><span class="line">        print(<span class="string">"%s 去了"</span> % self.name)</span><br><span class="line"></span><br><span class="line"><span class="comment"># tom 是一个全局变量</span></span><br><span class="line">tom = Cat(<span class="string">"Tom"</span>)</span><br><span class="line">print(tom.name)</span><br><span class="line"></span><br><span class="line"><span class="comment"># del 关键字可以删除一个对象</span></span><br><span class="line"><span class="keyword">del</span> tom</span><br><span class="line"></span><br><span class="line">print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br></pre></td></tr></table></figure><h3 id="5-2-str-方法"><a href="#5-2-str-方法" class="headerlink" title="5.2 __str__ 方法"></a>5.2 <code>__str__</code> 方法</h3><ul><li>在 <code>Python</code> 中，使用 <code>print</code> 输出 <strong>对象变量</strong>，默认情况下，会输出这个变量 <strong>引用的对象</strong> 是 <strong>由哪一个类创建的对象</strong>，以及 <strong>在内存中的地址</strong>（<strong>十六进制表示</strong>）</li><li>如果在开发中，希望使用 <code>print</code> 输出 <strong>对象变量</strong> 时，能够打印 <strong>自定义的内容</strong>，就可以利用 <code>__str__</code> 这个内置方法了</li></ul><blockquote><p>注意：<code>__str__</code> 方法必须返回一个字符串</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, new_name)</span>:</span></span><br><span class="line"></span><br><span class="line">        self.name = new_name</span><br><span class="line"></span><br><span class="line">        print(<span class="string">"%s 来了"</span> % self.name)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__del__</span><span class="params">(self)</span>:</span></span><br><span class="line"></span><br><span class="line">        print(<span class="string">"%s 去了"</span> % self.name)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"我是小猫：%s"</span> % self.name</span><br><span class="line"></span><br><span class="line">tom = Cat(<span class="string">"Tom"</span>)</span><br><span class="line">print(tom)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 面向对象 </tag>
            
            <tag> OOP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>类和对象</title>
      <link href="/2019/11/09/%E7%B1%BB%E5%92%8C%E5%AF%B9%E8%B1%A1/"/>
      <url>/2019/11/09/%E7%B1%BB%E5%92%8C%E5%AF%B9%E8%B1%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="类和对象"><a href="#类和对象" class="headerlink" title="类和对象"></a>类和对象</h1><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ul><li>类和对象的概念</li><li>类和对象的关系</li><li>类的设计</li></ul><h2 id="1-类和对象的概念"><a href="#1-类和对象的概念" class="headerlink" title="1. 类和对象的概念"></a>1. 类和对象的概念</h2><p><strong><code>类</code></strong>和<strong><code>对象</code></strong>是<strong><code>面向对象编程</code></strong>的两个核心概念</p><h3 id="1-1-类"><a href="#1-1-类" class="headerlink" title="1.1  类"></a>1.1  类</h3><ul><li><strong><code>类</code></strong>是对一群具有相同特征或者行为的事物的一个统称，是抽象的，不能直接使用<ul><li><strong>特征</strong> 被称为 <strong>属性</strong></li><li><strong>行为</strong> 被称为 <strong>方法</strong></li></ul></li><li><strong><code>类</code></strong> 就相当于制造飞机时的<strong>图纸</strong>，是一个 <strong>模板</strong>，是 <strong>负责创建对象的</strong></li></ul><p><img src="002_飞机设计图纸.png" alt="飞机设计图纸"></p><h3 id="1-2-对象"><a href="#1-2-对象" class="headerlink" title="1.2 对象"></a>1.2 对象</h3><ul><li><strong>对象</strong> 是 <strong>由类创建出来的一个具体存在</strong>，可以直接使用</li><li>由哪一个类创建出来的对象，就拥有在哪一个类中定义的：<ul><li>属性</li><li>方法</li></ul></li><li><strong>对象</strong> 就相当于用 <strong>图纸</strong> <strong>制造</strong> 的飞机</li></ul><blockquote><p><em>在程序开发中，应该</em> <strong>先有类，再有对象</strong></p></blockquote><p><img src="003_飞机对象.png" alt="飞机对象"></p><h2 id="2-类和对象的关系"><a href="#2-类和对象的关系" class="headerlink" title="2. 类和对象的关系"></a>2. 类和对象的关系</h2><ul><li><strong>类是模板</strong>，<strong>对象</strong> 是根据 <strong>类</strong> 这个模板创建出来的，应该 <strong>先有类，再有对象</strong></li><li>类只有一个，而对象可以有很多个<ul><li><strong>不同的对象</strong> 之间 <strong>属性</strong> 可能会各不相同</li></ul></li><li><strong>类</strong> 中定义了什么 <strong>属性和方法</strong>，<strong>对象</strong> 中就有什么属性和方法，<strong>不可能多，也不可能少</strong></li></ul><h2 id="3-类的设计"><a href="#3-类的设计" class="headerlink" title="3. 类的设计"></a>3. 类的设计</h2><p>在使用面相对象开发前，应该首先分析需求，确定一下，程序中需要包含哪些类！</p><p><img src="001_植物大战僵尸类图.png" alt="植物大战僵尸类图"></p><p>在程序开发中，要设计一个类，通常需要满足一下三个要素：</p><ol><li><strong>类名</strong> 这类事物的名字，<strong>满足大驼峰命名法</strong></li><li><strong>属性</strong> 这类事物具有什么样的特征</li><li><strong>方法</strong> 这类事物具有什么样的行为</li></ol><h3 id="大驼峰命名法"><a href="#大驼峰命名法" class="headerlink" title="大驼峰命名法"></a>大驼峰命名法</h3><ol><li>每一个单词的首字母大写</li><li>单词与单词之间没有下划线</li></ol><h3 id="3-1-类名的确定"><a href="#3-1-类名的确定" class="headerlink" title="3.1 类名的确定"></a>3.1 类名的确定</h3><p><strong>名词提炼法</strong> 分析 <strong>整个业务流程</strong>，出现的 <strong>名词</strong>，通常就是找到的类</p><h3 id="3-2-属性和方法的确定"><a href="#3-2-属性和方法的确定" class="headerlink" title="3.2 属性和方法的确定"></a>3.2 属性和方法的确定</h3><ul><li>对 <strong>对象的特征描述</strong>，通常可以定义成 <strong>属性</strong></li><li><strong>对象具有的行为</strong>（动词），通常可以定义成 <strong>方法</strong></li></ul><blockquote><p><em>提示：需求中没有涉及的属性或者方法在设计类时，不需要考虑</em></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> python学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 类 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>项目-名片管理系统</title>
      <link href="/2019/11/02/%E9%A1%B9%E7%9B%AE-%E5%90%8D%E7%89%87%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
      <url>/2019/11/02/%E9%A1%B9%E7%9B%AE-%E5%90%8D%E7%89%87%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="综合应用-——-名片管理系统"><a href="#综合应用-——-名片管理系统" class="headerlink" title="综合应用 —— 名片管理系统"></a>综合应用 —— 名片管理系统</h1><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><p>综合应用已经学习过的知识点：</p><ul><li><strong>变量</strong></li><li><strong>流程控制</strong></li><li><strong>函数</strong></li><li><strong>模块</strong></li></ul><p>开发 <strong>名片管理系统</strong></p><h2 id="系统需求"><a href="#系统需求" class="headerlink" title="系统需求"></a>系统需求</h2><ul><li><ol><li>程序启动，显示名片管理系统欢迎界面，并显示功能菜单</li></ol></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">**************************************************</span><br><span class="line">欢迎使用【名片管理系统】V1.0</span><br><span class="line">1. 新建名片</span><br><span class="line">2. 显示全部</span><br><span class="line">3. 查询名片</span><br><span class="line">0. 退出系统</span><br><span class="line">**************************************************</span><br></pre></td></tr></table></figure><ul><li><ol start="2"><li>用户用数字选择不同的功能</li></ol></li><li><ol start="3"><li>根据功能选择，执行不同的功能</li></ol></li><li><ol start="4"><li>用户名片需要记录用户的 <strong>姓名</strong>、<strong>电话</strong>、<strong>QQ</strong>、<strong>邮件</strong></li></ol></li><li><ol start="5"><li>如果查询到指定的名片，用户可以选择 <strong>修改</strong> 或者 <strong>删除</strong> 名片</li></ol></li></ul><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li>框架搭建</li><li>新增名片</li><li>显示所有名片</li><li>查询名片</li><li>查询成功后修改、删除名片</li><li>让 Python 程序能够直接运行</li></ol><h2 id="01-框架搭建"><a href="#01-框架搭建" class="headerlink" title="01. 框架搭建"></a>01. 框架搭建</h2><p><strong>目标</strong></p><ul><li>搭建名片管理系统 <strong>框架结构</strong><ol><li><strong>准备文件</strong>，确定文件名，保证能够 <strong>在需要的位置</strong> 编写代码</li><li>编写 <strong>主运行循环</strong>，实现基本的 <strong>用户输入和判断</strong></li></ol></li></ul><h3 id="1-1-文件准备"><a href="#1-1-文件准备" class="headerlink" title="1.1 文件准备"></a>1.1 文件准备</h3><ol><li>新建 <code>cards_main.py</code> 保存 <strong>主程序功能代码</strong><ul><li>程序的入口</li><li>每一次启动名片管理系统都通过 <code>main</code> 这个文件启动 </li></ul></li><li>新建 <code>cards_tools.py</code> 保存 <strong>所有名片功能函数</strong><ul><li>将对名片的 <strong>新增</strong>、<strong>查询</strong>、<strong>修改</strong>、<strong>删除</strong> 等功能封装在不同的函数中</li></ul></li></ol><h3 id="1-2-编写主运行循环"><a href="#1-2-编写主运行循环" class="headerlink" title="1.2 编写主运行循环"></a>1.2 编写主运行循环</h3><ul><li>在 <code>cards_main</code> 中添加一个 <strong>无限循环</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="comment"># TODO(小明) 显示系统菜单</span></span><br><span class="line">    action = input(<span class="string">"请选择操作功能："</span>)</span><br><span class="line">    print(<span class="string">"您选择的操作是：%s"</span> % action)</span><br><span class="line">    <span class="comment"># 根据用户输入决定后续的操作</span></span><br><span class="line">    <span class="keyword">if</span> action <span class="keyword">in</span> [<span class="string">"1"</span>, <span class="string">"2"</span>, <span class="string">"3"</span>]:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">elif</span> action == <span class="string">"0"</span>:</span><br><span class="line">        print(<span class="string">"欢迎再次使用【名片管理系统】"</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"输入错误，请重新输入"</span>)</span><br></pre></td></tr></table></figure><h4 id="字符串判断"><a href="#字符串判断" class="headerlink" title="字符串判断"></a>字符串判断</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> action <span class="keyword">in</span> [<span class="string">"1"</span>, <span class="string">"2"</span>, <span class="string">"3"</span>]:</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> action == <span class="string">"1"</span> <span class="keyword">or</span> action == <span class="string">"2"</span> <span class="keyword">or</span> action == <span class="string">"3"</span>:</span><br></pre></td></tr></table></figure><ol><li>使用 <code>in</code> 针对 <strong>列表</strong> 判断，避免使用 <code>or</code> 拼接复杂的逻辑条件</li><li>没有使用 <code>int</code> 转换用户输入，可以避免 <strong>一旦用户输入的不是数字</strong>，导致程序运行出错</li></ol><h4 id="pass"><a href="#pass" class="headerlink" title="pass"></a>pass</h4><ul><li><code>pass</code> 就是一个空语句，不做任何事情，一般用做占位语句</li><li>是为了保持程序结构的完整性</li></ul><h4 id="无限循环"><a href="#无限循环" class="headerlink" title="无限循环"></a>无限循环</h4><ul><li>在开发软件时，如果 <strong>不希望程序执行后</strong> 立即退出</li><li>可以在程序中增加一个 <strong>无限循环</strong></li><li><strong>由用户来决定</strong> 退出程序的时机</li></ul><h4 id="TODO-注释"><a href="#TODO-注释" class="headerlink" title="TODO 注释"></a>TODO 注释</h4><ul><li>在 <code>#</code> 后跟上 <code>TODO</code>，用于标记需要去做的工作</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># TODO(作者/邮件) 显示系统菜单</span></span><br></pre></td></tr></table></figure><h3 id="1-3-在-cards-tools-中增加四个新函数"><a href="#1-3-在-cards-tools-中增加四个新函数" class="headerlink" title="1.3 在 cards_tools 中增加四个新函数"></a>1.3 在 <code>cards_tools</code> 中增加四个新函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_menu</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""显示菜单</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">new_card</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""新建名片</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">    print(<span class="string">"功能：新建名片"</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_all</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""显示全部</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">    print(<span class="string">"功能：显示全部"</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search_card</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""搜索名片</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">    print(<span class="string">"功能：搜索名片"</span>)</span><br></pre></td></tr></table></figure><h3 id="1-4-导入模块"><a href="#1-4-导入模块" class="headerlink" title="1.4 导入模块"></a>1.4 导入模块</h3><ul><li>在 <code>cards_main.py</code> 中使用 <code>import</code> 导入 <code>cards_tools</code> 模块</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cards_tools</span><br></pre></td></tr></table></figure><ul><li>修改 <code>while</code> 循环的代码如下：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cards_tools</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    cards_tools.show_menu()</span><br><span class="line"></span><br><span class="line">    action = input(<span class="string">"请选择操作功能："</span>)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"您选择的操作是：%s"</span> % action)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 根据用户输入决定后续的操作</span></span><br><span class="line">    <span class="keyword">if</span> action <span class="keyword">in</span> [<span class="string">"1"</span>, <span class="string">"2"</span>, <span class="string">"3"</span>]:</span><br><span class="line">        <span class="keyword">if</span> action == <span class="string">"1"</span>:</span><br><span class="line">            cards_tools.new_card()</span><br><span class="line">        <span class="keyword">elif</span> action == <span class="string">"2"</span>:</span><br><span class="line">            cards_tools.show_all()</span><br><span class="line">        <span class="keyword">elif</span> action == <span class="string">"3"</span>:</span><br><span class="line">            cards_tools.search_card()</span><br><span class="line">    <span class="keyword">elif</span> action == <span class="string">"0"</span>:</span><br><span class="line">        print(<span class="string">"欢迎再次使用【名片管理系统】"</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"输入错误，请重新输入："</span>)</span><br></pre></td></tr></table></figure><blockquote><p>至此：<code>cards_main</code> 中的所有代码全部开发完毕！</p></blockquote><h3 id="1-5-完成-show-menu-函数"><a href="#1-5-完成-show-menu-函数" class="headerlink" title="1.5 完成 show_menu 函数"></a>1.5 完成 <code>show_menu</code> 函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_menu</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""显示菜单</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    print(<span class="string">"*"</span> * <span class="number">50</span>)</span><br><span class="line">    print(<span class="string">"欢迎使用【菜单管理系统】V1.0"</span>)</span><br><span class="line">    print(<span class="string">""</span>)</span><br><span class="line">    print(<span class="string">"1. 新建名片"</span>)</span><br><span class="line">    print(<span class="string">"2. 显示全部"</span>)</span><br><span class="line">    print(<span class="string">"3. 查询名片"</span>)</span><br><span class="line">    print(<span class="string">""</span>)</span><br><span class="line">    print(<span class="string">"0. 退出系统"</span>)</span><br><span class="line">    print(<span class="string">"*"</span> * <span class="number">50</span>)</span><br></pre></td></tr></table></figure><h2 id="02-保存名片数据的结构"><a href="#02-保存名片数据的结构" class="headerlink" title="02. 保存名片数据的结构"></a>02. 保存名片数据的结构</h2><p><strong>程序就是用来处理数据的，而变量就是用来存储数据的</strong></p><ul><li>使用 <strong>字典</strong> 记录 <strong>每一张名片</strong> 的详细信息</li><li>使用 <strong>列表</strong> 统一记录所有的 <strong>名片字典</strong></li></ul><p><img src="001_名片管理系统全局列表.png" alt="名片管理系统全局列表"></p><h3 id="定义名片列表变量"><a href="#定义名片列表变量" class="headerlink" title="定义名片列表变量"></a>定义名片列表变量</h3><ul><li>在 <code>cards_tools</code> 文件的顶部增加一个 <strong>列表变量</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 所有名片记录的列表</span></span><br><span class="line">card_list = []</span><br></pre></td></tr></table></figure><p><strong>注意</strong></p><ol><li><strong>所有名片相关操作</strong>，都需要使用这个列表，所以应该 <strong>定义在程序的顶部</strong></li><li><strong>程序刚运行时，没有数据</strong>，所以是 <strong>空列表</strong></li></ol><h2 id="03-新增名片"><a href="#03-新增名片" class="headerlink" title="03. 新增名片"></a>03. 新增名片</h2><h3 id="3-1-功能分析"><a href="#3-1-功能分析" class="headerlink" title="3.1 功能分析"></a>3.1 功能分析</h3><ol><li>提示用户依次输入名片信息</li><li>将名片信息保存到一个字典</li><li>将字典添加到名片列表</li><li>提示名片添加完成</li></ol><h3 id="3-2-实现-new-card-方法"><a href="#3-2-实现-new-card-方法" class="headerlink" title="3.2 实现 new_card 方法"></a>3.2 实现 new_card 方法</h3><ul><li>根据步骤实现代码</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">new_card</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""新建名片</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">    print(<span class="string">"功能：新建名片"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1. 提示用户输入名片信息</span></span><br><span class="line">    name = input(<span class="string">"请输入姓名："</span>)</span><br><span class="line">    phone = input(<span class="string">"请输入电话："</span>)</span><br><span class="line">    qq = input(<span class="string">"请输入 QQ 号码："</span>)</span><br><span class="line">    email = input(<span class="string">"请输入邮箱："</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2. 将用户信息保存到一个字典</span></span><br><span class="line">    card_dict = &#123;<span class="string">"name"</span>: name,</span><br><span class="line">                 <span class="string">"phone"</span>: phone,</span><br><span class="line">                 <span class="string">"qq"</span>: qq,</span><br><span class="line">                 <span class="string">"email"</span>: email&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 3. 将用户字典添加到名片列表</span></span><br><span class="line">    card_list.append(card_dict)</span><br><span class="line"></span><br><span class="line">    print(card_list)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 4. 提示添加成功信息</span></span><br><span class="line">    print(<span class="string">"成功添加 %s 的名片"</span> % card_dict[<span class="string">"name"</span>])</span><br></pre></td></tr></table></figure><blockquote><p>技巧：在 <code>PyCharm</code> 中，可以使用 <code>SHIFT + F6</code> 统一修改变量名</p></blockquote><h2 id="04-显示所有名片"><a href="#04-显示所有名片" class="headerlink" title="04. 显示所有名片"></a>04. 显示所有名片</h2><h3 id="4-1-功能分析"><a href="#4-1-功能分析" class="headerlink" title="4.1 功能分析"></a>4.1 功能分析</h3><ul><li>循环遍历名片列表，顺序显示每一个字典的信息</li></ul><h3 id="4-2-基础代码实现"><a href="#4-2-基础代码实现" class="headerlink" title="4.2 基础代码实现"></a>4.2 基础代码实现</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_all</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""显示全部</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">    print(<span class="string">"功能：显示全部"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> card_dict <span class="keyword">in</span> card_list:</span><br><span class="line"></span><br><span class="line">        print(card_dict)</span><br></pre></td></tr></table></figure><ul><li>显示效果不好！</li></ul><h3 id="4-3-增加标题和使用-t-显示"><a href="#4-3-增加标题和使用-t-显示" class="headerlink" title="4.3 增加标题和使用 \t 显示"></a>4.3 增加标题和使用 <code>\t</code> 显示</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_all</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""显示全部</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">    print(<span class="string">"功能：显示全部"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 打印表头</span></span><br><span class="line">    <span class="keyword">for</span> name <span class="keyword">in</span> [<span class="string">"姓名"</span>, <span class="string">"电话"</span>, <span class="string">"QQ"</span>, <span class="string">"邮箱"</span>]:</span><br><span class="line">        print(name, end=<span class="string">"\t\t"</span>)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">""</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 打印分隔线</span></span><br><span class="line">    print(<span class="string">"="</span> * <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> card_dict <span class="keyword">in</span> card_list:</span><br><span class="line"></span><br><span class="line">        print(<span class="string">"%s\t\t%s\t\t%s\t\t%s"</span> % (card_dict[<span class="string">"name"</span>],</span><br><span class="line">                                        card_dict[<span class="string">"phone"</span>],</span><br><span class="line">                                        card_dict[<span class="string">"qq"</span>],</span><br><span class="line">                                        card_dict[<span class="string">"email"</span>]))</span><br></pre></td></tr></table></figure><h3 id="4-4-增加没有名片记录判断"><a href="#4-4-增加没有名片记录判断" class="headerlink" title="4.4 增加没有名片记录判断"></a>4.4 增加没有名片记录判断</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_all</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""显示全部</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">    print(<span class="string">"功能：显示全部"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1. 判断是否有名片记录</span></span><br><span class="line">    <span class="keyword">if</span> len(card_list) == <span class="number">0</span>:</span><br><span class="line">        print(<span class="string">"提示：没有任何名片记录"</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong></p><ul><li>在函数中使用 <code>return</code> 表示返回</li><li>如果在 <code>return</code> 后没有跟任何内容，只是表示该函数执行到此就不再执行后续的代码</li></ul><h2 id="05-查询名片"><a href="#05-查询名片" class="headerlink" title="05. 查询名片"></a>05. 查询名片</h2><h3 id="5-1-功能分析"><a href="#5-1-功能分析" class="headerlink" title="5.1 功能分析"></a>5.1 功能分析</h3><ol><li>提示用户要搜索的姓名</li><li>根据用户输入的姓名遍历列表</li><li>搜索到指定的名片后，再执行后续的操作</li></ol><h3 id="5-2-代码实现"><a href="#5-2-代码实现" class="headerlink" title="5.2 代码实现"></a>5.2 代码实现</h3><ul><li>查询功能实现</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search_card</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""搜索名片</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">    print(<span class="string">"功能：搜索名片"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1. 提示要搜索的姓名</span></span><br><span class="line">    find_name = input(<span class="string">"请输入要搜索的姓名："</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2. 遍历字典</span></span><br><span class="line">    <span class="keyword">for</span> card_dict <span class="keyword">in</span> card_list:</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> card_dict[<span class="string">"name"</span>] == find_name:</span><br><span class="line"></span><br><span class="line">            print(<span class="string">"姓名\t\t\t电话\t\t\tQQ\t\t\t邮箱"</span>)</span><br><span class="line">            print(<span class="string">"-"</span> * <span class="number">40</span>)</span><br><span class="line">            </span><br><span class="line">            print(<span class="string">"%s\t\t\t%s\t\t\t%s\t\t\t%s"</span> % (</span><br><span class="line">                card_dict[<span class="string">"name"</span>],</span><br><span class="line">                card_dict[<span class="string">"phone"</span>],</span><br><span class="line">                card_dict[<span class="string">"qq"</span>],</span><br><span class="line">                card_dict[<span class="string">"email"</span>]))</span><br><span class="line"></span><br><span class="line">            print(<span class="string">"-"</span> * <span class="number">40</span>)</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># TODO(小明) 针对找到的字典进行后续操作：修改/删除</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"没有找到 %s"</span> % find_name)</span><br></pre></td></tr></table></figure><ul><li>增加名片操作函数：<strong>修改</strong>/<strong>删除</strong>/<strong>返回主菜单</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deal_card</span><span class="params">(find_dict)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""操作搜索到的名片字典</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param find_dict:找到的名片字典</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    print(find_dict)</span><br><span class="line"></span><br><span class="line">    action_str = input(<span class="string">"请选择要执行的操作 "</span></span><br><span class="line">                       <span class="string">"[1] 修改 [2] 删除 [0] 返回上级菜单"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> action == <span class="string">"1"</span>:</span><br><span class="line">        print(<span class="string">"修改"</span>)</span><br><span class="line">    <span class="keyword">elif</span> action == <span class="string">"2"</span>:</span><br><span class="line">        print(<span class="string">"删除"</span>)</span><br></pre></td></tr></table></figure><h2 id="06-修改和删除"><a href="#06-修改和删除" class="headerlink" title="06. 修改和删除"></a>06. 修改和删除</h2><h3 id="6-1-查询成功后删除名片"><a href="#6-1-查询成功后删除名片" class="headerlink" title="6.1 查询成功后删除名片"></a>6.1 查询成功后删除名片</h3><ul><li>由于找到的字典记录已经在列表中保存</li><li>要删除名片记录，只需要把列表中对应的字典删除即可</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">elif</span> action == <span class="string">"2"</span>:</span><br><span class="line">    card_list.remove(find_dict)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"删除成功"</span>)</span><br></pre></td></tr></table></figure><h3 id="6-2-修改名片"><a href="#6-2-修改名片" class="headerlink" title="6.2 修改名片"></a>6.2 修改名片</h3><ul><li>由于找到的字典记录已经在列表中保存</li><li>要修改名片记录，只需要把列表中对应的字典中每一个键值对的数据修改即可</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> action == <span class="string">"1"</span>:</span><br><span class="line"></span><br><span class="line">    find_dict[<span class="string">"name"</span>] = input(<span class="string">"请输入姓名："</span>)</span><br><span class="line">    find_dict[<span class="string">"phone"</span>] = input(<span class="string">"请输入电话："</span>)</span><br><span class="line">    find_dict[<span class="string">"qq"</span>] = input(<span class="string">"请输入QQ："</span>)</span><br><span class="line">    find_dict[<span class="string">"email"</span>] = input(<span class="string">"请输入邮件："</span>)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"%s 的名片修改成功"</span> % find_dict[<span class="string">"name"</span>])</span><br></pre></td></tr></table></figure><h4 id="修改名片细化"><a href="#修改名片细化" class="headerlink" title="修改名片细化"></a>修改名片细化</h4><ul><li><strong>如果用户在使用时，某些名片内容并不想修改</strong>，应该如何做呢？—— 既然系统提供的 <code>input</code> 函数不能满足需求，那么就新定义一个函数 <code>input_card_info</code> 对系统的 <code>input</code> 函数进行扩展</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">input_card_info</span><span class="params">(dict_value, tip_message)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="string">"""输入名片信息</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    :param dict_value: 字典原有值</span></span><br><span class="line"><span class="string">    :param tip_message: 输入提示信息</span></span><br><span class="line"><span class="string">    :return: 如果输入，返回输入内容，否则返回字典原有值</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># 1. 提示用户输入内容</span></span><br><span class="line">    result_str = input(tip_message)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 2. 针对用户的输入进行判断，如果用户输入了内容，直接返回结果</span></span><br><span class="line">    <span class="keyword">if</span> len(result_str) &gt; <span class="number">0</span>:</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result_str</span><br><span class="line">    <span class="comment"># 3. 如果用户没有输入内容，返回 `字典中原有的值`</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> dict_value</span><br></pre></td></tr></table></figure><h2 id="07-LINUX-上的-Shebang-符号"><a href="#07-LINUX-上的-Shebang-符号" class="headerlink" title="07. LINUX 上的 Shebang 符号(#!)"></a>07. LINUX 上的 <code>Shebang</code> 符号(<code>#!</code>)</h2><ul><li><code>#!</code>这个符号叫做 <code>Shebang</code> 或者 <code>Sha-bang</code></li><li><code>Shebang</code> 通常在 <code>Unix</code> 系统脚本的中 <strong>第一行开头</strong> 使用</li><li>指明 <strong>执行这个脚本文件</strong> 的 <strong>解释程序</strong></li></ul><h3 id="使用-Shebang-的步骤"><a href="#使用-Shebang-的步骤" class="headerlink" title="使用 Shebang 的步骤"></a>使用 Shebang 的步骤</h3><ul><li><ol><li>使用 <code>which</code> 查询 <code>python3</code> 解释器所在路径</li></ol></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">which</span> python3</span><br></pre></td></tr></table></figure><ul><li><ol start="2"><li>修改要运行的 <strong>主 python 文件</strong>，在第一行增加以下内容</li></ol></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/python3</span></span><br></pre></td></tr></table></figure><ul><li><ol start="3"><li>修改 <strong>主 python 文件</strong> 的文件权限，增加执行权限</li></ol></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ chmod +x cards_main.py</span><br></pre></td></tr></table></figure><ul><li><ol start="4"><li>在需要时执行程序即可</li></ol></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./cards_main.py</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 项目 </tag>
            
            <tag> 名片管理系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高级变量类型</title>
      <link href="/2019/11/02/%E9%AB%98%E7%BA%A7%E5%8F%98%E9%87%8F%E7%B1%BB%E5%9E%8B/"/>
      <url>/2019/11/02/%E9%AB%98%E7%BA%A7%E5%8F%98%E9%87%8F%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="高级变量类型"><a href="#高级变量类型" class="headerlink" title="高级变量类型"></a>高级变量类型</h1><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ul><li>列表</li><li>元组</li><li>字典</li><li>字符串</li><li>公共方法</li><li>变量高级</li></ul><h3 id="知识点回顾"><a href="#知识点回顾" class="headerlink" title="知识点回顾"></a>知识点回顾</h3><ul><li>Python 中数据类型可以分为 <strong>数字型</strong> 和 <strong>非数字型</strong></li><li>数字型<ul><li>整型 (<code>int</code>)</li><li>浮点型（<code>float</code>）</li><li>布尔型（<code>bool</code>） <ul><li>真 <code>True</code> <code>非 0 数</code> —— <strong>非零即真</strong></li><li>假 <code>False</code> <code>0</code></li></ul></li><li>复数型 (<code>complex</code>)<ul><li>主要用于科学计算，例如：平面场问题、波动问题、电感电容等问题</li></ul></li></ul></li><li>非数字型<ul><li>字符串</li><li>列表</li><li>元组</li><li>字典</li></ul></li><li>在 <code>Python</code> 中，所有 <strong>非数字型变量</strong> 都支持以下特点：<ol><li>都是一个 <strong>序列</strong> <code>sequence</code>，也可以理解为 <strong>容器</strong></li><li><strong>取值</strong> <code>[]</code></li><li><strong>遍历</strong> <code>for in</code></li><li><strong>计算长度</strong>、<strong>最大/最小值</strong>、<strong>比较</strong>、<strong>删除</strong></li><li><strong>链接</strong> <code>+</code> 和 <strong>重复</strong> <code>*</code></li><li><strong>切片</strong></li></ol></li></ul><h2 id="01-列表"><a href="#01-列表" class="headerlink" title="01. 列表"></a>01. 列表</h2><h3 id="1-1-列表的定义"><a href="#1-1-列表的定义" class="headerlink" title="1.1 列表的定义"></a>1.1 列表的定义</h3><ul><li><code>List</code>（列表） 是 <code>Python</code> 中使用 <strong>最频繁</strong> 的数据类型，在其他语言中通常叫做 <strong>数组</strong></li><li>专门用于存储 <strong>一串 信息</strong></li><li>列表用 <code>[]</code> 定义，<strong>数据</strong> 之间使用 <code>,</code> 分隔</li><li>列表的 <strong>索引</strong> 从 <code>0</code> 开始<ul><li><strong>索引</strong> 就是数据在 <strong>列表</strong> 中的位置编号，<strong>索引</strong> 又可以被称为 <strong>下标</strong></li></ul></li></ul><blockquote><p>注意：从列表中取值时，如果 <strong>超出索引范围</strong>，程序会报错</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name_list = [<span class="string">"zhangsan"</span>, <span class="string">"lisi"</span>, <span class="string">"wangwu"</span>]</span><br></pre></td></tr></table></figure><p><img src="001_列表示意图.png" alt="列表示意图"></p><h3 id="1-2-列表常用操作"><a href="#1-2-列表常用操作" class="headerlink" title="1.2 列表常用操作"></a>1.2 列表常用操作</h3><ul><li>在 <code>ipython3</code> 中定义一个 <strong>列表</strong>，例如：<code>name_list = []</code></li><li>输入 <code>name_list.</code> 按下 <code>TAB</code> 键，<code>ipython</code> 会提示 <strong>列表</strong> 能够使用的 <strong>方法</strong> 如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">In [1]: name_list.</span><br><span class="line">name_list.append   name_list.count    name_list.insert   name_list.reverse</span><br><span class="line">name_list.clear    name_list.extend   name_list.pop      name_list.sort</span><br><span class="line">name_list.copy     name_list.index    name_list.remove</span><br></pre></td></tr></table></figure><table><thead><tr><th>序号</th><th>分类</th><th>关键字 / 函数 / 方法</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td>增加</td><td>列表.insert(索引, 数据)</td><td>在指定位置插入数据</td></tr><tr><td></td><td></td><td>列表.append(数据)</td><td>在末尾追加数据</td></tr><tr><td></td><td></td><td>列表.extend(列表2)</td><td>将列表2 的数据追加到列表</td></tr><tr><td>2</td><td>修改</td><td>列表[索引] = 数据</td><td>修改指定索引的数据</td></tr><tr><td>3</td><td>删除</td><td>del 列表[索引]</td><td>删除指定索引的数据</td></tr><tr><td></td><td></td><td>列表.remove[数据]</td><td>删除第一个出现的指定数据</td></tr><tr><td></td><td></td><td>列表.pop</td><td>删除末尾数据</td></tr><tr><td></td><td></td><td>列表.pop(索引)</td><td>删除指定索引数据</td></tr><tr><td></td><td></td><td>列表.clear</td><td>清空列表</td></tr><tr><td>4</td><td>统计</td><td>len(列表)</td><td>列表长度</td></tr><tr><td></td><td></td><td>列表.count(数据)</td><td>数据在列表中出现的次数</td></tr><tr><td>5</td><td>排序</td><td>列表.sort()</td><td>升序排序</td></tr><tr><td></td><td></td><td>列表.sort(reverse=True)</td><td>降序排序</td></tr><tr><td></td><td></td><td>列表.reverse()</td><td>逆序、反转</td></tr></tbody></table><h4 id="del-关键字（科普）"><a href="#del-关键字（科普）" class="headerlink" title="del 关键字（科普）"></a>del 关键字（科普）</h4><ul><li>使用 <code>del</code> 关键字(<code>delete</code>) 同样可以删除列表中元素</li><li><code>del</code> 关键字本质上是用来 <strong>将一个变量从内存中删除的</strong></li><li>如果使用 <code>del</code> 关键字将变量从内存中删除，后续的代码就不能再使用这个变量了</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">del</span> name_list[<span class="number">1</span>]</span><br></pre></td></tr></table></figure><blockquote><p>在日常开发中，要从列表删除数据，建议 <strong>使用列表提供的方法</strong></p></blockquote><h4 id="关键字、函数和方法（科普）"><a href="#关键字、函数和方法（科普）" class="headerlink" title="关键字、函数和方法（科普）"></a>关键字、函数和方法（科普）</h4><ul><li><strong>关键字</strong> 是 Python 内置的、具有特殊意义的标识符</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">1</span>]: <span class="keyword">import</span> keyword</span><br><span class="line">In [<span class="number">2</span>]: print(keyword.kwlist)</span><br><span class="line">In [<span class="number">3</span>]: print(len(keyword.kwlist))</span><br></pre></td></tr></table></figure><blockquote><p>关键字后面不需要使用括号</p></blockquote><ul><li><strong>函数</strong> 封装了独立功能，可以直接调用</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">函数名(参数)</span><br></pre></td></tr></table></figure><blockquote><p>函数需要死记硬背</p></blockquote><ul><li><strong>方法</strong> 和函数类似，同样是封装了独立的功能</li><li><strong>方法</strong> 需要通过 <strong>对象</strong> 来调用，表示针对这个 <strong>对象</strong> 要做的操作</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">对象.方法名(参数)</span><br></pre></td></tr></table></figure><blockquote><p>在变量后面输入 <code>.</code>，然后选择针对这个变量要执行的操作，记忆起来比函数要简单很多</p></blockquote><h3 id="1-3-循环遍历"><a href="#1-3-循环遍历" class="headerlink" title="1.3 循环遍历"></a>1.3 循环遍历</h3><ul><li><strong>遍历</strong> 就是 <strong>从头到尾</strong> <strong>依次</strong> 从 <strong>列表</strong> 中获取数据<ul><li>在 <strong>循环体内部</strong> 针对 <strong>每一个元素</strong>，执行相同的操作</li></ul></li><li>在 <code>Python</code> 中为了提高列表的遍历效率，专门提供的 <strong>迭代 iteration 遍历</strong></li><li>使用 <code>for</code> 就能够实现迭代遍历</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for 循环内部使用的变量 in 列表</span></span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> name_list:</span><br><span class="line">    循环内部针对列表元素进行操作</span><br><span class="line">    print(name)</span><br></pre></td></tr></table></figure><p><img src="002_forin循环流程图.png" alt="forin循环流程图"></p><h3 id="1-4-应用场景"><a href="#1-4-应用场景" class="headerlink" title="1.4 应用场景"></a>1.4 <strong>应用场景</strong></h3><ul><li>尽管 <code>Python</code> 的 <strong>列表</strong> 中可以 <strong>存储不同类型的数据</strong></li><li>但是在开发中，更多的应用场景是<ol><li><strong>列表</strong> 存储相同类型的数据</li><li>通过 <strong>迭代遍历</strong>，在循环体内部，针对列表中的每一项元素，执行相同的操作</li></ol></li></ul><h2 id="02-元组"><a href="#02-元组" class="headerlink" title="02. 元组"></a>02. 元组</h2><h3 id="2-1-元组的定义"><a href="#2-1-元组的定义" class="headerlink" title="2.1 元组的定义"></a>2.1 元组的定义</h3><ul><li><code>Tuple</code>（元组）与列表类似，不同之处在于元组的 <strong>元素不能修改</strong><ul><li><strong>元组</strong> 表示多个元素组成的序列</li><li><strong>元组</strong> 在 <code>Python</code> 开发中，有特定的应用场景</li></ul></li><li>用于存储 <strong>一串 信息</strong>，<strong>数据</strong> 之间使用 <code>,</code> 分隔</li><li>元组用 <code>()</code> 定义</li><li>元组的 <strong>索引</strong> 从 <code>0</code> 开始<ul><li><strong>索引</strong> 就是数据在 <strong>元组</strong> 中的位置编号</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info_tuple = (<span class="string">"zhangsan"</span>, <span class="number">18</span>, <span class="number">1.75</span>)</span><br></pre></td></tr></table></figure><h4 id="创建空元组"><a href="#创建空元组" class="headerlink" title="创建空元组"></a>创建空元组</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info_tuple = ()</span><br></pre></td></tr></table></figure><h4 id="元组中-只包含一个元素-时，需要-在元素后面添加逗号"><a href="#元组中-只包含一个元素-时，需要-在元素后面添加逗号" class="headerlink" title="元组中 只包含一个元素 时，需要 在元素后面添加逗号"></a>元组中 <strong>只包含一个元素</strong> 时，需要 <strong>在元素后面添加逗号</strong></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info_tuple = (<span class="number">50</span>, )</span><br></pre></td></tr></table></figure><p><img src="003_元组示意图.png" alt="元组示意图"></p><h3 id="2-2-元组常用操作"><a href="#2-2-元组常用操作" class="headerlink" title="2.2 元组常用操作"></a>2.2 元组常用操作</h3><ul><li>在 <code>ipython3</code> 中定义一个 <strong>元组</strong>，例如：<code>info = ()</code></li><li>输入 <code>info.</code> 按下 <code>TAB</code> 键，<code>ipython</code> 会提示 <strong>元组</strong> 能够使用的函数如下：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info.count  info.index</span><br></pre></td></tr></table></figure><blockquote><p>有关 <strong>元组</strong> 的 <strong>常用操作</strong> 可以参照上图练习</p></blockquote><h3 id="2-3-循环遍历"><a href="#2-3-循环遍历" class="headerlink" title="2.3 循环遍历"></a>2.3 循环遍历</h3><ul><li><strong>取值</strong> 就是从 <strong>元组</strong> 中获取存储在指定位置的数据</li><li><strong>遍历</strong> 就是 <strong>从头到尾</strong> <strong>依次</strong> 从 <strong>元组</strong> 中获取数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for 循环内部使用的变量 in 元组</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> info:</span><br><span class="line">    循环内部针对元组元素进行操作</span><br><span class="line">    print(item)</span><br></pre></td></tr></table></figure><blockquote><ul><li>在 <code>Python</code> 中，可以使用 <code>for</code> 循环遍历所有非数字型类型的变量：<strong>列表</strong>、<strong>元组</strong>、<strong>字典</strong> 以及 <strong>字符串</strong></li><li>提示：在实际开发中，除非 <strong>能够确认元组中的数据类型</strong>，否则针对元组的循环遍历需求并不是很多</li></ul></blockquote><h3 id="2-4-应用场景"><a href="#2-4-应用场景" class="headerlink" title="2.4 应用场景"></a>2.4 应用场景</h3><ul><li>尽管可以使用 <code>for in</code> 遍历 <strong>元组</strong></li><li>但是在开发中，更多的应用场景是：<ul><li><strong>函数的 参数 和 返回值</strong>，一个函数可以接收 <strong>任意多个参数</strong>，或者 <strong>一次返回多个数据</strong><ul><li>有关 <strong>函数的参数 和 返回值</strong>，在后续 <strong>函数高级</strong> 给大家介绍</li></ul></li><li><strong>格式字符串</strong>，格式化字符串后面的 <code>()</code> 本质上就是一个元组</li><li><strong>让列表不可以被修改</strong>，以保护数据安全</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">info = (<span class="string">"zhangsan"</span>, <span class="number">18</span>)</span><br><span class="line">print(<span class="string">"%s 的年龄是 %d"</span> % info)</span><br></pre></td></tr></table></figure><h4 id="元组和列表之间的转换"><a href="#元组和列表之间的转换" class="headerlink" title="元组和列表之间的转换"></a>元组和列表之间的转换</h4><ul><li>使用 <code>list</code> 函数可以把元组转换成列表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list(元组)</span><br></pre></td></tr></table></figure><ul><li>使用 <code>tuple</code> 函数可以把列表转换成元组</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tuple(列表)</span><br></pre></td></tr></table></figure><h2 id="03-字典"><a href="#03-字典" class="headerlink" title="03. 字典"></a>03. 字典</h2><h3 id="3-1-字典的定义"><a href="#3-1-字典的定义" class="headerlink" title="3.1 字典的定义"></a>3.1 字典的定义</h3><ul><li><code>dictionary</code>（字典） 是 <strong>除列表以外</strong> <code>Python</code> 之中 <strong>最灵活</strong> 的数据类型</li><li>字典同样可以用来 <strong>存储多个数据</strong><ul><li>通常用于存储 <strong>描述一个 <code>物体</code> 的相关信息</strong> </li></ul></li><li>和列表的区别<ul><li><strong>列表</strong> 是 <strong>有序</strong> 的对象集合</li><li><strong>字典</strong> 是 <strong>无序</strong> 的对象集合</li></ul></li><li>字典用 <code>{}</code> 定义</li><li>字典使用 <strong>键值对</strong> 存储数据，键值对之间使用 <code>,</code> 分隔<ul><li><strong>键</strong> <code>key</code> 是索引</li><li><strong>值</strong> <code>value</code> 是数据</li><li><strong>键</strong> 和 <strong>值</strong> 之间使用 <code>:</code> 分隔</li><li><strong>键必须是唯一的</strong></li><li><strong>值</strong> 可以取任何数据类型，但 <strong>键</strong> 只能使用 <strong>字符串</strong>、<strong>数字</strong>或 <strong>元组</strong></li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">xiaoming = &#123;<span class="string">"name"</span>: <span class="string">"小明"</span>,</span><br><span class="line">            <span class="string">"age"</span>: <span class="number">18</span>,</span><br><span class="line">            <span class="string">"gender"</span>: <span class="literal">True</span>,</span><br><span class="line">            <span class="string">"height"</span>: <span class="number">1.75</span>&#125;</span><br></pre></td></tr></table></figure><p><img src="002_字典示意图.png" alt="字典示意图"></p><h3 id="3-2-字典常用操作"><a href="#3-2-字典常用操作" class="headerlink" title="3.2 字典常用操作"></a>3.2 字典常用操作</h3><ul><li>在 <code>ipython3</code> 中定义一个 <strong>字典</strong>，例如：<code>xiaoming = {}</code></li><li>输入 <code>xiaoming.</code> 按下 <code>TAB</code> 键，<code>ipython</code> 会提示 <strong>字典</strong> 能够使用的函数如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">In [1]: xiaoming.</span><br><span class="line">xiaoming.clear       xiaoming.items       xiaoming.setdefault</span><br><span class="line">xiaoming.copy        xiaoming.keys        xiaoming.update</span><br><span class="line">xiaoming.fromkeys    xiaoming.pop         xiaoming.values</span><br><span class="line">xiaoming.get         xiaoming.popitem</span><br></pre></td></tr></table></figure><blockquote><p>有关 <strong>字典</strong> 的 <strong>常用操作</strong> 可以参照上图练习</p></blockquote><h3 id="3-3-循环遍历"><a href="#3-3-循环遍历" class="headerlink" title="3.3 循环遍历"></a>3.3 循环遍历</h3><ul><li><strong>遍历</strong> 就是 <strong>依次</strong> 从 <strong>字典</strong> 中获取所有键值对</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for 循环内部使用的 `key 的变量` in 字典</span></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> xiaoming:</span><br><span class="line">    print(<span class="string">"%s: %s"</span> % (k, xiaoming[k]))</span><br></pre></td></tr></table></figure><blockquote><p>提示：在实际开发中，由于字典中每一个键值对保存数据的类型是不同的，所以针对字典的循环遍历需求并不是很多</p></blockquote><h3 id="3-4-应用场景"><a href="#3-4-应用场景" class="headerlink" title="3.4 应用场景"></a>3.4 <strong>应用场景</strong></h3><ul><li>尽管可以使用 <code>for in</code> 遍历 <strong>字典</strong></li><li>但是在开发中，更多的应用场景是：<ul><li>使用 <strong>多个键值对</strong>，存储 <strong>描述一个 <code>物体</code> 的相关信息</strong> —— 描述更复杂的数据信息</li><li>将 <strong>多个字典</strong> 放在 <strong>一个列表</strong> 中，再进行遍历，在循环体内部针对每一个字典进行 <strong>相同的处理</strong></li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">card_list = [&#123;<span class="string">"name"</span>: <span class="string">"张三"</span>,</span><br><span class="line">              <span class="string">"qq"</span>: <span class="string">"12345"</span>,</span><br><span class="line">              <span class="string">"phone"</span>: <span class="string">"110"</span>&#125;,</span><br><span class="line">             &#123;<span class="string">"name"</span>: <span class="string">"李四"</span>,</span><br><span class="line">              <span class="string">"qq"</span>: <span class="string">"54321"</span>,</span><br><span class="line">              <span class="string">"phone"</span>: <span class="string">"10086"</span>&#125;</span><br><span class="line">             ]</span><br></pre></td></tr></table></figure><h2 id="04-字符串"><a href="#04-字符串" class="headerlink" title="04. 字符串"></a>04. 字符串</h2><h3 id="4-1-字符串的定义"><a href="#4-1-字符串的定义" class="headerlink" title="4.1 字符串的定义"></a>4.1 字符串的定义</h3><ul><li><strong>字符串</strong> 就是 <strong>一串字符</strong>，是编程语言中表示文本的数据类型</li><li>在 Python 中可以使用 <strong>一对双引号</strong> <code>&quot;</code> 或者 <strong>一对单引号</strong> <code>&#39;</code> 定义一个字符串<ul><li>虽然可以使用 <code>\&quot;</code> 或者 <code>\&#39;</code> 做字符串的转义，但是在实际开发中：<ul><li>如果字符串内部需要使用 <code>&quot;</code>，可以使用 <code>&#39;</code> 定义字符串</li><li>如果字符串内部需要使用 <code>&#39;</code>，可以使用 <code>&quot;</code> 定义字符串</li></ul></li></ul></li><li>可以使用 <strong>索引</strong> 获取一个字符串中 <strong>指定位置的字符</strong>，索引计数从 <strong>0</strong> 开始</li><li>也可以使用 <code>for</code> <strong>循环遍历</strong> 字符串中每一个字符</li></ul><blockquote><p>大多数编程语言都是用 <code>&quot;</code> 来定义字符串</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">string = <span class="string">"Hello Python"</span></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> string:</span><br><span class="line">    print(c)</span><br></pre></td></tr></table></figure><p><img src="005_字符串示意图.png" alt="字符串示意图"></p><h3 id="4-2-字符串的常用操作"><a href="#4-2-字符串的常用操作" class="headerlink" title="4.2 字符串的常用操作"></a>4.2 字符串的常用操作</h3><ul><li>在 <code>ipython3</code> 中定义一个 <strong>字符串</strong>，例如：<code>hello_str = &quot;&quot;</code></li><li>输入 <code>hello_str.</code> 按下 <code>TAB</code> 键，<code>ipython</code> 会提示 <strong>字符串</strong> 能够使用的 <strong>方法</strong> 如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">In [1]: hello_str.</span><br><span class="line">hello_str.capitalize    hello_str.isidentifier  hello_str.rindex</span><br><span class="line">hello_str.casefold      hello_str.islower       hello_str.rjust</span><br><span class="line">hello_str.center        hello_str.isnumeric     hello_str.rpartition</span><br><span class="line">hello_str.count         hello_str.isprintable   hello_str.rsplit</span><br><span class="line">hello_str.encode        hello_str.isspace       hello_str.rstrip</span><br><span class="line">hello_str.endswith      hello_str.istitle       hello_str.split</span><br><span class="line">hello_str.expandtabs    hello_str.isupper       hello_str.splitlines</span><br><span class="line">hello_str.find          hello_str.join          hello_str.startswith</span><br><span class="line">hello_str.format        hello_str.ljust         hello_str.strip</span><br><span class="line">hello_str.format_map    hello_str.lower         hello_str.swapcase</span><br><span class="line">hello_str.index         hello_str.lstrip        hello_str.title</span><br><span class="line">hello_str.isalnum       hello_str.maketrans     hello_str.translate</span><br><span class="line">hello_str.isalpha       hello_str.partition     hello_str.upper</span><br><span class="line">hello_str.isdecimal     hello_str.replace       hello_str.zfill</span><br><span class="line">hello_str.isdigit       hello_str.rfind</span><br></pre></td></tr></table></figure><blockquote><p>提示：正是因为 python 内置提供的方法足够多，才使得在开发时，能够针对字符串进行更加灵活的操作！应对更多的开发需求！</p></blockquote><h4 id="1-判断类型-9"><a href="#1-判断类型-9" class="headerlink" title="1) 判断类型 - 9"></a>1) 判断类型 - 9</h4><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>string.isspace()</td><td>如果 string 中只包含空格，则返回 True</td></tr><tr><td>string.isalnum()</td><td>如果 string 至少有一个字符并且所有字符都是字母或数字则返回 True</td></tr><tr><td>string.isalpha()</td><td>如果 string 至少有一个字符并且所有字符都是字母则返回 True</td></tr><tr><td>string.isdecimal()</td><td>如果 string 只包含数字则返回 True，<code>全角数字</code></td></tr><tr><td>string.isdigit()</td><td>如果 string 只包含数字则返回 True，<code>全角数字</code>、<code>⑴</code>、<code>\u00b2</code></td></tr><tr><td>string.isnumeric()</td><td>如果 string 只包含数字则返回 True，<code>全角数字</code>，<code>汉字数字</code></td></tr><tr><td>string.istitle()</td><td>如果 string 是标题化的(每个单词的首字母大写)则返回 True</td></tr><tr><td>string.islower()</td><td>如果 string 中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是小写，则返回 True</td></tr><tr><td>string.isupper()</td><td>如果 string 中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是大写，则返回 True</td></tr></tbody></table><h4 id="2-查找和替换-7"><a href="#2-查找和替换-7" class="headerlink" title="2) 查找和替换 - 7"></a>2) 查找和替换 - 7</h4><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>string.startswith(str)</td><td>检查字符串是否是以 str 开头，是则返回 True</td></tr><tr><td>string.endswith(str)</td><td>检查字符串是否是以 str 结束，是则返回 True</td></tr><tr><td>string.find(str, start=0, end=len(string))</td><td>检测 str 是否包含在 string 中，如果 start 和 end 指定范围，则检查是否包含在指定范围内，如果是返回开始的索引值，否则返回 <code>-1</code></td></tr><tr><td>string.rfind(str, start=0, end=len(string))</td><td>类似于 find()，不过是从右边开始查找</td></tr><tr><td>string.index(str, start=0, end=len(string))</td><td>跟 find() 方法类似，不过如果 str 不在 string 会报错</td></tr><tr><td>string.rindex(str, start=0, end=len(string))</td><td>类似于 index()，不过是从右边开始</td></tr><tr><td>string.replace(old_str, new_str, num=string.count(old))</td><td>把 string 中的 old_str 替换成 new_str，如果 num 指定，则替换不超过 num 次</td></tr></tbody></table><h4 id="3-大小写转换-5"><a href="#3-大小写转换-5" class="headerlink" title="3) 大小写转换 - 5"></a>3) 大小写转换 - 5</h4><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>string.capitalize()</td><td>把字符串的第一个字符大写</td></tr><tr><td>string.title()</td><td>把字符串的每个单词首字母大写</td></tr><tr><td>string.lower()</td><td>转换 string 中所有大写字符为小写</td></tr><tr><td>string.upper()</td><td>转换 string 中的小写字母为大写</td></tr><tr><td>string.swapcase()</td><td>翻转 string 中的大小写</td></tr></tbody></table><h4 id="4-文本对齐-3"><a href="#4-文本对齐-3" class="headerlink" title="4) 文本对齐 - 3"></a>4) 文本对齐 - 3</h4><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>string.ljust(width)</td><td>返回一个原字符串左对齐，并使用空格填充至长度 width 的新字符串</td></tr><tr><td>string.rjust(width)</td><td>返回一个原字符串右对齐，并使用空格填充至长度 width 的新字符串</td></tr><tr><td>string.center(width)</td><td>返回一个原字符串居中，并使用空格填充至长度 width 的新字符串</td></tr></tbody></table><h4 id="5-去除空白字符-3"><a href="#5-去除空白字符-3" class="headerlink" title="5) 去除空白字符 - 3"></a>5) 去除空白字符 - 3</h4><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>string.lstrip()</td><td>截掉 string 左边（开始）的空白字符</td></tr><tr><td>string.rstrip()</td><td>截掉 string 右边（末尾）的空白字符</td></tr><tr><td>string.strip()</td><td>截掉 string 左右两边的空白字符</td></tr></tbody></table><h4 id="6-拆分和连接-5"><a href="#6-拆分和连接-5" class="headerlink" title="6) 拆分和连接 - 5"></a>6) 拆分和连接 - 5</h4><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>string.partition(str)</td><td>把字符串 string 分成一个 3 元素的元组 (str前面, str, str后面)</td></tr><tr><td>string.rpartition(str)</td><td>类似于 partition() 方法，不过是从右边开始查找</td></tr><tr><td>string.split(str=””, num)</td><td>以 str 为分隔符拆分 string，如果 num 有指定值，则仅分隔 num + 1 个子字符串，str 默认包含 ‘\r’, ‘\t’, ‘\n’ 和空格</td></tr><tr><td>string.splitlines()</td><td>按照行(‘\r’, ‘\n’, ‘\r\n’)分隔，返回一个包含各行作为元素的列表</td></tr><tr><td>string.join(seq)</td><td>以 string 作为分隔符，将 seq 中所有的元素（的字符串表示）合并为一个新的字符串</td></tr></tbody></table><h3 id="4-3-字符串的切片"><a href="#4-3-字符串的切片" class="headerlink" title="4.3 字符串的切片"></a>4.3 字符串的切片</h3><ul><li><strong>切片</strong> 方法适用于 <strong>字符串</strong>、<strong>列表</strong>、<strong>元组</strong><ul><li><strong>切片</strong> 使用 <strong>索引值</strong> 来限定范围，从一个大的 <strong>字符串</strong> 中 <strong>切出</strong> 小的 <strong>字符串</strong></li><li><strong>列表</strong> 和 <strong>元组</strong> 都是 <strong>有序</strong> 的集合，都能够 <strong>通过索引值</strong> 获取到对应的数据</li><li><strong>字典</strong> 是一个 <strong>无序</strong> 的集合，是使用 <strong>键值对</strong> 保存数据</li></ul></li></ul><p><img src="006_字符串索引示意图.png" alt="字符串索引示意图"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">字符串[开始索引:结束索引:步长]</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：</p><ol><li>指定的区间属于 <strong>左闭右开</strong> 型 <code>[开始索引,  结束索引)</code> =&gt; <code>开始索引 &gt;= 范围 &lt; 结束索引</code><ul><li>从 <code>起始</code> 位开始，到 <strong><code>结束</code>位的前一位</strong> 结束（<strong>不包含结束位本身</strong>)</li></ul></li><li>从头开始，<strong>开始索引</strong> <strong>数字可以省略，冒号不能省略</strong></li><li>到末尾结束，<strong>结束索引</strong> <strong>数字可以省略，冒号不能省略</strong></li><li>步长默认为 <code>1</code>，如果连续切片，<strong>数字和冒号都可以省略</strong></li></ol><h4 id="索引的顺序和倒序"><a href="#索引的顺序和倒序" class="headerlink" title="索引的顺序和倒序"></a>索引的顺序和倒序</h4><ul><li>在 Python 中不仅支持 <strong>顺序索引</strong>，同时还支持 <strong>倒序索引</strong></li><li>所谓倒序索引就是 <strong>从右向左</strong> 计算索引<ul><li>最右边的索引值是 <strong>-1</strong>，依次递减</li></ul></li></ul><p><strong>演练需求</strong></p><ul><li><ol><li>截取从 2 ~ 5 位置 的字符串</li></ol></li><li><ol start="2"><li>截取从 2 ~ <code>末尾</code> 的字符串</li></ol></li><li><ol start="3"><li>截取从 <code>开始</code> ~ 5 位置 的字符串</li></ol></li><li><ol start="4"><li>截取完整的字符串</li></ol></li><li><ol start="5"><li>从开始位置，每隔一个字符截取字符串</li></ol></li><li><ol start="6"><li>从索引 1 开始，每隔一个取一个</li></ol></li><li><ol start="7"><li>截取从 2 ~ <code>末尾 - 1</code> 的字符串</li></ol></li><li><ol start="8"><li>截取字符串末尾两个字符</li></ol></li><li><ol start="9"><li>字符串的逆序（面试题）</li></ol></li></ul><p><strong>答案</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">num_str = &quot;0123456789&quot;</span><br><span class="line"></span><br><span class="line"># 1. 截取从 2 ~ 5 位置 的字符串</span><br><span class="line">print(num_str[2:6])</span><br><span class="line"></span><br><span class="line"># 2. 截取从 2 ~ `末尾` 的字符串</span><br><span class="line">print(num_str[2:])</span><br><span class="line"></span><br><span class="line"># 3. 截取从 `开始` ~ 5 位置 的字符串</span><br><span class="line">print(num_str[:6])</span><br><span class="line"></span><br><span class="line"># 4. 截取完整的字符串</span><br><span class="line">print(num_str[:])</span><br><span class="line"></span><br><span class="line"># 5. 从开始位置，每隔一个字符截取字符串</span><br><span class="line">print(num_str[::2])</span><br><span class="line"></span><br><span class="line"># 6. 从索引 1 开始，每隔一个取一个</span><br><span class="line">print(num_str[1::2])</span><br><span class="line"></span><br><span class="line"># 倒序切片</span><br><span class="line"># -1 表示倒数第一个字符</span><br><span class="line">print(num_str[-1])</span><br><span class="line"></span><br><span class="line"># 7. 截取从 2 ~ `末尾 - 1` 的字符串</span><br><span class="line">print(num_str[2:-1])</span><br><span class="line"></span><br><span class="line"># 8. 截取字符串末尾两个字符</span><br><span class="line">print(num_str[-2:])</span><br><span class="line"></span><br><span class="line"># 9. 字符串的逆序（面试题）</span><br><span class="line">print(num_str[::-1])</span><br></pre></td></tr></table></figure><h2 id="05-公共方法"><a href="#05-公共方法" class="headerlink" title="05. 公共方法"></a>05. 公共方法</h2><h3 id="5-1-Python-内置函数"><a href="#5-1-Python-内置函数" class="headerlink" title="5.1 Python 内置函数"></a>5.1 Python 内置函数</h3><p>Python 包含了以下内置函数：</p><table><thead><tr><th>函数</th><th>描述</th><th>备注</th></tr></thead><tbody><tr><td>len(item)</td><td>计算容器中元素个数</td><td></td></tr><tr><td>del(item)</td><td>删除变量</td><td>del 有两种方式</td></tr><tr><td>max(item)</td><td>返回容器中元素最大值</td><td>如果是字典，只针对 key 比较</td></tr><tr><td>min(item)</td><td>返回容器中元素最小值</td><td>如果是字典，只针对 key 比较</td></tr><tr><td>cmp(item1, item2)</td><td>比较两个值，-1 小于/0 相等/1 大于</td><td>Python 3.x 取消了 cmp 函数</td></tr></tbody></table><p><strong>注意</strong></p><ul><li><strong>字符串</strong> 比较符合以下规则： “0” &lt; “A” &lt; “a”</li></ul><h3 id="5-2-切片"><a href="#5-2-切片" class="headerlink" title="5.2 切片"></a>5.2 切片</h3><table><thead><tr><th style="text-align:center">描述</th><th>Python 表达式</th><th>结果</th><th>支持的数据类型</th></tr></thead><tbody><tr><td style="text-align:center">切片</td><td>“0123456789”[::-2]</td><td>“97531”</td><td>字符串、列表、元组</td></tr></tbody></table><ul><li><strong>切片</strong> 使用 <strong>索引值</strong> 来限定范围，从一个大的 <strong>字符串</strong> 中 <strong>切出</strong> 小的 <strong>字符串</strong></li><li><strong>列表</strong> 和 <strong>元组</strong> 都是 <strong>有序</strong> 的集合，都能够 <strong>通过索引值</strong> 获取到对应的数据</li><li><strong>字典</strong> 是一个 <strong>无序</strong> 的集合，是使用 <strong>键值对</strong> 保存数据</li></ul><h3 id="5-3-运算符"><a href="#5-3-运算符" class="headerlink" title="5.3 运算符"></a>5.3 运算符</h3><table><thead><tr><th style="text-align:center">运算符</th><th>Python 表达式</th><th>结果</th><th>描述</th><th>支持的数据类型</th></tr></thead><tbody><tr><td style="text-align:center">+</td><td>[1, 2] + [3, 4]</td><td>[1, 2, 3, 4]</td><td>合并</td><td>字符串、列表、元组</td></tr><tr><td style="text-align:center">*</td><td>[“Hi!”] * 4</td><td>[‘Hi!’, ‘Hi!’, ‘Hi!’, ‘Hi!’]</td><td>重复</td><td>字符串、列表、元组</td></tr><tr><td style="text-align:center">in</td><td>3 in (1, 2, 3)</td><td>True</td><td>元素是否存在</td><td>字符串、列表、元组、字典</td></tr><tr><td style="text-align:center">not in</td><td>4 not in (1, 2, 3)</td><td>True</td><td>元素是否不存在</td><td>字符串、列表、元组、字典</td></tr><tr><td style="text-align:center">&gt; &gt;= == &lt; &lt;=</td><td>(1, 2, 3) &lt; (2, 2, 3)</td><td>True</td><td>元素比较</td><td>字符串、列表、元组</td></tr></tbody></table><p><strong>注意</strong></p><ul><li><code>in</code> 在对 <strong>字典</strong> 操作时，判断的是 <strong>字典的键</strong></li><li><code>in</code> 和 <code>not in</code> 被称为 <strong>成员运算符</strong></li></ul><h4 id="成员运算符"><a href="#成员运算符" class="headerlink" title="成员运算符"></a>成员运算符</h4><p>成员运算符用于 <strong>测试</strong> 序列中是否包含指定的 <strong>成员</strong></p><table><thead><tr><th>运算符</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>in</td><td>如果在指定的序列中找到值返回 True，否则返回 False</td><td><code>3 in (1, 2, 3)</code> 返回 <code>True</code></td></tr><tr><td>not in</td><td>如果在指定的序列中没有找到值返回 True，否则返回 False</td><td><code>3 not in (1, 2, 3)</code> 返回 <code>False</code></td></tr></tbody></table><p>注意：在对 <strong>字典</strong> 操作时，判断的是 <strong>字典的键</strong></p><h3 id="5-4-完整的-for-循环语法"><a href="#5-4-完整的-for-循环语法" class="headerlink" title="5.4 完整的 for 循环语法"></a>5.4 完整的 for 循环语法</h3><ul><li>在 <code>Python</code> 中完整的 <code>for 循环</code> 的语法如下：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> 变量 <span class="keyword">in</span> 集合:</span><br><span class="line">    循环体代码</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    没有通过 <span class="keyword">break</span> 退出循环，循环结束后，会执行的代码</span><br></pre></td></tr></table></figure><h4 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h4><ul><li>在 <strong>迭代遍历</strong> 嵌套的数据类型时，例如 <strong>一个列表包含了多个字典</strong></li><li>需求：要判断 某一个字典中 是否存在 指定的 值 <ul><li>如果 <strong>存在</strong>，提示并且退出循环</li><li>如果 <strong>不存在</strong>，在 <strong>循环整体结束</strong> 后，希望 <strong>得到一个统一的提示</strong></li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">students = [</span><br><span class="line">    &#123;<span class="string">"name"</span>: <span class="string">"阿土"</span>,</span><br><span class="line">     <span class="string">"age"</span>: <span class="number">20</span>,</span><br><span class="line">     <span class="string">"gender"</span>: <span class="literal">True</span>,</span><br><span class="line">     <span class="string">"height"</span>: <span class="number">1.7</span>,</span><br><span class="line">     <span class="string">"weight"</span>: <span class="number">75.0</span>&#125;,</span><br><span class="line">    &#123;<span class="string">"name"</span>: <span class="string">"小美"</span>,</span><br><span class="line">     <span class="string">"age"</span>: <span class="number">19</span>,</span><br><span class="line">     <span class="string">"gender"</span>: <span class="literal">False</span>,</span><br><span class="line">     <span class="string">"height"</span>: <span class="number">1.6</span>,</span><br><span class="line">     <span class="string">"weight"</span>: <span class="number">45.0</span>&#125;,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">find_name = <span class="string">"阿土"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> stu_dict <span class="keyword">in</span> students:</span><br><span class="line">    print(stu_dict)</span><br><span class="line">    <span class="comment"># 判断当前遍历的字典中姓名是否为find_name</span></span><br><span class="line">    <span class="keyword">if</span> stu_dict[<span class="string">"name"</span>] == find_name:</span><br><span class="line">        print(<span class="string">"找到了"</span>)</span><br><span class="line">        <span class="comment"># 如果已经找到，直接退出循环，就不需要再对后续的数据进行比较</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"没有找到"</span>)</span><br><span class="line">print(<span class="string">"循环结束"</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 变量类型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数基础</title>
      <link href="/2019/11/02/%E5%87%BD%E6%95%B0%E5%9F%BA%E7%A1%80/"/>
      <url>/2019/11/02/%E5%87%BD%E6%95%B0%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="函数基础"><a href="#函数基础" class="headerlink" title="函数基础"></a>函数基础</h1><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ul><li>函数的快速体验</li><li>函数的基本使用</li><li>函数的参数</li><li>函数的返回值</li><li>函数的嵌套调用</li><li>在模块中定义函数</li></ul><h2 id="01-函数的快速体验"><a href="#01-函数的快速体验" class="headerlink" title="01. 函数的快速体验"></a>01. 函数的快速体验</h2><h3 id="1-1-快速体验"><a href="#1-1-快速体验" class="headerlink" title="1.1 快速体验"></a>1.1 快速体验</h3><ul><li>所谓<strong>函数</strong>，就是把 <strong>具有独立功能的代码块</strong> 组织为一个小模块，在需要的时候 <strong>调用</strong></li><li>函数的使用包含两个步骤：<ol><li>定义函数 —— <strong>封装</strong> 独立的功能</li><li>调用函数 —— 享受 <strong>封装</strong> 的成果</li></ol></li><li><strong>函数的作用</strong>，在开发程序时，使用函数可以提高编写的效率以及代码的 <strong>重用</strong></li></ul><p><strong>演练步骤</strong></p><ol><li>新建 <code>04_函数</code> 项目</li><li>复制之前完成的 <strong>乘法表</strong> 文件</li><li>修改文件，增加函数定义 <code>multiple_table():</code></li><li>新建另外一个文件，使用 <code>import</code> 导入并且调用函数</li></ol><h2 id="02-函数基本使用"><a href="#02-函数基本使用" class="headerlink" title="02. 函数基本使用"></a>02. 函数基本使用</h2><h3 id="2-1-函数的定义"><a href="#2-1-函数的定义" class="headerlink" title="2.1 函数的定义"></a>2.1 函数的定义</h3><p>定义函数的格式如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> 函数名<span class="params">()</span>:</span></span><br><span class="line">    函数封装的代码</span><br><span class="line">    ……</span><br></pre></td></tr></table></figure><ol><li><code>def</code> 是英文 <code>define</code> 的缩写</li><li><strong>函数名称</strong> 应该能够表达 <strong>函数封装代码</strong> 的功能，方便后续的调用</li><li><strong>函数名称</strong> 的命名应该 <strong>符合</strong> <strong>标识符的命名规则</strong><ul><li>可以由 <strong>字母</strong>、<strong>下划线</strong> 和 <strong>数字</strong> 组成</li><li><strong>不能以数字开头</strong></li><li><strong>不能与关键字重名</strong></li></ul></li></ol><h3 id="2-2-函数调用"><a href="#2-2-函数调用" class="headerlink" title="2.2 函数调用"></a>2.2 函数调用</h3><p>调用函数很简单的，通过 <code>函数名()</code> 即可完成对函数的调用</p><h3 id="2-3-第一个函数演练"><a href="#2-3-第一个函数演练" class="headerlink" title="2.3 第一个函数演练"></a>2.3 第一个函数演练</h3><p><strong>需求</strong></p><ul><li><ol><li>编写一个打招呼 <code>say_hello</code> 的函数，封装三行打招呼的代码</li></ol></li><li><ol start="2"><li>在函数下方调用打招呼的代码</li></ol></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">"小明"</span></span><br><span class="line"><span class="comment"># 解释器知道这里定义了一个函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">say_hello</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"hello 1"</span>)</span><br><span class="line">    print(<span class="string">"hello 2"</span>)</span><br><span class="line">    print(<span class="string">"hello 3"</span>)</span><br><span class="line"></span><br><span class="line">print(name)</span><br><span class="line"><span class="comment"># 只有在调用函数时，之前定义的函数才会被执行</span></span><br><span class="line"><span class="comment"># 函数执行完成之后，会重新回到之前的程序中，继续执行后续的代码</span></span><br><span class="line">say_hello()</span><br><span class="line">print(name)</span><br></pre></td></tr></table></figure><blockquote><p>用 <strong>单步执行 F8 和 F7</strong> 观察以下代码的执行过程</p></blockquote><ul><li>定义好函数之后，只表示这个函数封装了一段代码而已</li><li>如果不主动调用函数，函数是不会主动执行的</li></ul><h4 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h4><ul><li>能否将 <strong>函数调用</strong> 放在 <strong>函数定义</strong> 的上方？<ul><li>不能！</li><li>因为在 <strong>使用函数名</strong> 调用函数之前，必须要保证 <code>Python</code> 已经知道函数的存在</li><li>否则控制台会提示 <code>NameError: name &#39;say_hello&#39; is not defined</code> (<strong>名称错误：say_hello 这个名字没有被定义</strong>)</li></ul></li></ul><h3 id="2-4-PyCharm-的调试工具"><a href="#2-4-PyCharm-的调试工具" class="headerlink" title="2.4 PyCharm 的调试工具"></a>2.4 PyCharm 的调试工具</h3><ul><li><strong>F8 Step Over</strong> 可以单步执行代码，会把函数调用看作是一行代码直接执行</li><li><strong>F7 Step Into</strong> 可以单步执行代码，如果是函数，会进入函数内部 </li></ul><h3 id="2-5-函数的文档注释"><a href="#2-5-函数的文档注释" class="headerlink" title="2.5 函数的文档注释"></a>2.5 函数的文档注释</h3><ul><li>在开发中，如果希望给函数添加注释，应该在 <strong>定义函数</strong> 的下方，使用 <strong>连续的三对引号</strong></li><li>在 <strong>连续的三对引号</strong> 之间编写对函数的说明文字</li><li>在 <strong>函数调用</strong> 位置，使用快捷键 <code>CTRL + Q</code> 可以查看函数的说明信息</li></ul><blockquote><p>注意：因为 <strong>函数体相对比较独立</strong>，<strong>函数定义的上方</strong>，应该和其他代码（包括注释）保留 <strong>两个空行</strong></p></blockquote><h2 id="03-函数的参数"><a href="#03-函数的参数" class="headerlink" title="03. 函数的参数"></a>03. 函数的参数</h2><p><strong>演练需求</strong></p><ol><li>开发一个 <code>sum_2_num</code> 的函数</li><li>函数能够实现 <strong>两个数字的求和</strong> 功能</li></ol><p>演练代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sum_2_num</span><span class="params">()</span>:</span></span><br><span class="line">    num1 = <span class="number">10</span></span><br><span class="line">    num2 = <span class="number">20</span></span><br><span class="line">    result = num1 + num2</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"%d + %d = %d"</span> % (num1, num2, result))</span><br><span class="line">sum_2_num()</span><br></pre></td></tr></table></figure><p><strong>思考一下存在什么问题</strong></p><blockquote><p>函数只能处理 <strong>固定数值</strong> 的相加</p></blockquote><p><strong>如何解决？</strong></p><ul><li>如果能够把需要计算的数字，在调用函数时，传递到函数内部就好了！</li></ul><h3 id="3-1-函数参数的使用"><a href="#3-1-函数参数的使用" class="headerlink" title="3.1 函数参数的使用"></a>3.1 函数参数的使用</h3><ul><li>在函数名的后面的小括号内部填写 <strong>参数</strong></li><li>多个参数之间使用 <code>,</code> 分隔</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sum_2_num</span><span class="params">(num1, num2)</span>:</span></span><br><span class="line">    result = num1 + num2</span><br><span class="line">    print(<span class="string">"%d + %d = %d"</span> % (num1, num2, result))</span><br><span class="line">sum_2_num(<span class="number">50</span>, <span class="number">20</span>)</span><br></pre></td></tr></table></figure><h3 id="3-2-参数的作用"><a href="#3-2-参数的作用" class="headerlink" title="3.2 参数的作用"></a>3.2 参数的作用</h3><ul><li><strong>函数</strong>，把 <strong>具有独立功能的代码块</strong> 组织为一个小模块，在需要的时候 <strong>调用</strong></li><li><strong>函数的参数</strong>，增加函数的 <strong>通用性</strong>，针对 <strong>相同的数据处理逻辑</strong>，能够 <strong>适应更多的数据</strong><ol><li>在函数 <strong>内部</strong>，把参数当做 <strong>变量</strong> 使用，进行需要的数据处理</li><li>函数调用时，按照函数定义的<strong>参数顺序</strong>，把 <strong>希望在函数内部处理的数据</strong>，<strong>通过参数</strong> 传递</li></ol></li></ul><h3 id="3-3-形参和实参"><a href="#3-3-形参和实参" class="headerlink" title="3.3 形参和实参"></a>3.3 形参和实参</h3><ul><li><strong>形参</strong>：<strong>定义</strong> 函数时，小括号中的参数，是用来接收参数用的，在函数内部 <strong>作为变量使用</strong></li><li><strong>实参</strong>：<strong>调用</strong> 函数时，小括号中的参数，是用来把数据传递到 <strong>函数内部</strong> 用的</li></ul><h2 id="04-函数的返回值"><a href="#04-函数的返回值" class="headerlink" title="04. 函数的返回值"></a>04. 函数的返回值</h2><ul><li>在程序开发中，有时候，会希望 <strong>一个函数执行结束后，告诉调用者一个结果</strong>，以便调用者针对具体的结果做后续的处理</li><li><strong>返回值</strong> 是函数 <strong>完成工作</strong>后，<strong>最后</strong> 给调用者的 <strong>一个结果</strong></li><li>在函数中使用 <code>return</code> 关键字可以返回结果</li><li>调用函数一方，可以 <strong>使用变量</strong> 来 <strong>接收</strong> 函数的返回结果</li></ul><blockquote><p>注意：<code>return</code> 表示返回，后续的代码都不会被执行</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sum_2_num</span><span class="params">(num1, num2)</span>:</span></span><br><span class="line">    <span class="string">"""对两个数字的求和"""</span></span><br><span class="line">    <span class="keyword">return</span> num1 + num2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用函数，并使用 result 变量接收计算结果</span></span><br><span class="line">result = sum_2_num(<span class="number">10</span>, <span class="number">20</span>)</span><br><span class="line">print(<span class="string">"计算结果是 %d"</span> % result)</span><br></pre></td></tr></table></figure><h2 id="05-函数的嵌套调用"><a href="#05-函数的嵌套调用" class="headerlink" title="05. 函数的嵌套调用"></a>05. 函数的嵌套调用</h2><ul><li>一个函数里面 <strong>又调用</strong> 了 <strong>另外一个函数</strong>，这就是 <strong>函数嵌套调用</strong></li><li>如果函数 <code>test2</code> 中，调用了另外一个函数 <code>test1</code><ul><li>那么执行到调用 <code>test1</code> 函数时，会先把函数 <code>test1</code> 中的任务都执行完</li><li>才会回到 <code>test2</code> 中调用函数 <code>test1</code> 的位置，继续执行后续的代码</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test1</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"*"</span> * <span class="number">50</span>)</span><br><span class="line">    print(<span class="string">"test 1"</span>)</span><br><span class="line">    print(<span class="string">"*"</span> * <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test2</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">    print(<span class="string">"test 2"</span>)</span><br><span class="line">    test1()</span><br><span class="line">    print(<span class="string">"-"</span> * <span class="number">50</span>)</span><br><span class="line">test2()</span><br></pre></td></tr></table></figure><h3 id="函数嵌套的演练-——-打印分隔线"><a href="#函数嵌套的演练-——-打印分隔线" class="headerlink" title="函数嵌套的演练 —— 打印分隔线"></a>函数嵌套的演练 —— 打印分隔线</h3><blockquote><p>体会一下工作中 <strong>需求是多变</strong> 的</p></blockquote><p><strong>需求 1</strong></p><ul><li>定义一个 <code>print_line</code> 函数能够打印 <code>*</code> 组成的 <strong>一条分隔线</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_line</span><span class="params">(char)</span>:</span></span><br><span class="line">    print(<span class="string">"*"</span> * <span class="number">50</span>)</span><br></pre></td></tr></table></figure><p><strong>需求 2</strong></p><ul><li>定义一个函数能够打印 <strong>由任意字符组成</strong> 的分隔线</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_line</span><span class="params">(char)</span>:</span></span><br><span class="line">    print(char * <span class="number">50</span>)</span><br></pre></td></tr></table></figure><p><strong>需求 3</strong></p><ul><li>定义一个函数能够打印 <strong>任意重复次数</strong> 的分隔线</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_line</span><span class="params">(char, times)</span>:</span></span><br><span class="line">    print(char * times)</span><br></pre></td></tr></table></figure><p><strong>需求 4</strong></p><ul><li>定义一个函数能够打印 <strong>5 行</strong> 的分隔线，分隔线要求符合<strong>需求 3</strong></li></ul><blockquote><p>提示：工作中针对需求的变化，应该冷静思考，<strong>不要轻易修改之前已经完成的，能够正常执行的函数</strong>！</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_line</span><span class="params">(char, times)</span>:</span></span><br><span class="line">    print(char * times)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_lines</span><span class="params">(char, times)</span>:</span></span><br><span class="line">    row = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> row &lt; <span class="number">5</span>:</span><br><span class="line">        print_line(char, times)</span><br><span class="line">        row += <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="06-使用模块中的函数"><a href="#06-使用模块中的函数" class="headerlink" title="06. 使用模块中的函数"></a>06. 使用模块中的函数</h2><blockquote><p><strong>模块是 Python 程序架构的一个核心概念</strong></p></blockquote><ul><li><strong>模块</strong> 就好比是 <strong>工具包</strong>，要想使用这个工具包中的工具，就需要 <strong>导入 import</strong> 这个模块</li><li>每一个以扩展名 <code>py</code> 结尾的 <code>Python</code> 源代码文件都是一个 <strong>模块</strong></li><li>在模块中定义的 <strong>全局变量</strong> 、 <strong>函数</strong> 都是模块能够提供给外界直接使用的工具</li></ul><h3 id="6-1-第一个模块体验"><a href="#6-1-第一个模块体验" class="headerlink" title="6.1 第一个模块体验"></a>6.1 第一个模块体验</h3><p><strong>步骤</strong></p><ul><li>新建 <code>hm_10_分隔线模块.py</code><ul><li>复制 <code>hm_09_打印多条分隔线.py</code> 中的内容，<strong>最后一行 <code>print</code> 代码除外</strong></li><li>增加一个字符串变量</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">"黑马程序员"</span></span><br></pre></td></tr></table></figure><ul><li>新建 <code>hm_10_体验模块.py</code> 文件，并且编写以下代码：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hm_10_分隔线模块</span><br><span class="line"></span><br><span class="line">hm_10_分隔线模块.print_line(<span class="string">"-"</span>, <span class="number">80</span>)</span><br><span class="line">print(hm_10_分隔线模块.name)</span><br></pre></td></tr></table></figure><h4 id="体验小结"><a href="#体验小结" class="headerlink" title="体验小结"></a>体验小结</h4><ul><li>可以 <strong>在一个 Python 文件</strong> 中 <strong>定义 变量 或者 函数</strong></li><li>然后在 <strong>另外一个文件中</strong> 使用 <code>import</code> 导入这个模块</li><li>导入之后，就可以使用 <code>模块名.变量</code> / <code>模块名.函数</code> 的方式，使用这个模块中定义的变量或者函数</li></ul><blockquote><p><strong>模块</strong>可以让 <strong>曾经编写过的代码</strong> 方便的被 <strong>复用</strong>！</p></blockquote><h3 id="6-2-模块名也是一个标识符"><a href="#6-2-模块名也是一个标识符" class="headerlink" title="6.2 模块名也是一个标识符"></a>6.2 模块名也是一个标识符</h3><ul><li>标示符可以由 <strong>字母</strong>、<strong>下划线</strong> 和 <strong>数字</strong> 组成</li><li><strong>不能以数字开头</strong></li><li><strong>不能与关键字重名</strong></li></ul><blockquote><p>注意：如果在给 Python 文件起名时，<strong>以数字开头</strong> 是无法在 <code>PyCharm</code> 中通过导入这个模块的</p></blockquote><h3 id="6-3-Pyc-文件（了解）"><a href="#6-3-Pyc-文件（了解）" class="headerlink" title="6.3 Pyc 文件（了解）"></a>6.3 Pyc 文件（了解）</h3><blockquote><p><code>C</code> 是 <code>compiled</code> <strong>编译过</strong> 的意思</p></blockquote><p><strong>操作步骤</strong></p><ol><li>浏览程序目录会发现一个 <code>__pycache__</code> 的目录</li><li>目录下会有一个 <code>hm_10_分隔线模块.cpython-35.pyc</code> 文件，<code>cpython-35</code> 表示 <code>Python</code> 解释器的版本</li><li>这个 <code>pyc</code> 文件是由 Python 解释器将 <strong>模块的源码</strong> 转换为 <strong>字节码</strong><ul><li><code>Python</code> 这样保存 <strong>字节码</strong> 是作为一种启动 <strong>速度的优化</strong></li></ul></li></ol><p><strong>字节码</strong></p><ul><li><code>Python</code> 在解释源程序时是分成两个步骤的<ol><li>首先处理源代码，<strong>编译</strong> 生成一个二进制 <strong>字节码</strong></li><li>再对 <strong>字节码</strong> 进行处理，才会生成 CPU 能够识别的 <strong>机器码</strong></li></ol></li><li>有了模块的字节码文件之后，下一次运行程序时，如果在 <strong>上次保存字节码之后</strong> 没有修改过源代码，Python 将会加载 .pyc 文件并跳过编译这个步骤</li><li>当 <code>Python</code> 重编译时，它会自动检查源文件和字节码文件的时间戳</li><li>如果你又修改了源代码，下次程序运行时，字节码将自动重新创建</li></ul><blockquote><p>提示：有关模块以及模块的其他导入方式，后续课程还会逐渐展开！</p><p><strong>模块是 Python 程序架构的一个核心概念</strong></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> python学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>循环</title>
      <link href="/2019/11/02/%E5%BE%AA%E7%8E%AF/"/>
      <url>/2019/11/02/%E5%BE%AA%E7%8E%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h1><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ul><li>程序的三大流程</li><li>while 循环基本使用</li><li>break 和 continue</li><li>while 循环嵌套</li></ul><h2 id="01-程序的三大流程"><a href="#01-程序的三大流程" class="headerlink" title="01. 程序的三大流程"></a>01. 程序的三大流程</h2><ul><li><p>在程序开发中，一共有三种流程方式：</p><ul><li><strong>顺序</strong> —— <strong>从上向下</strong>，顺序执行代码</li><li><strong>分支</strong> —— 根据条件判断，决定执行代码的 <strong>分支</strong></li><li><strong>循环</strong> —— 让 <strong>特定代码 重复</strong> 执行</li></ul><p><img src="001_程序三大流程.png" alt="程序三大流程"></p></li></ul><h2 id="02-while-循环基本使用"><a href="#02-while-循环基本使用" class="headerlink" title="02. while 循环基本使用"></a>02. <code>while</code> 循环基本使用</h2><ul><li>循环的作用就是让 <strong>指定的代码</strong> 重复的执行</li><li><code>while</code> 循环最常用的应用场景就是 <strong>让执行的代码</strong> 按照 <strong>指定的次数</strong> <strong>重复</strong> 执行</li><li>需求 —— 打印 5 遍 <code>Hello Python</code></li><li>思考 —— 如果要求打印 100 遍怎么办？</li></ul><h3 id="2-1-while-语句基本语法"><a href="#2-1-while-语句基本语法" class="headerlink" title="2.1 while 语句基本语法"></a>2.1 <code>while</code> 语句基本语法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">初始条件设置 —— 通常是重复执行的 计数器</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> 条件(判断 计数器 是否达到 目标次数):</span><br><span class="line">    条件满足时，做的事情<span class="number">1</span></span><br><span class="line">    条件满足时，做的事情<span class="number">2</span></span><br><span class="line">    条件满足时，做的事情<span class="number">3</span></span><br><span class="line">    ...(省略)...</span><br><span class="line">    </span><br><span class="line">    处理条件(计数器 + <span class="number">1</span>)</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：</p><ul><li><code>while</code> 语句以及缩进部分是一个 <strong>完整的代码块</strong></li></ul><h4 id="第一个-while-循环"><a href="#第一个-while-循环" class="headerlink" title="第一个 while 循环"></a>第一个 while 循环</h4><p><strong>需求</strong></p><ul><li>打印 5 遍 Hello Python</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 1. 定义重复次数计数器</span><br><span class="line">i = 1</span><br><span class="line"></span><br><span class="line"># 2. 使用 while 判断条件</span><br><span class="line">while i &lt;= 5:</span><br><span class="line">    # 要重复执行的代码</span><br><span class="line">    print(&quot;Hello Python&quot;)</span><br><span class="line"></span><br><span class="line">    # 处理计数器 i</span><br><span class="line">    i = i + 1</span><br><span class="line"></span><br><span class="line">print(&quot;循环结束后的 i = %d&quot; % i)</span><br></pre></td></tr></table></figure><blockquote><p>注意：循环结束后，之前定义的计数器条件的数值是依旧存在的</p></blockquote><h4 id="死循环"><a href="#死循环" class="headerlink" title="死循环"></a>死循环</h4><blockquote><p>由于程序员的原因，<strong>忘记</strong> 在循环内部 <strong>修改循环的判断条件</strong>，导致循环持续执行，程序无法终止！</p></blockquote><h3 id="2-2-赋值运算符"><a href="#2-2-赋值运算符" class="headerlink" title="2.2 赋值运算符"></a>2.2 赋值运算符</h3><ul><li>在 Python 中，使用 <code>=</code> 可以给变量赋值</li><li>在算术运算时，为了简化代码的编写，<code>Python</code> 还提供了一系列的 与 <strong>算术运算符</strong> 对应的 <strong>赋值运算符</strong></li><li>注意：<strong>赋值运算符中间不能使用空格</strong></li></ul><table><thead><tr><th>运算符</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>=</td><td>简单的赋值运算符</td><td>c = a + b 将 a + b 的运算结果赋值为 c</td></tr><tr><td>+=</td><td>加法赋值运算符</td><td>c += a 等效于 c = c + a</td></tr><tr><td>-=</td><td>减法赋值运算符</td><td>c -= a 等效于 c = c - a</td></tr><tr><td>*=</td><td>乘法赋值运算符</td><td>c <em>= a 等效于 c = c </em> a</td></tr><tr><td>/=</td><td>除法赋值运算符</td><td>c /= a 等效于 c = c / a</td></tr><tr><td>//=</td><td>取整除赋值运算符</td><td>c //= a 等效于 c = c // a</td></tr><tr><td>%=</td><td>取 <strong>模</strong> (余数)赋值运算符</td><td>c %= a 等效于 c = c % a</td></tr><tr><td>**=</td><td>幂赋值运算符</td><td>c <strong>= a 等效于 c = c </strong> a</td></tr></tbody></table><h3 id="2-3-Python-中的计数方法"><a href="#2-3-Python-中的计数方法" class="headerlink" title="2.3 Python 中的计数方法"></a>2.3 Python 中的计数方法</h3><p>常见的计数方法有两种，可以分别称为：</p><ul><li><strong>自然计数法</strong>（从 <code>1</code> 开始）—— 更符合人类的习惯</li><li><strong>程序计数法</strong>（从 <code>0</code> 开始）—— 几乎所有的程序语言都选择从 0 开始计数</li></ul><p>因此，大家在编写程序时，应该尽量养成习惯：<strong>除非需求的特殊要求，否则 循环 的计数都从 0 开始</strong></p><h3 id="2-4-循环计算"><a href="#2-4-循环计算" class="headerlink" title="2.4 循环计算"></a>2.4 循环计算</h3><blockquote><p>在程序开发中，通常会遇到 <strong>利用循环</strong> <strong>重复计算</strong> 的需求</p></blockquote><p>遇到这种需求，可以：</p><ol><li>在 <code>while</code> 上方定义一个变量，用于 <strong>存放最终计算结果</strong></li><li>在循环体内部，每次循环都用 <strong>最新的计算结果</strong>，<strong>更新</strong> 之前定义的变量</li></ol><p><strong>需求</strong></p><ul><li>计算 0 ~ 100 之间所有数字的累计求和结果</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 计算 0 ~ 100 之间所有数字的累计求和结果</span></span><br><span class="line"><span class="comment"># 0. 定义最终结果的变量</span></span><br><span class="line">result = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 定义一个整数的变量记录循环的次数</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 开始循环</span></span><br><span class="line"><span class="keyword">while</span> i &lt;= <span class="number">100</span>:</span><br><span class="line">    print(i)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 每一次循环，都让 result 这个变量和 i 这个计数器相加</span></span><br><span class="line">    result += i</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 处理计数器</span></span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">"0~100之间的数字求和结果 = %d"</span> % result)</span><br></pre></td></tr></table></figure><h4 id="需求进阶"><a href="#需求进阶" class="headerlink" title="需求进阶"></a>需求进阶</h4><ul><li>计算 0 ~ 100 之间 所有 <strong>偶数</strong> 的累计求和结果</li></ul><p>开发步骤</p><ol><li>编写循环 <strong>确认</strong> <strong>要计算的数字</strong></li><li>添加 <strong>结果</strong> 变量，在循环内部 <strong>处理计算结果</strong></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 0. 最终结果</span></span><br><span class="line">result = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 计数器</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 开始循环</span></span><br><span class="line"><span class="keyword">while</span> i &lt;= <span class="number">100</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 判断偶数</span></span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        print(i)</span><br><span class="line">        result += i</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 处理计数器</span></span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">"0~100之间偶数求和结果 = %d"</span> % result)</span><br></pre></td></tr></table></figure><h2 id="03-break-和-continue"><a href="#03-break-和-continue" class="headerlink" title="03. break 和 continue"></a>03. break 和 continue</h2><blockquote><p><code>break</code> 和 <code>continue</code> 是专门在循环中使用的关键字</p></blockquote><ul><li><code>break</code> <strong>某一条件满足时</strong>，退出循环，不再执行后续重复的代码</li><li><code>continue</code> <strong>某一条件满足时</strong>，不执行后续重复的代码</li></ul><blockquote><p><code>break</code> 和 <code>continue</code> 只针对 <strong>当前所在循环</strong> 有效</p></blockquote><p><img src="002_循环流程图.png" alt="循环流程图"></p><h3 id="3-1-break"><a href="#3-1-break" class="headerlink" title="3.1 break"></a>3.1 break</h3><ul><li><strong>在循环过程中</strong>，如果 <strong>某一个条件满足后</strong>，<strong>不</strong> 再希望 <strong>循环继续执行</strong>，可以使用 <code>break</code> 退出循环</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">i = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> i &lt; <span class="number">10</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment"># break 某一条件满足时，退出循环，不再执行后续重复的代码</span></span><br><span class="line">    <span class="comment"># i == 3</span></span><br><span class="line">    <span class="keyword">if</span> i == <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    print(i)</span><br><span class="line"></span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">"over"</span>)</span><br></pre></td></tr></table></figure><blockquote><p><code>break</code> 只针对当前所在循环有效</p></blockquote><h3 id="3-2-continue"><a href="#3-2-continue" class="headerlink" title="3.2 continue"></a>3.2 continue</h3><ul><li><strong>在循环过程中</strong>，如果 <strong>某一个条件满足后</strong>，<strong>不</strong> 希望 <strong>执行循环代码，但是又不希望退出循环</strong>，可以使用 <code>continue</code></li><li>也就是：在整个循环中，<strong>只有某些条件</strong>，不需要执行循环代码，而其他条件都需要执行</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">i = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> i &lt; <span class="number">10</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 当 i == 7 时，不希望执行需要重复执行的代码</span></span><br><span class="line">    <span class="keyword">if</span> i == <span class="number">7</span>:</span><br><span class="line">        <span class="comment"># 在使用 continue 之前，同样应该修改计数器</span></span><br><span class="line">        <span class="comment"># 否则会出现死循环</span></span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 重复执行的代码</span></span><br><span class="line">    print(i)</span><br><span class="line"></span><br><span class="line">    i += <span class="number">1</span></span><br></pre></td></tr></table></figure><ul><li>需要注意：使用 <code>continue</code> 时，<strong>条件处理部分的代码，需要特别注意</strong>，不小心会出现 <strong>死循环</strong></li></ul><blockquote><p><code>continue</code> 只针对当前所在循环有效</p></blockquote><h2 id="04-while-循环嵌套"><a href="#04-while-循环嵌套" class="headerlink" title="04. while 循环嵌套"></a>04. <code>while</code> 循环嵌套</h2><h3 id="4-1-循环嵌套"><a href="#4-1-循环嵌套" class="headerlink" title="4.1 循环嵌套"></a>4.1 循环嵌套</h3><ul><li><code>while</code> 嵌套就是：<code>while</code> 里面还有 <code>while</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> 条件 <span class="number">1</span>:</span><br><span class="line">    条件满足时，做的事情<span class="number">1</span></span><br><span class="line">    条件满足时，做的事情<span class="number">2</span></span><br><span class="line">    条件满足时，做的事情<span class="number">3</span></span><br><span class="line">    ...(省略)...</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> 条件 <span class="number">2</span>:</span><br><span class="line">        条件满足时，做的事情<span class="number">1</span></span><br><span class="line">        条件满足时，做的事情<span class="number">2</span></span><br><span class="line">        条件满足时，做的事情<span class="number">3</span></span><br><span class="line">        ...(省略)...</span><br><span class="line">    </span><br><span class="line">        处理条件 <span class="number">2</span></span><br><span class="line">    </span><br><span class="line">    处理条件 <span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="4-2-循环嵌套演练-——-九九乘法表"><a href="#4-2-循环嵌套演练-——-九九乘法表" class="headerlink" title="4.2 循环嵌套演练 —— 九九乘法表"></a>4.2 循环嵌套演练 —— 九九乘法表</h3><h4 id="第-1-步：用嵌套打印小星星"><a href="#第-1-步：用嵌套打印小星星" class="headerlink" title="第 1 步：用嵌套打印小星星"></a>第 1 步：用嵌套打印小星星</h4><p><strong>需求</strong></p><ul><li>在控制台连续输出五行 <code>*</code>，每一行星号的数量依次递增</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*</span><br><span class="line">**</span><br><span class="line">***</span><br><span class="line">****</span><br><span class="line">*****</span><br></pre></td></tr></table></figure><ul><li>使用字符串 * 打印</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 定义一个计数器变量，从数字1开始，循环会比较方便</span></span><br><span class="line">row = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> row &lt;= <span class="number">5</span>:</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"*"</span> * row)</span><br><span class="line"></span><br><span class="line">    row += <span class="number">1</span></span><br></pre></td></tr></table></figure><h4 id="第-2-步：使用循环嵌套打印小星星"><a href="#第-2-步：使用循环嵌套打印小星星" class="headerlink" title="第 2 步：使用循环嵌套打印小星星"></a>第 2 步：使用循环嵌套打印小星星</h4><p><strong>知识点</strong> 对 <code>print</code> 函数的使用做一个增强</p><ul><li>在默认情况下，<code>print</code> 函数输出内容之后，会自动在内容末尾增加换行</li><li>如果不希望末尾增加换行，可以在 <code>print</code> 函数输出内容的后面增加 <code>, end=&quot;&quot;</code></li><li>其中 <code>&quot;&quot;</code> 中间可以指定 <code>print</code> 函数输出内容之后，继续希望显示的内容</li><li>语法格式如下：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 向控制台输出内容结束之后，不会换行</span></span><br><span class="line">print(<span class="string">"*"</span>, end=<span class="string">""</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 单纯的换行</span></span><br><span class="line">print(<span class="string">""</span>)</span><br></pre></td></tr></table></figure><blockquote><p><code>end=&quot;&quot;</code> 表示向控制台输出内容结束之后，不会换行</p></blockquote><p><strong>假设</strong> <code>Python</code> <strong>没有提供</strong> 字符串的 <code>*</code> 操作 <strong>拼接字符串</strong></p><p><strong>需求</strong></p><ul><li>在控制台连续输出五行 <code>*</code>，每一行星号的数量依次递增</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*</span><br><span class="line">**</span><br><span class="line">***</span><br><span class="line">****</span><br><span class="line">*****</span><br></pre></td></tr></table></figure><p><strong>开发步骤</strong></p><ul><li>1&gt; 完成 5 行内容的简单输出</li><li>2&gt; 分析每行内部的 <code>*</code> 应该如何处理？<ul><li>每行显示的星星和当前所在的行数是一致的</li><li>嵌套一个小的循环，专门处理每一行中 <code>列</code> 的星星显示  </li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">row = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> row &lt;= <span class="number">5</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 假设 python 没有提供字符串 * 操作</span></span><br><span class="line">    <span class="comment"># 在循环内部，再增加一个循环，实现每一行的 星星 打印</span></span><br><span class="line">    col = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> col &lt;= row:</span><br><span class="line">        print(<span class="string">"*"</span>, end=<span class="string">""</span>)</span><br><span class="line"></span><br><span class="line">        col += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 每一行星号输出完成后，再增加一个换行</span></span><br><span class="line">    print(<span class="string">""</span>)</span><br><span class="line"></span><br><span class="line">    row += <span class="number">1</span></span><br></pre></td></tr></table></figure><h4 id="第-3-步：-九九乘法表"><a href="#第-3-步：-九九乘法表" class="headerlink" title="第 3 步： 九九乘法表"></a>第 3 步： 九九乘法表</h4><p><strong>需求</strong> 输出 九九乘法表，格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1 * 1 = 1</span><br><span class="line">1 * 2 = 22 * 2 = 4</span><br><span class="line">1 * 3 = 32 * 3 = 63 * 3 = 9</span><br><span class="line">1 * 4 = 42 * 4 = 83 * 4 = 124 * 4 = 16</span><br><span class="line">1 * 5 = 52 * 5 = 103 * 5 = 154 * 5 = 205 * 5 = 25</span><br><span class="line">1 * 6 = 62 * 6 = 123 * 6 = 184 * 6 = 245 * 6 = 306 * 6 = 36</span><br><span class="line">1 * 7 = 72 * 7 = 143 * 7 = 214 * 7 = 285 * 7 = 356 * 7 = 427 * 7 = 49</span><br><span class="line">1 * 8 = 82 * 8 = 163 * 8 = 244 * 8 = 325 * 8 = 406 * 8 = 487 * 8 = 568 * 8 = 64</span><br><span class="line">1 * 9 = 92 * 9 = 183 * 9 = 274 * 9 = 365 * 9 = 456 * 9 = 547 * 9 = 638 * 9 = 729 * 9 = 81</span><br></pre></td></tr></table></figure><p><strong>开发步骤</strong></p><ul><li><ol><li>打印 9 行小星星</li></ol></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">*</span><br><span class="line">**</span><br><span class="line">***</span><br><span class="line">****</span><br><span class="line">*****</span><br><span class="line">******</span><br><span class="line">*******</span><br><span class="line">********</span><br><span class="line">*********</span><br></pre></td></tr></table></figure><ul><li><ol start="2"><li>将每一个 <code>*</code> 替换成对应的行与列相乘</li></ol></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义起始行</span></span><br><span class="line">row = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 最大打印 9 行</span></span><br><span class="line"><span class="keyword">while</span> row &lt;= <span class="number">9</span>:</span><br><span class="line">    <span class="comment"># 定义起始列</span></span><br><span class="line">    col = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 最大打印 row 列</span></span><br><span class="line">    <span class="keyword">while</span> col &lt;= row:</span><br><span class="line"></span><br><span class="line">        <span class="comment"># end = ""，表示输出结束后，不换行</span></span><br><span class="line">        <span class="comment"># "\t" 可以在控制台输出一个制表符，协助在输出文本时对齐</span></span><br><span class="line">        print(<span class="string">"%d * %d = %d"</span> % (col, row, row * col), end=<span class="string">"\t"</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 列数 + 1</span></span><br><span class="line">        col += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 一行打印完成的换行</span></span><br><span class="line">    print(<span class="string">""</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 行数 + 1</span></span><br><span class="line">    row += <span class="number">1</span></span><br></pre></td></tr></table></figure><p><strong>字符串中的转义字符</strong></p><ul><li><code>\t</code> 在控制台输出一个 <strong>制表符</strong>，协助在输出文本时 <strong>垂直方向</strong> 保持对齐</li><li><code>\n</code> 在控制台输出一个 <strong>换行符</strong></li></ul><blockquote><p><strong>制表符</strong> 的功能是在不使用表格的情况下在 <strong>垂直方向</strong> 按列对齐文本</p></blockquote><table><thead><tr><th>转义字符</th><th>描述</th></tr></thead><tbody><tr><td>\\</td><td>反斜杠符号</td></tr><tr><td>\‘</td><td>单引号</td></tr><tr><td>\“</td><td>双引号</td></tr><tr><td>\n</td><td>换行</td></tr><tr><td>\t</td><td>横向制表符</td></tr><tr><td>\r</td><td>回车</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> python学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 循环 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>运算符</title>
      <link href="/2019/11/02/%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
      <url>/2019/11/02/%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ul><li>算数运算符</li><li>比较（关系）运算符</li><li>逻辑运算符</li><li>赋值运算符</li><li>运算符的优先级</li></ul><p>数学符号表链接：<a href="https://zh.wikipedia.org/wiki/数学符号表" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/数学符号表</a></p><h2 id="01-算数运算符"><a href="#01-算数运算符" class="headerlink" title="01. 算数运算符"></a>01. 算数运算符</h2><ul><li>是完成基本的算术运算使用的符号，用来处理四则运算</li></ul><table><thead><tr><th style="text-align:center">运算符</th><th style="text-align:center">描述</th><th>实例</th></tr></thead><tbody><tr><td style="text-align:center">+</td><td style="text-align:center">加</td><td>10 + 20 = 30</td></tr><tr><td style="text-align:center">-</td><td style="text-align:center">减</td><td>10 - 20 = -10</td></tr><tr><td style="text-align:center">*</td><td style="text-align:center">乘</td><td>10 * 20 = 200</td></tr><tr><td style="text-align:center">/</td><td style="text-align:center">除</td><td>10 / 20 = 0.5</td></tr><tr><td style="text-align:center">//</td><td style="text-align:center">取整除</td><td>返回除法的整数部分（商） 9 // 2 输出结果 4</td></tr><tr><td style="text-align:center">%</td><td style="text-align:center">取余数</td><td>返回除法的余数 9 % 2 = 1</td></tr><tr><td style="text-align:center">**</td><td style="text-align:center">幂</td><td>又称次方、乘方，2 ** 3 = 8</td></tr></tbody></table><ul><li>在 Python 中 <code>*</code> 运算符还可以用于字符串，计算结果就是字符串重复指定次数的结果</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">1</span>]: <span class="string">"-"</span> * <span class="number">50</span></span><br><span class="line">Out[<span class="number">1</span>]: <span class="string">'----------------------------------------'</span></span><br></pre></td></tr></table></figure><h2 id="02-比较（关系）运算符"><a href="#02-比较（关系）运算符" class="headerlink" title="02. 比较（关系）运算符"></a>02. 比较（关系）运算符</h2><table><thead><tr><th>运算符</th><th>描述</th></tr></thead><tbody><tr><td>==</td><td>检查两个操作数的值是否 <strong>相等</strong>，如果是，则条件成立，返回 True</td></tr><tr><td>!=</td><td>检查两个操作数的值是否 <strong>不相等</strong>，如果是，则条件成立，返回 True</td></tr><tr><td>&gt;</td><td>检查左操作数的值是否 <strong>大于</strong> 右操作数的值，如果是，则条件成立，返回 True</td></tr><tr><td>&lt;</td><td>检查左操作数的值是否 <strong>小于</strong> 右操作数的值，如果是，则条件成立，返回 True</td></tr><tr><td>&gt;=</td><td>检查左操作数的值是否 <strong>大于或等于</strong> 右操作数的值，如果是，则条件成立，返回 True</td></tr><tr><td>&lt;=</td><td>检查左操作数的值是否 <strong>小于或等于</strong> 右操作数的值，如果是，则条件成立，返回 True</td></tr></tbody></table><blockquote><p>Python 2.x 中判断 <strong>不等于</strong> 还可以使用 <code>&lt;&gt;</code> 运算符</p><p><code>!=</code> 在 Python 2.x 中同样可以用来判断 <strong>不等于</strong></p></blockquote><h2 id="03-逻辑运算符"><a href="#03-逻辑运算符" class="headerlink" title="03. 逻辑运算符"></a>03. 逻辑运算符</h2><table><thead><tr><th>运算符</th><th>逻辑表达式</th><th>描述</th></tr></thead><tbody><tr><td>and</td><td>x and y</td><td>只有 x 和 y 的值都为 True，才会返回 True<br>否则只要 x 或者 y 有一个值为 False，就返回 False</td></tr><tr><td>or</td><td>x or y</td><td>只要 x 或者 y 有一个值为 True，就返回 True<br>只有 x 和 y 的值都为 False，才会返回 False</td></tr><tr><td>not</td><td>not x</td><td>如果 x 为 True，返回 False<br>如果 x 为 False，返回 True</td></tr></tbody></table><h2 id="04-赋值运算符"><a href="#04-赋值运算符" class="headerlink" title="04. 赋值运算符"></a>04. 赋值运算符</h2><ul><li>在 Python 中，使用 <code>=</code> 可以给变量赋值</li><li>在算术运算时，为了简化代码的编写，<code>Python</code> 还提供了一系列的 与 <strong>算术运算符</strong> 对应的 <strong>赋值运算符</strong></li><li>注意：<strong>赋值运算符中间不能使用空格</strong></li></ul><table><thead><tr><th>运算符</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>=</td><td>简单的赋值运算符</td><td>c = a + b 将 a + b 的运算结果赋值为 c</td></tr><tr><td>+=</td><td>加法赋值运算符</td><td>c += a 等效于 c = c + a</td></tr><tr><td>-=</td><td>减法赋值运算符</td><td>c -= a 等效于 c = c - a</td></tr><tr><td>*=</td><td>乘法赋值运算符</td><td>c <em>= a 等效于 c = c </em> a</td></tr><tr><td>/=</td><td>除法赋值运算符</td><td>c /= a 等效于 c = c / a</td></tr><tr><td>//=</td><td>取整除赋值运算符</td><td>c //= a 等效于 c = c // a</td></tr><tr><td>%=</td><td>取 <strong>模</strong> (余数)赋值运算符</td><td>c %= a 等效于 c = c % a</td></tr><tr><td>**=</td><td>幂赋值运算符</td><td>c <strong>= a 等效于 c = c </strong> a</td></tr></tbody></table><h2 id="05-运算符的优先级"><a href="#05-运算符的优先级" class="headerlink" title="05. 运算符的优先级"></a>05. 运算符的优先级</h2><ul><li>以下表格的算数优先级由高到最低顺序排列</li></ul><table><thead><tr><th>运算符</th><th>描述</th></tr></thead><tbody><tr><td>**</td><td>幂 (最高优先级)</td></tr><tr><td>* / % //</td><td>乘、除、取余数、取整除</td></tr><tr><td>+ -</td><td>加法、减法</td></tr><tr><td>&lt;= &lt; &gt; &gt;=</td><td>比较运算符</td></tr><tr><td>== !=</td><td>等于运算符</td></tr><tr><td>= %= /= //= -= += *= **=</td><td>赋值运算符</td></tr><tr><td>not or and</td><td>逻辑运算符</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> python学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 运算符 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>if判断语句</title>
      <link href="/2019/11/02/if%E5%88%A4%E6%96%AD%E8%AF%AD%E5%8F%A5/"/>
      <url>/2019/11/02/if%E5%88%A4%E6%96%AD%E8%AF%AD%E5%8F%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="判断（if）语句"><a href="#判断（if）语句" class="headerlink" title="判断（if）语句"></a>判断（if）语句</h1><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ul><li>开发中的应用场景</li><li>if 语句体验</li><li>if 语句进阶</li><li>综合应用</li></ul><h2 id="01-开发中的应用场景"><a href="#01-开发中的应用场景" class="headerlink" title="01. 开发中的应用场景"></a>01. 开发中的应用场景</h2><p>生活中的判断几乎是无所不在的，我们每天都在做各种各样的选择，如果这样？如果那样？……</p><p><img src="001_未成年人禁止入内.jpg" alt="未成年人禁止入内"></p><p><img src="002_火车站安检.png" alt="火车站安检"></p><h3 id="程序中的判断"><a href="#程序中的判断" class="headerlink" title="程序中的判断"></a>程序中的判断</h3><p><img src="003_判断示意图.png" alt="判断示意图"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 今天发工资:</span><br><span class="line">    先还信用卡的钱</span><br><span class="line">    <span class="keyword">if</span> 有剩余:</span><br><span class="line">        又可以happy了，O(∩_∩)O哈哈~</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        噢，no。。。还的等<span class="number">30</span>天</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    盼着发工资</span><br></pre></td></tr></table></figure><h3 id="判断的定义"><a href="#判断的定义" class="headerlink" title="判断的定义"></a>判断的定义</h3><ul><li>如果 <strong>条件满足</strong>，才能做某件事情，</li><li>如果 <strong>条件不满足</strong>，就做另外一件事情，或者什么也不做</li></ul><blockquote><p>正是因为有了判断，才使得程序世界丰富多彩，充满变化！</p><p><strong>判断语句</strong> 又被称为 “分支语句”，正是因为有了判断，才让程序有了很多的分支</p></blockquote><h2 id="02-if-语句体验"><a href="#02-if-语句体验" class="headerlink" title="02. if 语句体验"></a>02. if 语句体验</h2><h3 id="2-1-if-判断语句基本语法"><a href="#2-1-if-判断语句基本语法" class="headerlink" title="2.1 if 判断语句基本语法"></a>2.1 if 判断语句基本语法</h3><p>在 <code>Python</code> 中，<strong>if 语句</strong> 就是用来进行判断的，格式如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 要判断的条件:</span><br><span class="line">    条件成立时，要做的事情</span><br><span class="line">    ……</span><br></pre></td></tr></table></figure><blockquote><p>注意：代码的缩进为一个 <code>tab</code> 键，或者 <strong>4</strong> 个空格 —— <strong>建议使用空格</strong></p><ul><li>在 Python 开发中，Tab 和空格不要混用！</li></ul></blockquote><p><strong>我们可以把整个 if 语句看成一个完整的代码块</strong></p><p><img src="004_if语句是一个完整的代码块1.png" alt="if语句是一个完整的代码块1"></p><h3 id="2-2-判断语句演练-——-判断年龄"><a href="#2-2-判断语句演练-——-判断年龄" class="headerlink" title="2.2 判断语句演练 —— 判断年龄"></a>2.2 判断语句演练 —— 判断年龄</h3><p><strong>需求</strong></p><ol><li>定义一个整数变量记录年龄</li><li>判断是否满 18 岁 （<strong>&gt;=</strong>）</li><li>如果满 18 岁，允许进网吧嗨皮</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 定义年龄变量</span></span><br><span class="line">age = <span class="number">18</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 判断是否满 18 岁</span></span><br><span class="line"><span class="comment"># if 语句以及缩进部分的代码是一个完整的代码块</span></span><br><span class="line"><span class="keyword">if</span> age &gt;= <span class="number">18</span>:</span><br><span class="line">    print(<span class="string">"可以进网吧嗨皮……"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 思考！- 无论条件是否满足都会执行</span></span><br><span class="line">print(<span class="string">"这句代码什么时候执行?"</span>)</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：</p><ul><li><code>if</code> 语句以及缩进部分是一个 <strong>完整的代码块</strong></li></ul><h3 id="2-3-else-处理条件不满足的情况"><a href="#2-3-else-处理条件不满足的情况" class="headerlink" title="2.3 else 处理条件不满足的情况"></a>2.3 else 处理条件不满足的情况</h3><p><strong>思考</strong></p><p>在使用 <code>if</code> 判断时，只能做到满足条件时要做的事情。那如果需要在 <strong>不满足条件的时候</strong>，做某些事情，该如何做呢？</p><p><strong>答案</strong></p><p><code>else</code>，格式如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 要判断的条件:</span><br><span class="line">    条件成立时，要做的事情</span><br><span class="line">    ……</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    条件不成立时，要做的事情</span><br><span class="line">    ……</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：</p><ul><li><code>if</code> 和 <code>else</code> 语句以及各自的缩进部分共同是一个 <strong>完整的代码块</strong></li></ul><h3 id="2-4-判断语句演练-——-判断年龄改进"><a href="#2-4-判断语句演练-——-判断年龄改进" class="headerlink" title="2.4 判断语句演练 —— 判断年龄改进"></a>2.4 判断语句演练 —— 判断年龄改进</h3><p><strong>需求</strong></p><ol><li>输入用户年龄</li><li>判断是否满 18 岁 （<strong>&gt;=</strong>）</li><li>如果满 18 岁，允许进网吧嗨皮</li><li>如果未满 18 岁，提示回家写作业</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 输入用户年龄</span></span><br><span class="line">age = int(input(<span class="string">"今年多大了？"</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 判断是否满 18 岁</span></span><br><span class="line"><span class="comment"># if 语句以及缩进部分的代码是一个完整的语法块</span></span><br><span class="line"><span class="keyword">if</span> age &gt;= <span class="number">18</span>:</span><br><span class="line">    print(<span class="string">"可以进网吧嗨皮……"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"你还没长大，应该回家写作业！"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 思考！- 无论条件是否满足都会执行</span></span><br><span class="line">print(<span class="string">"这句代码什么时候执行?"</span>)</span><br></pre></td></tr></table></figure><p><img src="005_ifelse语句是一个完整的代码块1.png" alt="ifelse语句是一个完整的代码块1"></p><h2 id="03-逻辑运算"><a href="#03-逻辑运算" class="headerlink" title="03. 逻辑运算"></a>03. 逻辑运算</h2><ul><li>在程序开发中，通常 <strong>在判断条件时</strong>，会需要同时判断多个条件</li><li>只有多个条件都满足，才能够执行后续代码，这个时候需要使用到 <strong>逻辑运算符</strong></li><li><strong>逻辑运算符</strong> 可以把 <strong>多个条件</strong> 按照 <strong>逻辑</strong> 进行 <strong>连接</strong>，变成 <strong>更复杂的条件</strong></li><li>Python 中的 <strong>逻辑运算符</strong> 包括：<strong>与 and</strong>／<strong>或 or</strong>／<strong>非 not</strong> 三种</li></ul><h3 id="3-1-and"><a href="#3-1-and" class="headerlink" title="3.1 and"></a>3.1 <code>and</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">条件1 and 条件2</span><br></pre></td></tr></table></figure><ul><li><strong>与</strong>／<strong>并且</strong></li><li>两个条件同时满足，返回 <code>True</code></li><li>只要有一个不满足，就返回 <code>False</code></li></ul><table><thead><tr><th style="text-align:center">条件 1</th><th style="text-align:center">条件 2</th><th style="text-align:center">结果</th></tr></thead><tbody><tr><td style="text-align:center">成立</td><td style="text-align:center">成立</td><td style="text-align:center">成立</td></tr><tr><td style="text-align:center">成立</td><td style="text-align:center">不成立</td><td style="text-align:center">不成立</td></tr><tr><td style="text-align:center">不成立</td><td style="text-align:center">成立</td><td style="text-align:center">不成立</td></tr><tr><td style="text-align:center">不成立</td><td style="text-align:center">不成立</td><td style="text-align:center">不成立</td></tr></tbody></table><h3 id="3-2-or"><a href="#3-2-or" class="headerlink" title="3.2 or"></a>3.2 <code>or</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">条件1 or 条件2</span><br></pre></td></tr></table></figure><ul><li><strong>或</strong>／<strong>或者</strong></li><li>两个条件只要有一个满足，返回 <code>True</code></li><li>两个条件都不满足，返回 <code>False</code></li></ul><table><thead><tr><th style="text-align:center">条件 1</th><th style="text-align:center">条件 2</th><th style="text-align:center">结果</th></tr></thead><tbody><tr><td style="text-align:center">成立</td><td style="text-align:center">成立</td><td style="text-align:center">成立</td></tr><tr><td style="text-align:center">成立</td><td style="text-align:center">不成立</td><td style="text-align:center">成立</td></tr><tr><td style="text-align:center">不成立</td><td style="text-align:center">成立</td><td style="text-align:center">成立</td></tr><tr><td style="text-align:center">不成立</td><td style="text-align:center">不成立</td><td style="text-align:center">不成立</td></tr></tbody></table><h3 id="3-3-not"><a href="#3-3-not" class="headerlink" title="3.3 not"></a>3.3 <code>not</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">not 条件</span><br></pre></td></tr></table></figure><ul><li><strong>非</strong>／<strong>不是</strong></li></ul><table><thead><tr><th style="text-align:center">条件</th><th style="text-align:center">结果</th></tr></thead><tbody><tr><td style="text-align:center">成立</td><td style="text-align:center">不成立</td></tr><tr><td style="text-align:center">不成立</td><td style="text-align:center">成立</td></tr></tbody></table><h4 id="逻辑运算演练"><a href="#逻辑运算演练" class="headerlink" title="逻辑运算演练"></a>逻辑运算演练</h4><ol><li>练习1: 定义一个整数变量 <code>age</code>，编写代码判断年龄是否正确<ul><li>要求人的年龄在 0-120 之间</li></ul></li><li>练习2: 定义两个整数变量 <code>python_score</code>、<code>c_score</code>，编写代码判断成绩<ul><li>要求只要有一门成绩 &gt; 60 分就算合格</li></ul></li><li>练习3: 定义一个布尔型变量 <code>is_employee</code>，编写代码判断是否是本公司员工<ul><li>如果不是提示不允许入内</li></ul></li></ol><p>答案 1：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 练习1: 定义一个整数变量 age，编写代码判断年龄是否正确</span></span><br><span class="line">age = <span class="number">100</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 要求人的年龄在 0-120 之间</span></span><br><span class="line"><span class="keyword">if</span> age &gt;= <span class="number">0</span> <span class="keyword">and</span> age &lt;= <span class="number">120</span>:</span><br><span class="line">    print(<span class="string">"年龄正确"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"年龄不正确"</span>)</span><br></pre></td></tr></table></figure><p>答案 2：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 练习2: 定义两个整数变量 python_score、c_score，编写代码判断成绩</span></span><br><span class="line">python_score = <span class="number">50</span></span><br><span class="line">c_score = <span class="number">50</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 要求只要有一门成绩 &gt; 60 分就算合格</span></span><br><span class="line"><span class="keyword">if</span> python_score &gt; <span class="number">60</span> <span class="keyword">or</span> c_score &gt; <span class="number">60</span>:</span><br><span class="line">    print(<span class="string">"考试通过"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"再接再厉！"</span>)</span><br></pre></td></tr></table></figure><p>答案 3：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 练习3: 定义一个布尔型变量 `is_employee`，编写代码判断是否是本公司员工</span></span><br><span class="line">is_employee = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果不是提示不允许入内</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> is_employee:</span><br><span class="line">    print(<span class="string">"非公勿内"</span>)</span><br></pre></td></tr></table></figure><h2 id="04-if-语句进阶"><a href="#04-if-语句进阶" class="headerlink" title="04. if 语句进阶"></a>04. if 语句进阶</h2><h3 id="4-1-elif"><a href="#4-1-elif" class="headerlink" title="4.1 elif"></a>4.1 <code>elif</code></h3><ul><li>在开发中，使用 <code>if</code> 可以 <strong>判断条件</strong></li><li>使用 <code>else</code> 可以处理 <strong>条件不成立</strong> 的情况</li><li>但是，如果希望 <strong>再增加一些条件</strong>，<strong>条件不同，需要执行的代码也不同</strong> 时，就可以使用 <code>elif</code> </li><li>语法格式如下：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 条件<span class="number">1</span>:</span><br><span class="line">    条件<span class="number">1</span>满足执行的代码</span><br><span class="line">    ……</span><br><span class="line"><span class="keyword">elif</span> 条件<span class="number">2</span>:</span><br><span class="line">    条件<span class="number">2</span>满足时，执行的代码</span><br><span class="line">    ……</span><br><span class="line"><span class="keyword">elif</span> 条件<span class="number">3</span>:</span><br><span class="line">    条件<span class="number">3</span>满足时，执行的代码</span><br><span class="line">    ……</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    以上条件都不满足时，执行的代码</span><br><span class="line">    ……</span><br></pre></td></tr></table></figure><ul><li>对比逻辑运算符的代码</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 条件<span class="number">1</span> <span class="keyword">and</span> 条件<span class="number">2</span>:</span><br><span class="line">    条件<span class="number">1</span>满足 并且 条件<span class="number">2</span>满足 执行的代码</span><br><span class="line">    ……</span><br></pre></td></tr></table></figure><p><strong>注意</strong></p><ol><li><code>elif</code> 和 <code>else</code> 都必须和 <code>if</code> 联合使用，而不能单独使用</li><li>可以将 <code>if</code>、<code>elif</code> 和 <code>else</code> 以及各自缩进的代码，看成一个 <strong>完整的代码块</strong></li></ol><h4 id="elif-演练-——-女友的节日"><a href="#elif-演练-——-女友的节日" class="headerlink" title="elif 演练 —— 女友的节日"></a>elif 演练 —— 女友的节日</h4><p><strong>需求</strong></p><ol><li>定义 <code>holiday_name</code> 字符串变量记录节日名称</li><li>如果是 <strong>情人节</strong> 应该 <strong>买玫瑰</strong>／<strong>看电影</strong></li><li>如果是 <strong>平安夜</strong> 应该 <strong>买苹果</strong>／<strong>吃大餐</strong></li><li>如果是 <strong>生日</strong> 应该 <strong>买蛋糕</strong></li><li>其他的日子每天都是节日啊……</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">holiday_name = &quot;平安夜&quot;</span><br><span class="line"></span><br><span class="line">if holiday_name == &quot;情人节&quot;:</span><br><span class="line">    print(&quot;买玫瑰&quot;)</span><br><span class="line">    print(&quot;看电影&quot;)</span><br><span class="line">elif holiday_name == &quot;平安夜&quot;:</span><br><span class="line">    print(&quot;买苹果&quot;)</span><br><span class="line">    print(&quot;吃大餐&quot;)</span><br><span class="line">elif holiday_name == &quot;生日&quot;:</span><br><span class="line">    print(&quot;买蛋糕&quot;)</span><br><span class="line">else:</span><br><span class="line">    print(&quot;每天都是节日啊……&quot;)</span><br></pre></td></tr></table></figure><h3 id="4-2-if-的嵌套"><a href="#4-2-if-的嵌套" class="headerlink" title="4.2 if 的嵌套"></a>4.2 <code>if</code> 的嵌套</h3><p><img src="002_火车站安检.png" alt="火车站安检"></p><blockquote><p><strong>elif</strong> 的应用场景是：<strong>同时</strong> 判断 <strong>多个条件</strong>，所有的条件是 <strong>平级</strong> 的</p></blockquote><ul><li>在开发中，使用 <code>if</code> 进行条件判断，如果希望 <strong>在条件成立的执行语句中</strong> 再 <strong>增加条件判断</strong>，就可以使用 <strong>if 的嵌套</strong></li><li><strong>if 的嵌套</strong> 的应用场景就是：<strong>在之前条件满足的前提下，再增加额外的判断</strong></li><li><strong>if 的嵌套</strong> 的语法格式，<strong>除了缩进之外</strong> 和之前的没有区别</li><li>语法格式如下：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> 条件 <span class="number">1</span>:</span><br><span class="line">    条件 <span class="number">1</span> 满足执行的代码</span><br><span class="line">    ……</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> 条件 <span class="number">1</span> 基础上的条件 <span class="number">2</span>:</span><br><span class="line">        条件 <span class="number">2</span> 满足时，执行的代码</span><br><span class="line">        ……    </span><br><span class="line">        </span><br><span class="line">    <span class="comment"># 条件 2 不满足的处理</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        条件 <span class="number">2</span> 不满足时，执行的代码</span><br><span class="line">        </span><br><span class="line"><span class="comment"># 条件 1 不满足的处理</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    条件<span class="number">1</span> 不满足时，执行的代码</span><br><span class="line">    ……</span><br></pre></td></tr></table></figure><h4 id="if-的嵌套-演练-——-火车站安检"><a href="#if-的嵌套-演练-——-火车站安检" class="headerlink" title="if 的嵌套 演练 —— 火车站安检"></a>if 的嵌套 演练 —— 火车站安检</h4><p><strong>需求</strong></p><ol><li>定义布尔型变量 <code>has_ticket</code> 表示是否有车票</li><li>定义整型变量 <code>knife_length</code> 表示刀的长度，单位：厘米</li><li>首先检查是否有车票，如果有，才允许进行 <strong>安检</strong></li><li>安检时，需要检查刀的长度，判断是否超过 20 厘米<ul><li>如果超过 20 厘米，提示刀的长度，不允许上车</li><li>如果不超过 20 厘米，安检通过</li></ul></li><li>如果没有车票，不允许进门</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义布尔型变量 has_ticket 表示是否有车票</span></span><br><span class="line">has_ticket = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义整数型变量 knife_length 表示刀的长度，单位：厘米</span></span><br><span class="line">knife_length = <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 首先检查是否有车票，如果有，才允许进行 安检</span></span><br><span class="line"><span class="keyword">if</span> has_ticket:</span><br><span class="line">    print(<span class="string">"有车票，可以开始安检..."</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 安检时，需要检查刀的长度，判断是否超过 20 厘米</span></span><br><span class="line">    <span class="comment"># 如果超过 20 厘米，提示刀的长度，不允许上车</span></span><br><span class="line">    <span class="keyword">if</span> knife_length &gt;= <span class="number">20</span>:</span><br><span class="line">        print(<span class="string">"不允许携带 %d 厘米长的刀上车"</span> % knife_length)</span><br><span class="line">    <span class="comment"># 如果不超过 20 厘米，安检通过</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"安检通过，祝您旅途愉快……"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果没有车票，不允许进门</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"大哥，您要先买票啊"</span>)</span><br></pre></td></tr></table></figure><h2 id="05-综合应用-——-石头剪刀布"><a href="#05-综合应用-——-石头剪刀布" class="headerlink" title="05. 综合应用 —— 石头剪刀布"></a>05. 综合应用 —— 石头剪刀布</h2><p><strong>目标</strong></p><ol><li>强化 <strong>多个条件</strong> 的 <strong>逻辑运算</strong></li><li>体会 <code>import</code> 导入模块（“工具包”）的使用</li></ol><p><strong>需求</strong></p><ol><li>从控制台输入要出的拳 —— 石头（1）／剪刀（2）／布（3）</li><li>电脑 <strong>随机</strong> 出拳 —— 先假定电脑只会出石头，完成整体代码功能</li><li>比较胜负</li></ol><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:center">规则</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">石头 胜 剪刀</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">剪刀 胜 布</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">布 胜 石头</td></tr></tbody></table><h3 id="5-1-基础代码实现"><a href="#5-1-基础代码实现" class="headerlink" title="5.1 基础代码实现"></a>5.1 基础代码实现</h3><ul><li>先 <strong>假定电脑就只会出石头</strong>，完成整体代码功能</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从控制台输入要出的拳 —— 石头（1）／剪刀（2）／布（3）</span></span><br><span class="line">player = int(input(<span class="string">"请出拳 石头（1）／剪刀（2）／布（3）："</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 电脑 随机 出拳 - 假定电脑永远出石头</span></span><br><span class="line">computer = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 比较胜负</span></span><br><span class="line"><span class="comment"># 如果条件判断的内容太长，可以在最外侧的条件增加一对大括号</span></span><br><span class="line"><span class="comment"># 再在每一个条件之间，使用回车，PyCharm 可以自动增加 8 个空格</span></span><br><span class="line"><span class="keyword">if</span> ((player == <span class="number">1</span> <span class="keyword">and</span> computer == <span class="number">2</span>) <span class="keyword">or</span></span><br><span class="line">        (player == <span class="number">2</span> <span class="keyword">and</span> computer == <span class="number">3</span>) <span class="keyword">or</span></span><br><span class="line">        (player == <span class="number">3</span> <span class="keyword">and</span> computer == <span class="number">1</span>)):</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"噢耶！！！电脑弱爆了！！！"</span>)</span><br><span class="line"><span class="keyword">elif</span> player == computer:</span><br><span class="line">    print(<span class="string">"心有灵犀，再来一盘！"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"不行，我要和你决战到天亮！"</span>)</span><br></pre></td></tr></table></figure><h3 id="5-2-随机数的处理"><a href="#5-2-随机数的处理" class="headerlink" title="5.2 随机数的处理"></a>5.2 随机数的处理</h3><ul><li>在 <code>Python</code> 中，要使用随机数，首先需要导入 <strong>随机数</strong> 的 <strong>模块</strong> —— “工具包”</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br></pre></td></tr></table></figure><ul><li>导入模块后，可以直接在 <strong>模块名称</strong> 后面敲一个 <code>.</code> 然后按 <code>Tab</code> 键，会提示该模块中包含的所有函数</li><li><code>random.randint(a, b)</code> ，返回 <code>[a, b]</code> 之间的整数，包含 <code>a</code> 和 <code>b</code></li><li>例如：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">random.randint(<span class="number">12</span>, <span class="number">20</span>)  <span class="comment"># 生成的随机数n: 12 &lt;= n &lt;= 20   </span></span><br><span class="line">random.randint(<span class="number">20</span>, <span class="number">20</span>)  <span class="comment"># 结果永远是 20   </span></span><br><span class="line">random.randint(<span class="number">20</span>, <span class="number">10</span>)  <span class="comment"># 该语句是错误的，下限必须小于上限</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> if </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>变量的命名</title>
      <link href="/2019/11/02/%E5%8F%98%E9%87%8F%E7%9A%84%E5%91%BD%E5%90%8D/"/>
      <url>/2019/11/02/%E5%8F%98%E9%87%8F%E7%9A%84%E5%91%BD%E5%90%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="变量的命名"><a href="#变量的命名" class="headerlink" title="变量的命名"></a>变量的命名</h1><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ul><li>标识符和关键字</li><li>变量的命名规则</li></ul><h2 id="0-1-标识符和关键字"><a href="#0-1-标识符和关键字" class="headerlink" title="0.1 标识符和关键字"></a>0.1 标识符和关键字</h2><h3 id="1-1-标识符"><a href="#1-1-标识符" class="headerlink" title="1.1 标识符"></a>1.1 标识符</h3><blockquote><p>标示符就是程序员定义的 <strong>变量名</strong>、<strong>函数名</strong></p><p><strong>名字</strong> 需要有 <strong>见名知义</strong> 的效果，见下图：</p></blockquote><p><img src="001_中国山东找蓝翔.jpg" alt="中国山东找蓝翔"></p><ul><li>标示符可以由 <strong>字母</strong>、<strong>下划线</strong> 和 <strong>数字</strong> 组成</li><li><strong>不能以数字开头</strong></li><li><strong>不能与关键字重名</strong></li></ul><p>思考：下面的标示符哪些是正确的，哪些不正确为什么？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">fromNo12</span><br><span class="line">from#12</span><br><span class="line">my_Boolean</span><br><span class="line">my-Boolean</span><br><span class="line">Obj2</span><br><span class="line">2ndObj</span><br><span class="line">myInt</span><br><span class="line">My_tExt</span><br><span class="line">_test</span><br><span class="line">test!32</span><br><span class="line">haha(da)tt</span><br><span class="line">jack_rose</span><br><span class="line">jack&amp;rose</span><br><span class="line">GUI</span><br><span class="line">G.U.I</span><br></pre></td></tr></table></figure><h3 id="1-2-关键字"><a href="#1-2-关键字" class="headerlink" title="1.2 关键字"></a>1.2 关键字</h3><ul><li><strong>关键字</strong> 就是在 <code>Python</code> 内部已经使用的标识符</li><li><strong>关键字</strong> 具有特殊的功能和含义</li><li>开发者 <strong>不允许定义和关键字相同的名字的标示符</strong></li></ul><p>通过以下命令可以查看 <code>Python</code> 中的关键字</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">1</span>]: <span class="keyword">import</span> keyword</span><br><span class="line">In [<span class="number">2</span>]: print(keyword.kwlist)</span><br></pre></td></tr></table></figure><blockquote><p>提示：<strong>关键字的学习及使用</strong>，会在后面的课程中不断介绍</p><ul><li><code>import</code> <strong>关键字</strong> 可以导入一个 <strong>“工具包”</strong></li><li>在 <code>Python</code> 中不同的工具包，提供有不同的工具</li></ul></blockquote><h2 id="02-变量的命名规则"><a href="#02-变量的命名规则" class="headerlink" title="02. 变量的命名规则"></a>02. 变量的命名规则</h2><blockquote><p><strong>命名规则</strong> 可以被视为一种 <strong>惯例</strong>，并无绝对与强制<br>目的是为了 <strong>增加代码的识别和可读性</strong></p></blockquote><p><strong>注意</strong> <code>Python</code> 中的 <strong>标识符</strong> 是 <strong>区分大小写的</strong></p><p><img src="002_标识符区分大小写.jpg" alt="标识符区分大小写"></p><ol><li><p>在定义变量时，为了保证代码格式，<code>=</code> 的左右应该各保留一个空格</p></li><li><p>在 <code>Python</code> 中，如果 <strong>变量名</strong> 需要由 <strong>二个</strong> 或 <strong>多个单词</strong> 组成时，可以按照以下方式命名</p><ol><li>每个单词都使用小写字母</li><li>单词与单词之间使用 <strong><code>_</code>下划线</strong> 连接</li></ol><ul><li>例如：<code>first_name</code>、<code>last_name</code>、<code>qq_number</code>、<code>qq_password</code></li></ul></li></ol><h3 id="驼峰命名法"><a href="#驼峰命名法" class="headerlink" title="驼峰命名法"></a>驼峰命名法</h3><ul><li>当 <strong>变量名</strong> 是由二个或多个单词组成时，还可以利用驼峰命名法来命名</li><li><strong>小驼峰式命名法</strong><ul><li>第一个单词以小写字母开始，后续单词的首字母大写</li><li>例如：<code>firstName</code>、<code>lastName</code></li></ul></li><li><strong>大驼峰式命名法</strong><ul><li>每一个单词的首字母都采用大写字母</li><li>例如：<code>FirstName</code>、<code>LastName</code>、<code>CamelCase</code> </li></ul></li></ul><p><img src="003_驼峰命名法.jpg" alt="驼峰命名法"></p>]]></content>
      
      
      <categories>
          
          <category> python学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 变量 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>变量的基本使用</title>
      <link href="/2019/11/02/%E5%8F%98%E9%87%8F%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/11/02/%E5%8F%98%E9%87%8F%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="变量的基本使用"><a href="#变量的基本使用" class="headerlink" title="变量的基本使用"></a>变量的基本使用</h1><blockquote><p><strong>程序就是用来处理数据的，而变量就是用来存储数据的</strong></p></blockquote><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ul><li>变量定义</li><li>变量的类型</li><li>变量的命名</li></ul><h2 id="01-变量定义"><a href="#01-变量定义" class="headerlink" title="01. 变量定义"></a>01. 变量定义</h2><ul><li>在 Python 中，每个变量 <strong>在使用前都必须赋值</strong>，变量 <strong>赋值以后</strong> 该变量 <strong>才会被创建</strong></li><li>等号（=）用来给变量赋值<ul><li><code>=</code> 左边是一个变量名</li><li><code>=</code> 右边是存储在变量中的值</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">变量名 = 值</span><br></pre></td></tr></table></figure><blockquote><p>变量定义之后，后续就可以直接使用了</p></blockquote><h3 id="1-变量演练1-——-iPython"><a href="#1-变量演练1-——-iPython" class="headerlink" title="1) 变量演练1 —— iPython"></a>1) 变量演练1 —— iPython</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义 qq_number 的变量用来保存 qq 号码</span></span><br><span class="line">In [<span class="number">1</span>]: qq_number = <span class="string">"1234567"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出 qq_number 中保存的内容</span></span><br><span class="line">In [<span class="number">2</span>]: qq_number</span><br><span class="line">Out[<span class="number">2</span>]: <span class="string">'1234567'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义 qq_password 的变量用来保存 qq 密码</span></span><br><span class="line">In [<span class="number">3</span>]: qq_password = <span class="string">"123"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出 qq_password 中保存的内容</span></span><br><span class="line">In [<span class="number">4</span>]: qq_password</span><br><span class="line">Out[<span class="number">4</span>]: <span class="string">'123'</span></span><br></pre></td></tr></table></figure><blockquote><p>使用交互式方式，如果要查看变量内容，直接输入变量名即可，不需要使用 <code>print</code> 函数</p></blockquote><h3 id="2-变量演练-2-——-PyCharm"><a href="#2-变量演练-2-——-PyCharm" class="headerlink" title="2) 变量演练 2 —— PyCharm"></a>2) 变量演练 2 —— PyCharm</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义 qq 号码变量</span></span><br><span class="line">qq_number = <span class="string">"1234567"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义 qq 密码变量</span></span><br><span class="line">qq_password = <span class="string">"123"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在程序中，如果要输出变量的内容，需要使用 print 函数</span></span><br><span class="line">print(qq_number)</span><br><span class="line">print(qq_password)</span><br></pre></td></tr></table></figure><blockquote><p>使用解释器执行，如果要输出变量的内容，必须要要使用 <code>print</code> 函数</p></blockquote><h3 id="3-变量演练-3-——-超市买苹果"><a href="#3-变量演练-3-——-超市买苹果" class="headerlink" title="3) 变量演练 3 —— 超市买苹果"></a>3) 变量演练 3 —— 超市买苹果</h3><blockquote><ul><li>可以用 <strong>其他变量的计算结果</strong> 来定义变量</li><li>变量定义之后，后续就可以直接使用了</li></ul></blockquote><p><strong>需求</strong></p><ul><li>苹果的价格是 <strong>8.5 元/斤</strong></li><li>买了 <strong>7.5 斤</strong> 苹果</li><li>计算付款金额</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义苹果价格变量</span></span><br><span class="line">price = <span class="number">8.5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义购买重量</span></span><br><span class="line">weight = <span class="number">7.5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算金额</span></span><br><span class="line">money = price * weight</span><br><span class="line"></span><br><span class="line">print(money)</span><br></pre></td></tr></table></figure><h4 id="思考题"><a href="#思考题" class="headerlink" title="思考题"></a>思考题</h4><ul><li>如果 <strong>只要买苹果，就返 5 块钱</strong></li><li>请重新计算购买金额</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义苹果价格变量</span></span><br><span class="line">price = <span class="number">8.5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义购买重量</span></span><br><span class="line">weight = <span class="number">7.5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算金额</span></span><br><span class="line">money = price * weight</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只要买苹果就返 5 元</span></span><br><span class="line">money = money - <span class="number">5</span></span><br><span class="line">print(money)</span><br></pre></td></tr></table></figure><p><strong>提问</strong></p><ul><li>上述代码中，一共定义有几个变量？<ul><li>三个：<code>price</code>／<code>weight</code>／<code>money</code></li></ul></li><li><code>money = money - 5</code> 是在定义新的变量还是在使用变量？<ul><li>直接使用之前已经定义的变量</li><li>变量名 只有在 <strong>第一次出现</strong> 才是 <strong>定义变量</strong></li><li>变量名 再次出现，不是定义变量，而是直接使用之前定义过的变量</li></ul></li><li>在程序开发中，可以修改之前定义变量中保存的值吗？<ul><li>可以</li><li>变量中存储的值，就是可以 <strong>变</strong> 的</li></ul></li></ul><h2 id="02-变量的类型"><a href="#02-变量的类型" class="headerlink" title="02. 变量的类型"></a>02. 变量的类型</h2><ul><li>在内存中创建一个变量，会包括：<ol><li>变量的名称</li><li>变量保存的数据</li><li>变量存储数据的类型</li><li>变量的地址（标示）</li></ol></li></ul><h3 id="2-1-变量类型的演练-——-个人信息"><a href="#2-1-变量类型的演练-——-个人信息" class="headerlink" title="2.1 变量类型的演练 —— 个人信息"></a>2.1 变量类型的演练 —— 个人信息</h3><p><strong>需求</strong></p><ul><li>定义变量保存小明的个人信息</li><li>姓名：<strong>小明</strong></li><li>年龄：<strong>18</strong> 岁</li><li>性别：<strong>是</strong>男生</li><li>身高：<strong>1.75</strong> 米</li><li>体重：<strong>75.0</strong> 公斤</li></ul><blockquote><p>利用 <strong>单步调试</strong> 确认变量中保存数据的类型</p></blockquote><p><strong>提问</strong></p><ol><li>在演练中，一共有几种数据类型？<ul><li>4 种</li><li><code>str</code> —— 字符串</li><li><code>bool</code> —— 布尔（真假）</li><li><code>int</code> —— 整数</li><li><code>float</code> —— 浮点数（小数）</li></ul></li><li>在 <code>Python</code> 中定义变量时需要指定类型吗？<ul><li>不需要</li><li><code>Python</code> 可以根据 <code>=</code> 等号右侧的值，自动推导出变量中存储数据的类型</li></ul></li></ol><h3 id="2-2-变量的类型"><a href="#2-2-变量的类型" class="headerlink" title="2.2 变量的类型"></a>2.2 变量的类型</h3><ul><li>在 <code>Python</code> 中定义变量是 <strong>不需要指定类型</strong>（在其他很多高级语言中都需要）</li><li>数据类型可以分为 <strong>数字型</strong> 和 <strong>非数字型</strong></li><li>数字型<ul><li>整型 (<code>int</code>)</li><li>浮点型（<code>float</code>）</li><li>布尔型（<code>bool</code>） <ul><li>真 <code>True</code> <code>非 0 数</code> —— <strong>非零即真</strong></li><li>假 <code>False</code> <code>0</code></li></ul></li><li>复数型 (<code>complex</code>)<ul><li>主要用于科学计算，例如：平面场问题、波动问题、电感电容等问题</li></ul></li></ul></li><li>非数字型<ul><li>字符串</li><li>列表</li><li>元组</li><li>字典</li></ul></li></ul><blockquote><p>提示：在 Python 2.x 中，<strong>整数</strong> 根据保存数值的长度还分为：</p><ul><li><code>int</code>（整数）</li><li><code>long</code>（长整数）</li></ul></blockquote><ul><li>使用 <code>type</code> 函数可以查看一个变量的类型</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">1</span>]: type(name)</span><br></pre></td></tr></table></figure><h3 id="2-3-不同类型变量之间的计算"><a href="#2-3-不同类型变量之间的计算" class="headerlink" title="2.3 不同类型变量之间的计算"></a>2.3 不同类型变量之间的计算</h3><h4 id="1-数字型变量-之间可以直接计算"><a href="#1-数字型变量-之间可以直接计算" class="headerlink" title="1) 数字型变量 之间可以直接计算"></a>1) <strong>数字型变量</strong> 之间可以直接计算</h4><ul><li>在 Python 中，两个数字型变量是可以直接进行 算数运算的</li><li>如果变量是 <code>bool</code> 型，在计算时<ul><li><code>True</code> 对应的数字是 <code>1</code></li><li><code>False</code> 对应的数字是 <code>0</code></li></ul></li></ul><p><strong>演练步骤</strong></p><ol><li>定义整数 <code>i = 10</code></li><li>定义浮点数 <code>f = 10.5</code></li><li>定义布尔型 <code>b = True</code></li></ol><ul><li>在 iPython 中，使用上述三个变量相互进行算术运算</li></ul><h4 id="2-字符串变量-之间使用-拼接字符串"><a href="#2-字符串变量-之间使用-拼接字符串" class="headerlink" title="2) 字符串变量 之间使用 + 拼接字符串"></a>2) <strong>字符串变量</strong> 之间使用 <code>+</code> 拼接字符串</h4><ul><li>在 Python 中，字符串之间可以使用 <code>+</code> 拼接生成新的字符串</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">1</span>]: first_name = <span class="string">"三"</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">2</span>]: last_name = <span class="string">"张"</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">3</span>]: first_name + last_name</span><br><span class="line">Out[<span class="number">3</span>]: <span class="string">'三张'</span></span><br></pre></td></tr></table></figure><h4 id="3-字符串变量-可以和-整数-使用-重复拼接相同的字符串"><a href="#3-字符串变量-可以和-整数-使用-重复拼接相同的字符串" class="headerlink" title="3) 字符串变量 可以和 整数 使用 * 重复拼接相同的字符串"></a>3) <strong>字符串变量</strong> 可以和 <strong>整数</strong> 使用 <code>*</code> 重复拼接相同的字符串</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">1</span>]: <span class="string">"-"</span> * <span class="number">50</span></span><br><span class="line">Out[<span class="number">1</span>]: <span class="string">'--------------------------------------------------'</span></span><br></pre></td></tr></table></figure><h4 id="4-数字型变量-和-字符串-之间-不能进行其他计算"><a href="#4-数字型变量-和-字符串-之间-不能进行其他计算" class="headerlink" title="4) 数字型变量 和 字符串 之间 不能进行其他计算"></a>4) <strong>数字型变量</strong> 和 <strong>字符串</strong> 之间 <strong>不能进行其他计算</strong></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">1</span>]: first_name = <span class="string">"zhang"</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">2</span>]: x = <span class="number">10</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">3</span>]: x + first_name</span><br><span class="line">---------------------------------------------------------------------------</span><br><span class="line">TypeError: unsupported operand type(s) <span class="keyword">for</span> +: <span class="string">'int'</span> <span class="keyword">and</span> <span class="string">'str'</span></span><br><span class="line">类型错误：`+` 不支持的操作类型：`int` 和 `str`</span><br></pre></td></tr></table></figure><h3 id="2-4-变量的输入"><a href="#2-4-变量的输入" class="headerlink" title="2.4 变量的输入"></a>2.4 变量的输入</h3><ul><li>所谓 <strong>输入</strong>，就是 <strong>用代码</strong> <strong>获取</strong> 用户通过 <strong>键盘</strong> 输入的信息</li><li>例如：去银行取钱，在 ATM 上输入密码</li><li>在 Python 中，如果要获取用户在 <strong>键盘</strong> 上的输入信息，需要使用到 <code>input</code> 函数</li></ul><h4 id="1-关于函数"><a href="#1-关于函数" class="headerlink" title="1) 关于函数"></a>1) 关于函数</h4><ul><li>一个 <strong>提前准备好的功能</strong>(别人或者自己写的代码)，<strong>可以直接使用</strong>，而 <strong>不用关心内部的细节</strong></li><li>目前已经学习过的函数</li></ul><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>print(x)</td><td>将 x 输出到控制台</td></tr><tr><td>type(x)</td><td>查看 x 的变量类型</td></tr></tbody></table><h4 id="2-input-函数实现键盘输入"><a href="#2-input-函数实现键盘输入" class="headerlink" title="2) input 函数实现键盘输入"></a>2) input 函数实现键盘输入</h4><ul><li>在 Python 中可以使用 <code>input</code> 函数从键盘等待用户的输入</li><li>用户输入的 <strong>任何内容</strong> Python 都认为是一个 <strong>字符串</strong></li><li>语法如下：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">字符串变量 = input(<span class="string">"提示信息："</span>)</span><br></pre></td></tr></table></figure><h4 id="3-类型转换函数"><a href="#3-类型转换函数" class="headerlink" title="3) 类型转换函数"></a>3) 类型转换函数</h4><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>int(x)</td><td>将 x 转换为一个整数</td></tr><tr><td>float(x)</td><td>将 x 转换到一个浮点数</td></tr></tbody></table><h4 id="4-变量输入演练-——-超市买苹果增强版"><a href="#4-变量输入演练-——-超市买苹果增强版" class="headerlink" title="4) 变量输入演练 —— 超市买苹果增强版"></a>4) 变量输入演练 —— 超市买苹果增强版</h4><p><strong>需求</strong></p><ul><li><strong>收银员输入</strong> 苹果的价格，单位：<strong>元／斤</strong></li><li><strong>收银员输入</strong> 用户购买苹果的重量，单位：<strong>斤</strong></li><li>计算并且 <strong>输出</strong> 付款金额</li></ul><h5 id="演练方式-1"><a href="#演练方式-1" class="headerlink" title="演练方式 1"></a>演练方式 1</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 输入苹果单价</span></span><br><span class="line">price_str = input(<span class="string">"请输入苹果价格："</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 要求苹果重量</span></span><br><span class="line">weight_str = input(<span class="string">"请输入苹果重量："</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 计算金额</span></span><br><span class="line"><span class="comment"># 1&gt; 将苹果单价转换成小数</span></span><br><span class="line">price = float(price_str)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2&gt; 将苹果重量转换成小数</span></span><br><span class="line">weight = float(weight_str)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3&gt; 计算付款金额</span></span><br><span class="line">money = price * weight</span><br><span class="line"></span><br><span class="line">print(money)</span><br></pre></td></tr></table></figure><p><strong>提问</strong></p><ol><li>演练中，针对 <strong>价格</strong> 定义了几个变量？<ul><li><strong>两个</strong></li><li><code>price_str</code> 记录用户输入的价格字符串</li><li><code>price</code> 记录转换后的价格数值</li></ul></li><li><strong>思考</strong> —— 如果开发中，需要用户通过控制台 输入 <strong>很多个 数字</strong>，针对每一个数字都要定义两个变量，<strong>方便吗</strong>？ </li></ol><h5 id="演练方式-2-——-买苹果改进版"><a href="#演练方式-2-——-买苹果改进版" class="headerlink" title="演练方式 2 —— 买苹果改进版"></a>演练方式 2 —— 买苹果改进版</h5><ol><li><strong>定义</strong> 一个 <strong>浮点变量</strong> 接收用户输入的同时，就使用 <code>float</code> 函数进行转换</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">price = float(input(<span class="string">"请输入价格:"</span>))</span><br></pre></td></tr></table></figure><ul><li>改进后的好处：</li></ul><ol><li>节约空间，只需要为一个变量分配空间</li><li>起名字方便，不需要为中间变量起名字</li></ol><ul><li>改进后的“缺点”：</li></ul><ol><li>初学者需要知道，两个函数能够嵌套使用，稍微有一些难度</li></ol><p><strong>提示</strong></p><ul><li>如果输入的不是一个数字，程序执行时会出错，有关数据转换的高级话题，后续会讲！</li></ul><h3 id="2-5-变量的格式化输出"><a href="#2-5-变量的格式化输出" class="headerlink" title="2.5 变量的格式化输出"></a>2.5 变量的格式化输出</h3><blockquote><p>苹果单价 <code>9.00</code> 元／斤，购买了 <code>5.00</code> 斤，需要支付 <code>45.00</code> 元</p></blockquote><ul><li>在 Python 中可以使用 <code>print</code> 函数将信息输出到控制台</li><li>如果希望输出文字信息的同时，<strong>一起输出</strong> <strong>数据</strong>，就需要使用到 <strong>格式化操作符</strong></li><li><code>%</code> 被称为 <strong>格式化操作符</strong>，专门用于处理字符串中的格式<ul><li>包含 <code>%</code> 的字符串，被称为 <strong>格式化字符串</strong></li><li><code>%</code> 和不同的 <strong>字符</strong> 连用，<strong>不同类型的数据</strong> 需要使用 <strong>不同的格式化字符</strong></li></ul></li></ul><table><thead><tr><th>格式化字符</th><th>含义</th></tr></thead><tbody><tr><td>%s</td><td>字符串</td></tr><tr><td>%d</td><td>有符号十进制整数，<code>%06d</code> 表示输出的整数显示位数，不足的地方使用 <code>0</code> 补全</td></tr><tr><td>%f</td><td>浮点数，<code>%.2f</code> 表示小数点后只显示两位</td></tr><tr><td>%%</td><td>输出 <code>%</code></td></tr></tbody></table><ul><li>语法格式如下：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"格式化字符串"</span> % 变量<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"格式化字符串"</span> % (变量<span class="number">1</span>, 变量<span class="number">2.</span>..))</span><br></pre></td></tr></table></figure><h4 id="格式化输出演练-——-基本练习"><a href="#格式化输出演练-——-基本练习" class="headerlink" title="格式化输出演练 —— 基本练习"></a>格式化输出演练 —— 基本练习</h4><p><strong>需求</strong></p><ol><li>定义字符串变量 <code>name</code>，输出 <strong>我的名字叫 小明，请多多关照！</strong></li><li>定义整数变量 <code>student_no</code>，输出 <strong>我的学号是 000001</strong></li><li>定义小数 <code>price</code>、<code>weight</code>、<code>money</code>，输出 <strong>苹果单价 9.00 元／斤，购买了 5.00 斤，需要支付 45.00 元</strong></li><li>定义一个小数 <code>scale</code>，输出 <strong>数据比例是 10.00%</strong></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"我的名字叫 %s，请多多关照！"</span> % name)</span><br><span class="line">print(<span class="string">"我的学号是 %06d"</span> % student_no)</span><br><span class="line">print(<span class="string">"苹果单价 %.02f 元／斤，购买 %.02f 斤，需要支付 %.02f 元"</span> % (price, weight, money))</span><br><span class="line">print(<span class="string">"数据比例是 %.02f%%"</span> % (scale * <span class="number">100</span>))</span><br></pre></td></tr></table></figure><h4 id="课后练习-——-个人名片"><a href="#课后练习-——-个人名片" class="headerlink" title="课后练习 —— 个人名片"></a>课后练习 —— 个人名片</h4><p><strong>需求</strong></p><ul><li>在控制台依次提示用户输入：<strong>姓名</strong>、<strong>公司</strong>、<strong>职位</strong>、<strong>电话</strong>、<strong>邮箱</strong></li><li>按照以下格式输出：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">**************************************************</span><br><span class="line">公司名称</span><br><span class="line"></span><br><span class="line">姓名 (职位)</span><br><span class="line"></span><br><span class="line">电话：电话</span><br><span class="line">邮箱：邮箱</span><br><span class="line">**************************************************</span><br></pre></td></tr></table></figure><p>实现代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">在控制台依次提示用户输入：姓名、公司、职位、电话、电子邮箱</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">name = input(<span class="string">"请输入姓名："</span>)</span><br><span class="line">company = input(<span class="string">"请输入公司："</span>)</span><br><span class="line">title = input(<span class="string">"请输入职位："</span>)</span><br><span class="line">phone = input(<span class="string">"请输入电话："</span>)</span><br><span class="line">email = input(<span class="string">"请输入邮箱："</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"*"</span> * <span class="number">50</span>)</span><br><span class="line">print(company)</span><br><span class="line">print()</span><br><span class="line">print(<span class="string">"%s (%s)"</span> % (name, title))</span><br><span class="line">print()</span><br><span class="line">print(<span class="string">"电话：%s"</span> % phone)</span><br><span class="line">print(<span class="string">"邮箱：%s"</span> % email)</span><br><span class="line">print(<span class="string">"*"</span> * <span class="number">50</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 变量 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算术运算符</title>
      <link href="/2019/11/02/%E7%AE%97%E6%9C%AF%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
      <url>/2019/11/02/%E7%AE%97%E6%9C%AF%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h1><p><strong>计算机</strong>，顾名思义就是负责进行 <strong>数学计算</strong> 并且 <strong>存储计算结果</strong> 的电子设备</p><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ul><li>算术运算符的基本使用</li></ul><h2 id="01-算数运算符"><a href="#01-算数运算符" class="headerlink" title="01. 算数运算符"></a>01. 算数运算符</h2><ul><li>算数运算符是 <strong>运算符的一种</strong></li><li>是完成基本的算术运算使用的符号，用来处理四则运算</li></ul><table><thead><tr><th style="text-align:center">运算符</th><th style="text-align:center">描述</th><th>实例</th></tr></thead><tbody><tr><td style="text-align:center">+</td><td style="text-align:center">加</td><td>10 + 20 = 30</td></tr><tr><td style="text-align:center">-</td><td style="text-align:center">减</td><td>10 - 20 = -10</td></tr><tr><td style="text-align:center">*</td><td style="text-align:center">乘</td><td>10 * 20 = 200</td></tr><tr><td style="text-align:center">/</td><td style="text-align:center">除</td><td>10 / 20 = 0.5</td></tr><tr><td style="text-align:center">//</td><td style="text-align:center">取整除</td><td>返回除法的整数部分（商） 9 // 2 输出结果 4</td></tr><tr><td style="text-align:center">%</td><td style="text-align:center">取余数</td><td>返回除法的余数 9 % 2 = 1</td></tr><tr><td style="text-align:center">**</td><td style="text-align:center">幂</td><td>又称次方、乘方，2 ** 3 = 8</td></tr></tbody></table><ul><li>在 Python 中 <code>*</code> 运算符还可以用于字符串，计算结果就是字符串重复指定次数的结果</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">1</span>]: <span class="string">"-"</span> * <span class="number">50</span></span><br><span class="line">Out[<span class="number">1</span>]: <span class="string">'----------------------------------------'</span></span><br></pre></td></tr></table></figure><h2 id="02-算数运算符的优先级"><a href="#02-算数运算符的优先级" class="headerlink" title="02. 算数运算符的优先级"></a>02. 算数运算符的优先级</h2><ul><li>和数学中的运算符的优先级一致，在 Python 中进行数学计算时，同样也是：<ul><li><strong>先乘除后加减</strong></li><li>同级运算符是 <strong>从左至右</strong> 计算</li><li>可以使用 <code>()</code> 调整计算的优先级</li></ul></li><li>以下表格的算数优先级由高到最低顺序排列</li></ul><table><thead><tr><th>运算符</th><th>描述</th></tr></thead><tbody><tr><td>**</td><td>幂 (最高优先级)</td></tr><tr><td>* / % //</td><td>乘、除、取余数、取整除</td></tr><tr><td>+ -</td><td>加法、减法</td></tr></tbody></table><ul><li>例如：<ul><li><code>2 + 3 * 5 = 17</code></li><li><code>(2 + 3) * 5 = 25</code></li><li><code>2 * 3 + 5 = 11</code></li><li><code>2 * (3 + 5) = 16</code></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> python学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 算术运算符 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>程序执行原理</title>
      <link href="/2019/11/02/%E7%A8%8B%E5%BA%8F%E6%89%A7%E8%A1%8C%E5%8E%9F%E7%90%86/"/>
      <url>/2019/11/02/%E7%A8%8B%E5%BA%8F%E6%89%A7%E8%A1%8C%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="程序执行原理（科普）"><a href="#程序执行原理（科普）" class="headerlink" title="程序执行原理（科普）"></a>程序执行原理（科普）</h1><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ul><li>计算机中的 <strong>三大件</strong></li><li>程序执行的原理</li><li>程序的作用</li></ul><h2 id="01-计算机中的三大件"><a href="#01-计算机中的三大件" class="headerlink" title="01. 计算机中的三大件"></a>01. 计算机中的三大件</h2><p>计算机中包含有较多的硬件，但是一个程序要运行，有 <strong>三个</strong> 核心的硬件，分别是：</p><ol><li><strong>CPU</strong> <ul><li>中央处理器，是一块超大规模的集成电路</li><li>负责 <strong>处理数据</strong>／<strong>计算</strong></li></ul></li><li><strong>内存</strong><ul><li><strong>临时</strong> 存储数据（断电之后，数据会消失）</li><li>速度快</li><li>空间小（单位价格高）</li></ul></li><li><strong>硬盘</strong> <ul><li><strong>永久</strong> 存储数据</li><li>速度慢</li><li>空间大（单位价格低）</li></ul></li></ol><table><thead><tr><th style="text-align:center">CPU</th><th style="text-align:center">内存</th><th style="text-align:center">硬盘</th></tr></thead><tbody><tr><td style="text-align:center"><img src="CPU.jpg" alt="CPU"></td><td style="text-align:center"><img src="内存条.png" alt="内存条"></td><td style="text-align:center"><img src="硬盘.jpg" alt="硬盘"></td></tr></tbody></table><h3 id="思考题"><a href="#思考题" class="headerlink" title="思考题"></a>思考题</h3><ol><li>计算机中哪一个硬件设备负责执行程序？<ul><li><strong>CPU</strong></li></ul></li><li><strong>内存</strong> 的速度快还是 <strong>硬盘</strong> 的速度快？<ul><li><strong>内存</strong></li></ul></li><li>我们的程序是安装在内存中的，还是安装在硬盘中的？<ul><li>硬盘</li></ul></li><li><strong>我买了一个内存条，有 500G 的空间！！！</strong>，这句话对吗？<ul><li>不对，内存条通常只有 <code>4G</code> / <code>8G</code> / <code>16G</code> / <code>32G</code></li></ul></li><li><strong>计算机关机之后，内存中的数据都会消失</strong>，这句话对吗？<ul><li>正确 </li></ul></li></ol><h2 id="02-程序执行的原理"><a href="#02-程序执行的原理" class="headerlink" title="02. 程序执行的原理"></a>02. 程序执行的原理</h2><p><img src="001_程序执行示意图.png" alt="程序执行示意图"></p><ol><li>程序 <strong>运行之前</strong>，程序是 <strong>保存在硬盘</strong> 中的</li><li>当要运行一个程序时<ul><li>操作系统会首先让 <strong>CPU</strong> 把程序复制到 <strong>内存</strong> 中</li><li><strong>CPU</strong> 执行 <strong>内存</strong> 中的 <strong>程序代码</strong></li></ul></li></ol><blockquote><p><strong>程序要执行，首先要被加载到内存</strong></p></blockquote><h3 id="2-1-Python-程序执行原理"><a href="#2-1-Python-程序执行原理" class="headerlink" title="2.1 Python 程序执行原理"></a>2.1 Python 程序执行原理</h3><p><img src="003_Python程序执行示意图.png" alt="Python程序执行示意图"></p><ol><li>操作系统会首先让 <strong>CPU</strong> 把 <strong>Python 解释器</strong> 的程序复制到 <strong>内存</strong> 中</li><li><strong>Python 解释器</strong> 根据语法规则，<strong>从上向下</strong> 让 <strong>CPU</strong> 翻译 <strong>Python 程序中的代码</strong></li><li><strong>CPU</strong> 负责执行翻译完成的代码</li></ol><h4 id="Python-的解释器有多大？"><a href="#Python-的解释器有多大？" class="headerlink" title="Python 的解释器有多大？"></a>Python 的解释器有多大？</h4><ul><li>执行以下终端命令可以查看 Python 解释器的大小</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 确认解释器所在位置</span></span><br><span class="line">$ <span class="built_in">which</span> python</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 查看 python 文件大小(只是一个软链接)</span></span><br><span class="line">$ ls -lh /usr/bin/python</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 查看具体文件大小</span></span><br><span class="line">$ ls -lh /usr/bin/python2.7</span><br></pre></td></tr></table></figure><blockquote><p>提示：建立 <strong>软链接</strong> 的目的，是为了方便使用者不用记住使用的解释器是 <strong>哪一个具体版本</strong></p></blockquote><h2 id="03-程序的作用"><a href="#03-程序的作用" class="headerlink" title="03. 程序的作用"></a>03. 程序的作用</h2><blockquote><p>程序就是 <strong>用来处理数据</strong> 的！</p></blockquote><ul><li><strong>新闻软件</strong> 提供的 <strong>新闻内容、评论……</strong> 是数据</li><li><strong>电商软件</strong> 提供的 <strong>商品信息、配送信息……</strong> 是数据</li><li><strong>运动类软件</strong> 提供的 <strong>运动数据……</strong> 是数据</li><li><strong>地图类软件</strong> 提供的 <strong>地图信息、定位信息、车辆信息……</strong> 是数据</li><li><strong>即时通讯软件</strong> 提供的 <strong>聊天信息、好友信息……</strong> 是数据</li><li>……</li></ul><h3 id="3-1-思考-QQ-程序的启动过程"><a href="#3-1-思考-QQ-程序的启动过程" class="headerlink" title="3.1 思考 QQ 程序的启动过程"></a>3.1 思考 QQ 程序的启动过程</h3><ol><li>QQ 在<strong>运行之前</strong>，是保存在 <strong>硬盘</strong> 中的</li><li><strong>运行之后</strong>，QQ 程序就会被加载到 <strong>内存</strong> 中了</li></ol><p><img src="003_QQ登陆界面.png" alt="QQ登陆界面"></p><h3 id="3-2-思考-QQ-程序的-登录-过程"><a href="#3-2-思考-QQ-程序的-登录-过程" class="headerlink" title="3.2 思考 QQ 程序的 登录 过程"></a>3.2 思考 QQ 程序的 <strong>登录</strong> 过程</h3><ol><li>读取用户输入的 <strong>QQ 号码</strong></li><li>读取用户输入的 <strong>QQ 密码</strong></li><li>将 <strong>QQ 号码</strong> 和 <strong>QQ 密码</strong> 发送给腾讯的服务器，等待服务器确认用户信息</li></ol><h4 id="思考-1"><a href="#思考-1" class="headerlink" title="思考 1"></a>思考 1</h4><blockquote><p>在 QQ 这个程序将 <strong>QQ 号码</strong> 和 <strong>QQ 密码</strong> 发送给服务器之前，<strong>是否需要先存储一下 QQ 号码 和 密码?</strong></p></blockquote><p><strong>答案</strong></p><p>肯定需要！—— 否则 QQ 这个程序就不知道把什么内容发送给服务器了！</p><h4 id="思考-2"><a href="#思考-2" class="headerlink" title="思考 2"></a>思考 2</h4><blockquote><p>QQ 这个程序把 <strong>QQ 号码</strong> 和 <strong>QQ 密码</strong> 保存在哪里？</p></blockquote><p><strong>答案</strong></p><p>保存在 <strong>内存</strong> 中，因为 QQ 程序自己就在内存中</p><h4 id="思考-3"><a href="#思考-3" class="headerlink" title="思考 3"></a>思考 3</h4><blockquote><p>QQ 这个程序是怎么保存用户的 <strong>QQ 号码</strong> 和 <strong>QQ 密码</strong> 的？</p></blockquote><p><strong>答案</strong></p><ol><li>在内存中为 <strong>QQ 号码</strong> 和 <strong>QQ 密码</strong> 各自分配一块空间<ul><li>在 QQ 程序结束之前，这两块空间是由 QQ 程序负责管理的，其他任何程序都不允许使用</li><li>在 QQ 自己使用完成之前，这两块空间始终都只负责保存 <strong>QQ 号码</strong> 和 <strong>QQ 密码</strong></li></ul></li><li>使用一个 <strong>别名</strong> 标记 <strong>QQ 号码</strong> 和 <strong>QQ 密码</strong> 在内存中的位置</li></ol><p><img src="004_QQ号码和密码内存示意图.png" alt="QQ号码和密码内存示意图"></p><blockquote><ul><li>在程序内部，为 <strong>QQ 号码</strong> 和 <strong>QQ 密码</strong> 在内存中分配的空间就叫做 <strong>变量</strong></li><li><strong>程序就是用来处理数据的，而变量就是用来存储数据的</strong></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> python学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python的注释方法</title>
      <link href="/2019/11/02/python%E7%9A%84%E6%B3%A8%E9%87%8A%E6%96%B9%E6%B3%95/"/>
      <url>/2019/11/02/python%E7%9A%84%E6%B3%A8%E9%87%8A%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h1><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ul><li>注释的作用</li><li>单行注释（行注释）</li><li>多行注释（块注释）</li></ul><h2 id="01-注释的作用"><a href="#01-注释的作用" class="headerlink" title="01. 注释的作用"></a>01. 注释的作用</h2><blockquote><p>使用用自己熟悉的语言，在程序中对某些代码进行标注说明，增强程序的可读性</p></blockquote><p><img src="001_未使用注释的python程序.gif" alt="未使用注释的python程序"></p><h2 id="02-单行注释-行注释"><a href="#02-单行注释-行注释" class="headerlink" title="02. 单行注释(行注释)"></a>02. 单行注释(行注释)</h2><ul><li>以 <code>#</code> 开头，<code>#</code> 右边的所有东西都被当做说明文字，而不是真正要执行的程序，只起到辅助说明作用</li><li>示例代码如下：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这是第一个单行注释</span></span><br><span class="line">print(<span class="string">"hello python"</span>)</span><br></pre></td></tr></table></figure><blockquote><p>为了保证代码的可读性，<code>#</code> 后面建议先添加一个空格，然后再编写相应的说明文字</p></blockquote><h3 id="在代码后面增加的单行注释"><a href="#在代码后面增加的单行注释" class="headerlink" title="在代码后面增加的单行注释"></a>在代码后面增加的单行注释</h3><ul><li>在程序开发时，同样可以使用 <code>#</code> 在代码的后面（旁边）增加说明性的文字</li><li>但是，需要注意的是，<strong>为了保证代码的可读性</strong>，<strong>注释和代码之间</strong> 至少要有 <strong>两个空格</strong></li><li>示例代码如下：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"hello python"</span>)  <span class="comment"># 输出 `hello python`</span></span><br></pre></td></tr></table></figure><h2 id="03-多行注释（块注释）"><a href="#03-多行注释（块注释）" class="headerlink" title="03. 多行注释（块注释）"></a>03. 多行注释（块注释）</h2><ul><li>如果希望编写的 <strong>注释信息很多，一行无法显示</strong>，就可以使用多行注释</li><li>要在 Python 程序中使用多行注释，可以用 <strong>一对 连续的 三个 引号</strong>(单引号和双引号都可以)</li><li>示例代码如下：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">这是一个多行注释</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">在多行注释之间，可以写很多很多的内容……</span></span><br><span class="line"><span class="string">"""</span> </span><br><span class="line">print(<span class="string">"hello python"</span>)</span><br></pre></td></tr></table></figure><h3 id="什么时候需要使用注释？"><a href="#什么时候需要使用注释？" class="headerlink" title="什么时候需要使用注释？"></a>什么时候需要使用注释？</h3><ol><li><strong>注释不是越多越好</strong>，对于一目了然的代码，不需要添加注释</li><li>对于 <strong>复杂的操作</strong>，应该在操作开始前写上若干行注释</li><li>对于 <strong>不是一目了然的代码</strong>，应在其行尾添加注释（为了提高可读性，注释应该至少离开代码 2 个空格）</li><li>绝不要描述代码，假设阅读代码的人比你更懂 Python，他只是不知道你的代码要做什么</li></ol><blockquote><p>在一些正规的开发团队，通常会有 <strong>代码审核</strong> 的惯例，就是一个团队中彼此阅读对方的代码</p></blockquote><h3 id="关于代码规范"><a href="#关于代码规范" class="headerlink" title="关于代码规范"></a>关于代码规范</h3><ul><li><code>Python</code> 官方提供有一系列 PEP（Python Enhancement Proposals） 文档</li><li>其中第 8 篇文档专门针对 <strong>Python 的代码格式</strong> 给出了建议，也就是俗称的 <strong>PEP 8</strong></li><li>文档地址：<a href="https://www.python.org/dev/peps/pep-0008/" target="_blank" rel="noopener">https://www.python.org/dev/peps/pep-0008/</a></li><li>谷歌有对应的中文文档：<a href="http://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/python_style_rules/" target="_blank" rel="noopener">http://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/python_style_rules/</a></li></ul><blockquote><p>任何语言的程序员，编写出符合规范的代码，是开始程序生涯的第一步</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> python学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 注释 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyCharm的初始设置</title>
      <link href="/2019/11/01/PyCharm%E7%9A%84%E5%88%9D%E5%A7%8B%E8%AE%BE%E7%BD%AE/"/>
      <url>/2019/11/01/PyCharm%E7%9A%84%E5%88%9D%E5%A7%8B%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="PyCharm-的初始设置（知道）"><a href="#PyCharm-的初始设置（知道）" class="headerlink" title="PyCharm 的初始设置（知道）"></a>PyCharm 的初始设置（知道）</h1><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ul><li>恢复 PyCharm 的初始设置</li><li>第一次启动 PyCharm</li><li>新建一个 Python 项目</li><li>设置 PyCharm 的字体显示</li><li>PyCharm 的升级以及其他</li></ul><p>PyCharm 的官方网站地址是：<a href="https://www.jetbrains.com/pycharm/" target="_blank" rel="noopener">https://www.jetbrains.com/pycharm/</a></p><h2 id="01-恢复-PyCharm-的初始设置"><a href="#01-恢复-PyCharm-的初始设置" class="headerlink" title="01. 恢复 PyCharm 的初始设置"></a>01. 恢复 PyCharm 的初始设置</h2><p><code>PyCharm</code> 的 <strong>配置信息</strong> 是保存在 <strong>用户家目录下</strong> 的 <code>.PyCharmxxxx.x</code> 目录下的，<code>xxxx.x</code> 表示当前使用的 <code>PyCharm</code> 的版本号</p><p>如果要恢复 <code>PyCharm</code> 的初始设置，可以按照以下步骤进行：</p><ul><li><ol><li>关闭正在运行的 <code>PyCharm</code></li></ol></li><li><ol start="2"><li>在终端中执行以下终端命令，删除 <code>PyCharm</code> 的配置信息目录：</li></ol></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rm -r ~/.PyCharm2016.3</span><br></pre></td></tr></table></figure><ul><li><ol start="3"><li>重新启动 <code>PyCharm</code></li></ol></li></ul><h2 id="02-第一次启动-PyCharm"><a href="#02-第一次启动-PyCharm" class="headerlink" title="02. 第一次启动 PyCharm"></a>02. 第一次启动 PyCharm</h2><ol><li>导入配置信息</li><li>选择许可协议</li><li>配置初始界面</li></ol><h3 id="2-1-导入配置信息"><a href="#2-1-导入配置信息" class="headerlink" title="2.1 导入配置信息"></a>2.1 导入配置信息</h3><ul><li>在第一次启动 <code>PyCharm</code> 时，会首先提示用户是否导入 <strong>之前的配置信息</strong></li><li>如果是第一次使用，直接点击 <strong>OK</strong> 按钮</li></ul><p><img src="001_PyCharm导入配置信息.png" alt="PyCharm导入配置信息"></p><h3 id="2-2-选择许可协议"><a href="#2-2-选择许可协议" class="headerlink" title="2.2 选择许可协议"></a>2.2 选择许可协议</h3><ul><li>PyCharm 是一个付费软件，购买费用为 <strong>199$ / 年</strong> 或者 <strong>19.90$ ／ 月</strong></li><li>不过 PyCharm 提供了对 <strong>学生和教师免费使用的版本</strong><ul><li>下载地址是：<a href="https://www.jetbrains.com/pycharm-edu/download/#section=linux" target="_blank" rel="noopener">https://www.jetbrains.com/pycharm-edu/download/#section=linux</a></li></ul></li><li>商业版本会提示输入注册信息，或者选择免费评估</li></ul><p><img src="002_激活许可证.png" alt="激活许可证"></p><h3 id="2-3-PyCharm-的配置初始界面"><a href="#2-3-PyCharm-的配置初始界面" class="headerlink" title="2.3 PyCharm 的配置初始界面"></a>2.3 PyCharm 的配置初始界面</h3><ul><li>在初始配置界面，可以通过 <code>Editor colors and fonts</code> 选择 <strong>编辑器的配色方案</strong></li></ul><p><img src="003_PyCharm初始配置界面.png" alt="PyCharm初始配置界面"></p><h3 id="2-4-欢迎界面"><a href="#2-4-欢迎界面" class="headerlink" title="2.4 欢迎界面"></a>2.4 欢迎界面</h3><ul><li>所有基础配置工作结束之后，就可以看到 <code>PyCharm</code> 的 <strong>欢迎界面</strong>了，通过 <strong>欢迎界面</strong> 就可以开始开发 Python 项目了</li></ul><p><img src="004_PyCharm欢迎页面.png" alt="PyCharm欢迎页面"></p><h2 id="03-新建-打开一个-Python-项目"><a href="#03-新建-打开一个-Python-项目" class="headerlink" title="03. 新建/打开一个 Python 项目"></a>03. 新建/打开一个 Python 项目</h2><h3 id="3-1-项目简介"><a href="#3-1-项目简介" class="headerlink" title="3.1 项目简介"></a>3.1 项目简介</h3><ul><li>开发 <strong>项目</strong> 就是开发一个 <strong>专门解决一个复杂业务功能的软件</strong></li><li>通常每 <strong>一个项目</strong> 就具有一个 <strong>独立专属的目录</strong>，用于保存 <strong>所有和项目相关的文件</strong><ul><li>一个项目通常会包含 <strong>很多源文件</strong></li></ul></li></ul><h3 id="3-2-打开-Python-项目"><a href="#3-2-打开-Python-项目" class="headerlink" title="3.2 打开 Python 项目"></a>3.2 打开 Python 项目</h3><ul><li>直接点击 <strong>Open</strong> 按钮，然后浏览到之前保存 <strong>Python 文件的目录</strong>，既可以打开项目</li><li>打开之后，会在目录下新建一个 <code>.idea</code> 的目录，用于保存 <strong>项目相关的信息</strong>，例如：<strong>解释器版本</strong>、<strong>项目包含的文件</strong>等等</li><li>第一次打开项目，需要耐心等待 <code>PyCharm</code> 对项目<strong>进行初始设置</strong></li></ul><p><img src="005_打开已有Python项目.png" alt="打开已有Python项目"></p><h4 id="设置项目使用的解释器版本"><a href="#设置项目使用的解释器版本" class="headerlink" title="设置项目使用的解释器版本"></a>设置项目使用的解释器版本</h4><ul><li>打开的目录如果不是由 <code>PyCharm</code> 建立的项目目录，<strong>有的时候</strong> 使用的解释器版本是 <code>Python 2.x</code> 的，需要<strong>单独设置解释器的版本</strong></li><li>通过 <strong>File</strong> / <strong>Settings…</strong> 可以打开设置窗口，如下图所示：</li></ul><p><img src="006_选择项目的解释器版本.png" alt="选择项目的解释器版本"></p><h3 id="3-3-新建项目"><a href="#3-3-新建项目" class="headerlink" title="3.3 新建项目"></a>3.3 新建项目</h3><h4 id="1-命名规则"><a href="#1-命名规则" class="headerlink" title="1) 命名规则"></a>1) 命名规则</h4><ul><li>以后 <strong>项目名</strong> 前面都以 <strong>数字编号</strong>，<strong>随着知识点递增，编号递增</strong><ul><li>例如：<strong>01_Python 基础</strong>、<strong>02_分支</strong>、<strong>03_循环</strong>…</li></ul></li><li>每个项目下的 <strong>文件名</strong> 都以 <code>hm_xx_知识点</code> 方式来命名<ul><li>其中 <strong>xx</strong> 是演练文件的序号</li></ul></li><li>注意<ul><li><ol><li>命名文件名时建议只使用 <strong>小写字母</strong>、<strong>数字</strong> 和 <strong>下划线</strong></li></ol></li><li><ol start="2"><li><strong>文件名不能以数字开始</strong></li></ol></li></ul></li><li>通过 <strong>欢迎界面</strong> 或者菜单 <strong>File</strong> / <strong>New Project</strong> 可以新建项目</li></ul><h4 id="2-演练步骤"><a href="#2-演练步骤" class="headerlink" title="2) 演练步骤"></a>2) 演练步骤</h4><ul><li>新建 <code>01_Python基础</code> 项目，使用 <strong>Python 3.x 解释器</strong></li><li>在项目下新建 <code>hm_01_hello.py</code> Python 文件</li><li>编写 <code>print(&quot;Hello Python&quot;)</code> 代码</li></ul><h2 id="04-设置-PyCharm-的字体显示"><a href="#04-设置-PyCharm-的字体显示" class="headerlink" title="04. 设置 PyCharm 的字体显示"></a>04. 设置 PyCharm 的字体显示</h2><p><img src="007_PyCharm设置编辑器字体.png" alt="PyCharm设置编辑器字体"></p><p><img src="008_PyCharm设置控制台字体.png" alt="PyCharm设置控制台字体"></p><h2 id="05-PyCharm-的升级以及其他"><a href="#05-PyCharm-的升级以及其他" class="headerlink" title="05. PyCharm 的升级以及其他"></a>05. PyCharm 的升级以及其他</h2><blockquote><p>PyCharm 提供了对 <strong>学生和教师免费使用的版本</strong></p></blockquote><ul><li>教育版下载地址：<a href="https://www.jetbrains.com/pycharm-edu/download/#section=linux" target="_blank" rel="noopener">https://www.jetbrains.com/pycharm-edu/download/#section=linux</a></li><li>专业版下载地址：<a href="https://www.jetbrains.com/pycharm/download/#section=linux" target="_blank" rel="noopener">https://www.jetbrains.com/pycharm/download/#section=linux</a></li></ul><h3 id="5-1-安装和启动步骤"><a href="#5-1-安装和启动步骤" class="headerlink" title="5.1 安装和启动步骤"></a>5.1 安装和启动步骤</h3><ul><li><ol><li>执行以下终端命令，解压缩下载后的安装包</li></ol></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tar -zxvf pycharm-professional-2017.1.3.tar.gz</span><br></pre></td></tr></table></figure><ul><li><ol start="2"><li>将解压缩后的目录移动到 <code>/opt</code> 目录下，可以方便其他用户使用</li></ol></li></ul><blockquote><p><code>/opt</code> 目录用户存放给主机额外安装的软件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo mv pycharm-2017.1.3/ /opt/</span><br></pre></td></tr></table></figure><ul><li><ol start="3"><li>切换工作目录</li></ol></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /opt/pycharm-2017.1.3/bin</span><br></pre></td></tr></table></figure><ul><li><ol start="4"><li>启动 <code>PyCharm</code></li></ol></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./pycharm.sh</span><br></pre></td></tr></table></figure><h3 id="5-2-设置专业版启动图标"><a href="#5-2-设置专业版启动图标" class="headerlink" title="5.2 设置专业版启动图标"></a>5.2 设置专业版启动图标</h3><ul><li>在<strong>专业版</strong>中，选择菜单 <strong>Tools</strong> / <strong>Create Desktop Entry…</strong> 可以设置任务栏启动图标<ul><li>注意：设置图标时，需要勾选 <code>Create the entry for all users</code></li></ul></li></ul><p><img src="009_创建桌面图标.png" alt="创建桌面图标"></p><h3 id="5-3-卸载之前版本的-PyCharm"><a href="#5-3-卸载之前版本的-PyCharm" class="headerlink" title="5.3 卸载之前版本的 PyCharm"></a>5.3 卸载之前版本的 PyCharm</h3><h4 id="1-程序安装"><a href="#1-程序安装" class="headerlink" title="1) 程序安装"></a>1) 程序安装</h4><ul><li><ol><li><strong>程序文件目录</strong> </li></ol><ul><li>将安装包解压缩，并且移动到 <code>/opt</code> 目录下</li><li><strong>所有的相关文件都保存在解压缩的目录中</strong></li></ul></li><li><ol start="2"><li><strong>配置文件目录</strong></li></ol><ul><li>启动 <code>PyCharm</code> 后，会在用户家目录下建立一个 <code>.PyCharmxxx</code> 的隐藏目录</li><li><strong>保存 <code>PyCharm</code> 相关的配置信息</strong></li></ul></li><li><ol start="3"><li><strong>快捷方式文件</strong></li></ol><ul><li><code>/usr/share/applications/jetbrains-pycharm.desktop</code> </li></ul></li></ul><blockquote><p>在 <code>ubuntu</code> 中，应用程序启动的快捷方式通常都保存在 <code>/usr/share/applications</code> 目录下</p></blockquote><h4 id="2-程序卸载"><a href="#2-程序卸载" class="headerlink" title="2) 程序卸载"></a>2) 程序卸载</h4><ul><li>要卸载 <code>PyCharm</code> 只需要做以下两步工作：</li><li><ol><li>删除解压缩目录</li></ol></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo rm -r /opt/pycharm-2016.3.1/</span><br></pre></td></tr></table></figure><ul><li><ol start="2"><li>删除家目录下用于保存配置信息的隐藏目录</li></ol></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rm -r ~/.PyCharm2016.3/</span><br></pre></td></tr></table></figure><blockquote><p>如果不再使用 PyCharm 还需要将 <code>/usr/share/applications/</code> 下的 <code>jetbrains-pycharm.desktop</code> 删掉</p></blockquote><h3 id="5-4-教育版安装演练"><a href="#5-4-教育版安装演练" class="headerlink" title="5.4 教育版安装演练"></a>5.4 教育版安装演练</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 解压缩下载后的安装包</span></span><br><span class="line">$ tar -zxvf pycharm-edu-3.5.1.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 将解压缩后的目录移动到 `/opt` 目录下，可以方便其他用户使用</span></span><br><span class="line">$ sudo mv pycharm-edu-3.5.1/ /opt/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 启动 `PyCharm`</span></span><br><span class="line">/opt/pycharm-edu-3.5.1/bin/pycharm.sh</span><br></pre></td></tr></table></figure><blockquote><p>后续课程<strong>都使用专业版本演练</strong></p></blockquote><h4 id="设置启动图标"><a href="#设置启动图标" class="headerlink" title="设置启动图标"></a>设置启动图标</h4><ul><li><ol><li>编辑快捷方式文件</li></ol></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo gedit /usr/share/applications/jetbrains-pycharm.desktop</span><br></pre></td></tr></table></figure><ul><li><ol start="3"><li>按照以下内容修改文件内容，需要注意<strong>指定正确的 <code>pycharm</code> 目录</strong></li></ol></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Version=1.0</span><br><span class="line">Type=Application</span><br><span class="line">Name=PyCharm</span><br><span class="line">Icon=/opt/pycharm-edu-3.5.1/bin/pycharm.png</span><br><span class="line">Exec=&quot;/opt/pycharm-edu-3.5.1/bin/pycharm.sh&quot; %f</span><br><span class="line">Comment=The Drive to Develop</span><br><span class="line">Categories=Development;IDE;</span><br><span class="line">Terminal=false</span><br><span class="line">StartupWMClass=jetbrains-pycharm</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pycharm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一个python程序</title>
      <link href="/2019/11/01/%E7%AC%AC%E4%B8%80%E4%B8%AApython%E7%A8%8B%E5%BA%8F/"/>
      <url>/2019/11/01/%E7%AC%AC%E4%B8%80%E4%B8%AApython%E7%A8%8B%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="第一个-Python-程序"><a href="#第一个-Python-程序" class="headerlink" title="第一个 Python 程序"></a>第一个 Python 程序</h1><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ul><li>第一个 <code>HelloPython</code> 程序</li><li><code>Python 2.x</code> 与 <code>3​​.x</code> 版本简介</li><li>执行 <code>Python</code> 程序的三种方式<ul><li>解释器 —— <code>python</code> / <code>python3</code></li><li>交互式 —— <code>ipython</code></li><li>集成开发环境 —— <code>PyCharm</code></li></ul></li></ul><h2 id="01-第一个-HelloPython-程序"><a href="#01-第一个-HelloPython-程序" class="headerlink" title="01. 第一个 HelloPython 程序"></a>01. 第一个 <code>HelloPython</code> 程序</h2><h3 id="1-1-Python-源程序的基本概念"><a href="#1-1-Python-源程序的基本概念" class="headerlink" title="1.1 Python 源程序的基本概念"></a>1.1 Python 源程序的基本概念</h3><ol><li>Python 源程序就是<strong>一个特殊格式的文本文件</strong>，可以<strong>使用任意文本编辑软件</strong>做 <code>Python</code> 的开发</li><li>Python 程序的 <strong>文件扩展名</strong> 通常都是 <code>.py</code></li></ol><h3 id="1-2-演练步骤"><a href="#1-2-演练步骤" class="headerlink" title="1.2 演练步骤"></a>1.2 演练步骤</h3><ul><li>在桌面下，新建 <code>认识Python</code> 目录</li><li>在 <code>认识Python</code> 目录下新建 <code>01-HelloPython.py</code> 文件</li><li>使用 <strong>gedit</strong> 编辑 <code>01-HelloPython.py</code> 并且输入以下内容：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"hello python"</span>)</span><br><span class="line">print(<span class="string">"hello world"</span>)</span><br></pre></td></tr></table></figure><ul><li>在终端中输入以下命令执行 <code>01-HelloPython.py</code></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python 01-HelloPython.py</span><br></pre></td></tr></table></figure><blockquote><p><code>print</code> 是 <code>python</code> 中我们学习的第一个 <strong>函数</strong></p><p><code>print</code> 函数的作用，可以把 <strong>“”</strong> 内部的内容，输出到屏幕上</p></blockquote><h3 id="1-3-演练扩展-——-认识错误（BUG）"><a href="#1-3-演练扩展-——-认识错误（BUG）" class="headerlink" title="1.3 演练扩展 —— 认识错误（BUG）"></a>1.3 演练扩展 —— 认识错误（BUG）</h3><h4 id="关于错误"><a href="#关于错误" class="headerlink" title="关于错误"></a>关于错误</h4><ul><li>编写的程序<strong>不能正常执行</strong>，或者<strong>执行的结果不是我们期望的</strong></li><li>俗称 <code>BUG</code>，是程序员在开发时非常常见的，初学者常见错误的原因包括：<ol><li>手误</li><li>对已经学习过的知识理解还存在不足</li><li>对语言还有需要学习和提升的内容</li></ol></li><li>在学习语言时，不仅要<strong>学会语言的语法</strong>，而且还要<strong>学会如何认识错误和解决错误的方法</strong></li></ul><blockquote><p>每一个程序员都是在不断地修改错误中成长的</p></blockquote><h4 id="第一个演练中的常见错误"><a href="#第一个演练中的常见错误" class="headerlink" title="第一个演练中的常见错误"></a>第一个演练中的常见错误</h4><ul><li>1&gt; <strong>手误</strong>，例如使用 <code>pirnt(&quot;Hello world&quot;)</code> </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">NameError: name &apos;pirnt&apos; is not defined</span><br><span class="line">名称错误：&apos;pirnt&apos; 名字没有定义</span><br></pre></td></tr></table></figure><ul><li>2&gt; 将多条 <code>print</code> 写在一行</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SyntaxError: invalid syntax</span><br><span class="line">语法错误：语法无效</span><br></pre></td></tr></table></figure><blockquote><p>每行代码负责完成一个动作</p></blockquote><ul><li>3&gt; 缩进错误</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">IndentationError: unexpected indent</span><br><span class="line">缩进错误：不期望出现的缩进</span><br></pre></td></tr></table></figure><blockquote><ul><li>Python 是一个格式非常严格的程序设计语言</li><li>目前而言，大家记住每行代码前面都不要增加空格</li></ul></blockquote><ul><li>4&gt; <strong>python 2.x 默认不支持中文</strong> </li></ul><p>目前市场上有两个 Python 的版本并存着，分别是 <code>Python 2.x</code> 和 <code>Python 3.x</code></p><ul><li><strong>Python 2.x 默认不支持中文</strong>，具体原因，等到介绍 <strong>字符编码</strong> 时给大家讲解</li><li>Python 2.x 的解释器名称是 <strong>python</strong></li><li>Python 3.x 的解释器名称是 <strong>python3</strong></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SyntaxError: Non-ASCII character &apos;\xe4&apos; in file 01-HelloPython.py on line 3, </span><br><span class="line">but no encoding declared; </span><br><span class="line">see http://python.org/dev/peps/pep-0263/ for details</span><br><span class="line"></span><br><span class="line">语法错误： 在 01-HelloPython.py 中第 3 行出现了非 ASCII 字符 &apos;\xe4&apos;，但是没有声明文件编码</span><br><span class="line">请访问 http://python.org/dev/peps/pep-0263/ 了解详细信息</span><br></pre></td></tr></table></figure><blockquote><ul><li><code>ASCII</code> 字符只包含 <code>256</code> 个字符，不支持中文</li><li>有关字符编码的问题，后续会讲</li></ul></blockquote><h4 id="单词列表"><a href="#单词列表" class="headerlink" title="单词列表"></a>单词列表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">* error 错误</span><br><span class="line">* name 名字</span><br><span class="line">* defined 已经定义</span><br><span class="line">* syntax 语法</span><br><span class="line">* invalid 无效</span><br><span class="line">* Indentation 索引</span><br><span class="line">* unexpected 意外的，不期望的</span><br><span class="line">* character 字符</span><br><span class="line">* line 行</span><br><span class="line">* encoding 编码</span><br><span class="line">* declared 声明</span><br><span class="line">* details 细节，详细信息</span><br><span class="line">* ASCII 一种字符编码</span><br></pre></td></tr></table></figure><h2 id="02-Python-2-x-与-3​​-x-版本简介"><a href="#02-Python-2-x-与-3​​-x-版本简介" class="headerlink" title="02. Python 2.x 与 3​​.x 版本简介"></a>02. <code>Python 2.x</code> 与 <code>3​​.x</code> 版本简介</h2><p>目前市场上有两个 Python 的版本并存着，分别是 <code>Python 2.x</code> 和 <code>Python 3.x</code></p><blockquote><p>新的 Python 程序建议使用 <code>Python 3.0</code> 版本的语法</p></blockquote><ul><li>Python 2.x 是 <strong>过去的版本</strong><ul><li>解释器名称是 <strong>python</strong></li></ul></li><li>Python 3.x 是 <strong>现在和未来 主流的版本</strong><ul><li>解释器名称是 <strong>python3</strong></li><li>相对于 <code>Python</code> 的早期版本，这是一个 <strong>较大的升级</strong></li><li>为了不带入过多的累赘，<code>Python 3.0</code> 在设计的时候 <strong>没有考虑向下兼容</strong><ul><li>许多早期 <code>Python</code> 版本设计的程序都无法在 <code>Python 3.0</code> 上正常执行</li></ul></li><li>Python 3.0 发布于 <strong>2008 年</strong></li><li>到目前为止，Python 3.0 的稳定版本已经有很多年了<ul><li>Python 3.3 发布于 2012</li><li>Python 3.4 发布于 2014</li><li>Python 3.5 发布于 2015</li><li>Python 3.6 发布于 2016</li></ul></li></ul></li><li>为了照顾现有的程序，官方提供了一个过渡版本 —— <strong>Python 2.6</strong><ul><li>基本使用了 <code>Python 2.x</code> 的语法和库</li><li>同时考虑了向 <code>Python 3.0</code> 的迁移，<strong>允许使用部分</strong> <code>Python 3.0</code> 的语法与函数</li><li>2010 年中推出的 <code>Python 2.7</code> 被确定为 <strong>最后一个Python 2.x 版本</strong></li></ul></li></ul><blockquote><p>提示：如果开发时，无法立即使用 Python 3.0（还有极少的第三方库不支持 3.0 的语法），建议</p><ul><li>先使用 <code>Python 3.0</code> 版本进行开发</li><li>然后使用 <code>Python 2.6</code>、<code>Python 2.7</code> 来执行，并且做一些兼容性的处理</li></ul></blockquote><h2 id="03-执行-Python-程序的三种方式"><a href="#03-执行-Python-程序的三种方式" class="headerlink" title="03. 执行 Python 程序的三种方式"></a>03. 执行 Python 程序的三种方式</h2><h3 id="3-1-解释器-python-python3"><a href="#3-1-解释器-python-python3" class="headerlink" title="3.1. 解释器 python / python3"></a>3.1. 解释器 <code>python</code> / <code>python3</code></h3><h4 id="Python-的解释器"><a href="#Python-的解释器" class="headerlink" title="Python 的解释器"></a>Python 的解释器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 python 2.x 解释器</span></span><br><span class="line">$ python xxx.py</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 python 3.x 解释器</span></span><br><span class="line">$ python3 xxx.py</span><br></pre></td></tr></table></figure><h5 id="其他解释器（知道）"><a href="#其他解释器（知道）" class="headerlink" title="其他解释器（知道）"></a>其他解释器（知道）</h5><p><strong>Python 的解释器</strong> 如今有多个语言的实现，包括：</p><ul><li><code>CPython</code> —— 官方版本的 C 语言实现</li><li><code>Jython</code> —— 可以运行在 Java 平台</li><li><code>IronPython</code> —— 可以运行在 .NET 和 Mono 平台</li><li><code>PyPy</code> —— Python 实现的，支持 JIT 即时编译</li></ul><h3 id="3-2-交互式运行-Python-程序"><a href="#3-2-交互式运行-Python-程序" class="headerlink" title="3.2. 交互式运行 Python 程序"></a>3.2. 交互式运行 Python 程序</h3><ul><li>直接在终端中运行解释器，而不输入要执行的文件名</li><li>在 Python 的 <code>Shell</code> 中直接输入 <strong>Python 的代码</strong>，会立即看到程序执行结果</li></ul><h4 id="1-交互式运行-Python-的优缺点"><a href="#1-交互式运行-Python-的优缺点" class="headerlink" title="1) 交互式运行 Python 的优缺点"></a>1) 交互式运行 Python 的优缺点</h4><h5 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h5><ul><li>适合于学习/验证 Python 语法或者局部代码</li></ul><h5 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h5><ul><li>代码不能保存</li><li>不适合运行太大的程序</li></ul><h4 id="2-退出-官方的解释器"><a href="#2-退出-官方的解释器" class="headerlink" title="2) 退出 官方的解释器"></a>2) 退出 官方的解释器</h4><h5 id="1-gt-直接输入-exit"><a href="#1-gt-直接输入-exit" class="headerlink" title="1&gt; 直接输入 exit()"></a>1&gt; 直接输入 <code>exit()</code></h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>exit()</span><br></pre></td></tr></table></figure><h5 id="2-gt-使用热键退出"><a href="#2-gt-使用热键退出" class="headerlink" title="2&gt; 使用热键退出"></a>2&gt; 使用热键退出</h5><p>在 python 解释器中，按热键 <code>ctrl + d</code> 可以退出解释器</p><p><img src="001_积跬步以至千里.jpg" alt="积跬步以至千里"></p><h4 id="3-IPython"><a href="#3-IPython" class="headerlink" title="3) IPython"></a>3) IPython</h4><ul><li>IPython 中 的 “I” 代表 <strong>交互 interactive</strong></li></ul><h5 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h5><ul><li>IPython 是一个 python 的 <strong>交互式 shell</strong>，比默认的 <code>python shell</code> 好用得多<ul><li>支持自动补全</li><li>自动缩进</li><li>支持 <code>bash shell</code> 命令</li><li>内置了许多很有用的功能和函数</li></ul></li><li>IPython 是基于 BSD 开源的</li></ul><h5 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h5><ul><li>Python 2.x 使用的解释器是 <strong>ipython</strong></li><li>Python 3.x 使用的解释器是 <strong>ipython3</strong></li><li>要退出解释器可以有以下两种方式：</li></ul><h5 id="1-gt-直接输入-exit-1"><a href="#1-gt-直接输入-exit-1" class="headerlink" title="1&gt; 直接输入 exit"></a>1&gt; 直接输入 <code>exit</code></h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">1</span>]: exit</span><br></pre></td></tr></table></figure><h5 id="2-gt-使用热键退出-1"><a href="#2-gt-使用热键退出-1" class="headerlink" title="2&gt; 使用热键退出"></a>2&gt; 使用热键退出</h5><p>在 IPython 解释器中，按热键 <code>ctrl + d</code>，<code>IPython</code> 会询问是否退出解释器</p><h4 id="IPython-的安装"><a href="#IPython-的安装" class="headerlink" title="IPython 的安装"></a>IPython 的安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install ipython</span><br></pre></td></tr></table></figure><h2 id="3-3-Python-的-IDE-——-PyCharm"><a href="#3-3-Python-的-IDE-——-PyCharm" class="headerlink" title="3.3. Python 的 IDE —— PyCharm"></a>3.3. Python 的 IDE —— <code>PyCharm</code></h2><h3 id="1）-集成开发环境（IDE）"><a href="#1）-集成开发环境（IDE）" class="headerlink" title="1） 集成开发环境（IDE）"></a>1） 集成开发环境（IDE）</h3><p>集成开发环境（<code>IDE</code>，Integrated Development Environment）—— <strong>集成了开发软件需要的所有工具</strong>，一般包括以下工具：</p><ul><li>图形用户界面</li><li>代码编辑器（支持 <strong>代码补全</strong>／<strong>自动缩进</strong>）</li><li>编译器／解释器</li><li>调试器（<strong>断点</strong>／<strong>单步执行</strong>）</li><li>……</li></ul><h3 id="2）PyCharm-介绍"><a href="#2）PyCharm-介绍" class="headerlink" title="2）PyCharm 介绍"></a>2）PyCharm 介绍</h3><ul><li><code>PyCharm</code> 是 Python 的一款非常优秀的集成开发环境</li><li><code>PyCharm</code> 除了具有一般 IDE 所必备功能外，还可以在 <code>Windows</code>、<code>Linux</code>、<code>macOS</code> 下使用</li><li><code>PyCharm</code> 适合开发大型项目<ul><li>一个项目通常会包含 <strong>很多源文件</strong></li><li>每个 <strong>源文件</strong> 的代码行数是有限的，通常在几百行之内</li><li>每个 <strong>源文件</strong> 各司其职，共同完成复杂的业务功能</li></ul></li></ul><h3 id="3）PyCharm-快速体验"><a href="#3）PyCharm-快速体验" class="headerlink" title="3）PyCharm 快速体验"></a>3）PyCharm 快速体验</h3><p><img src="001_PyCharm的界面结构.png" alt="PyCharm的界面结构"></p><ul><li><strong>文件导航区域</strong> 能够 <strong>浏览</strong>／<strong>定位</strong>／<strong>打开</strong> 项目文件</li><li><strong>文件编辑区域</strong> 能够 <strong>编辑</strong> 当前打开的文件</li><li><strong>控制台区域</strong> 能够：<ul><li>输出程序执行内容</li><li>跟踪调试代码的执行</li></ul></li><li>右上角的 <strong>工具栏</strong> 能够 <strong>执行(SHIFT + F10)</strong> / <strong>调试(SHIFT + F9)</strong> 代码</li></ul><p><img src="002_PyCharm运行工具栏.png" alt="PyCharm运行工具栏"></p><ul><li>通过控制台上方的<strong>单步执行按钮(F8)</strong>，可以单步执行代码</li></ul><p><img src="003_PyCharm调试器.png" alt="PyCharm调试器"></p>]]></content>
      
      
      <categories>
          
          <category> python学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>认识python</title>
      <link href="/2019/11/01/%E8%AE%A4%E8%AF%86python/"/>
      <url>/2019/11/01/%E8%AE%A4%E8%AF%86python/</url>
      
        <content type="html"><![CDATA[<h1 id="认识-Python"><a href="#认识-Python" class="headerlink" title="认识 Python"></a>认识 Python</h1><blockquote><p>人生苦短，我用 Python —— Life is short, you need Python</p></blockquote><p><img src="001_人生苦短我用python.jpg" alt="人生苦短我用python"></p><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ul><li>Python 的起源</li><li>为什么要用 Python？</li><li>Python 的特点</li><li>Python 的优缺点</li></ul><h2 id="01-Python-的起源"><a href="#01-Python-的起源" class="headerlink" title="01. Python 的起源"></a>01. Python 的起源</h2><blockquote><p>Python 的创始人为吉多·范罗苏姆（Guido van Rossum）</p></blockquote><p><img src="002_吉多.jpg" alt="吉多"></p><ol><li>1989 年的圣诞节期间，吉多·范罗苏姆为了在阿姆斯特丹打发时间，决心开发一个新的<strong>解释程序</strong>，作为 ABC 语言的一种继承（<strong>感觉下什么叫牛人</strong>）</li><li>ABC 是由吉多参加设计的一种教学语言，就吉多本人看来，ABC 这种语言非常优美和强大，是<strong>专门为非专业程序员设计的</strong>。但是 ABC 语言并没有成功，究其原因，吉多认为是<strong>非开放</strong>造成的。吉多决心在 Python 中避免这一错误，并获取了非常好的效果</li><li>之所以选中 Python（蟒蛇） 作为程序的名字，是因为他是 BBC 电视剧——蒙提·派森的飞行马戏团（Monty Python’s Flying Circus）的爱好者</li><li>1991 年，第一个 Python <strong>解释器</strong> 诞生，它是用 C 语言实现的，并能够调用 C 语言的库文件</li></ol><h3 id="1-1-解释器（科普）"><a href="#1-1-解释器（科普）" class="headerlink" title="1.1 解释器（科普）"></a>1.1 解释器（科普）</h3><p><strong>计算机不能直接理解任何除机器语言以外的语言</strong>，所以必须要把程序员所写的程序语言翻译成机器语言，计算机才能执行程序。<strong>将其他语言翻译成机器语言的工具，被称为编译器</strong></p><p>编译器翻译的方式有两种：一个是<strong>编译</strong>，另外一个是<strong>解释</strong>。两种方式之间的区别在于<strong>翻译时间点的不同</strong>。当编译器<strong>以解释方式运行的时候</strong>，也称之为<strong>解释器</strong></p><p><img src="001_编译型和解释型语言工作对比.png" alt="编译型和解释型语言工作对比"></p><ul><li><strong>编译型语言</strong>：程序在执行之前需要一个专门的编译过程，把程序编译成为机器语言的文件，运行时不需要重新翻译，直接使用编译的结果就行了。程序执行效率高，依赖编译器，跨平台性差些。如 C、C++</li><li><strong>解释型语言</strong>：解释型语言编写的程序不进行预先编译，以文本方式存储程序代码，会将代码一句一句直接运行。在发布程序时，看起来省了道编译工序，但是在运行程序的时候，必须先解释再运行</li></ul><h4 id="编译型语言和解释型语言对比"><a href="#编译型语言和解释型语言对比" class="headerlink" title="编译型语言和解释型语言对比"></a>编译型语言和解释型语言对比</h4><ul><li><strong>速度</strong> —— 编译型语言比解释型语言执行速度快</li><li><strong>跨平台性</strong> —— 解释型语言比编译型语言跨平台性好</li></ul><h3 id="1-2-Python-的设计目标"><a href="#1-2-Python-的设计目标" class="headerlink" title="1.2 Python 的设计目标"></a>1.2 Python 的设计目标</h3><p>1999 年，吉多·范罗苏姆向 DARPA 提交了一条名为 “Computer Programming for Everybody” 的资金申请，并在后来说明了他对 Python 的目标：</p><ul><li>一门<strong>简单直观的语言</strong>并与主要竞争者一样强大</li><li><strong>开源</strong>，以便任何人都可以为它做贡献</li><li>代码<strong>像纯英语那样容易理解</strong></li><li>适用于<strong>短期</strong>开发的日常任务</li></ul><p>这些想法中的基本都已经成为现实，Python 已经成为一门流行的编程语言</p><h3 id="1-3-Python-的设计哲学"><a href="#1-3-Python-的设计哲学" class="headerlink" title="1.3 Python 的设计哲学"></a>1.3 Python 的设计哲学</h3><ol><li>优雅</li><li>明确</li><li>简单</li></ol><!-- > 在 Python 解释器内运行 `import this` 可以获得完整的列表 --><ul><li>Python 开发者的哲学是：<strong>用一种方法，最好是只有一种方法来做一件事</strong></li><li>如果面临多种选择，Python 开发者一般会拒绝花俏的语法，而选择<strong>明确没有或者很少有歧义的语法</strong></li></ul><blockquote><p>在 Python 社区，吉多被称为“仁慈的独裁者”</p></blockquote><h2 id="02-为什么选择-Python？"><a href="#02-为什么选择-Python？" class="headerlink" title="02. 为什么选择 Python？"></a>02. 为什么选择 Python？</h2><ul><li>代码量少</li><li>……</li></ul><blockquote><p>同一样问题，用不同的语言解决，代码量差距还是很多的，一般情况下 <code>Python</code> 是 <code>Java</code> 的 <strong>1/5</strong>，所以说 <strong>人生苦短，我用 Python</strong></p></blockquote><h2 id="03-Python-特点"><a href="#03-Python-特点" class="headerlink" title="03. Python 特点"></a>03. Python 特点</h2><ul><li>Python 是<strong>完全面向对象的语言</strong><ul><li><strong>函数</strong>、<strong>模块</strong>、<strong>数字</strong>、<strong>字符串</strong>都是对象，<strong>在 Python 中一切皆对象</strong></li><li>完全支持继承、重载、多重继承</li><li>支持重载运算符，也支持泛型设计</li></ul></li><li>Python <strong>拥有一个强大的标准库</strong>，Python 语言的核心只包含 <strong>数字</strong>、<strong>字符串</strong>、<strong>列表</strong>、<strong>字典</strong>、<strong>文件</strong> 等常见类型和函数，而由 Python 标准库提供了 <strong>系统管理</strong>、<strong>网络通信</strong>、<strong>文本处理</strong>、<strong>数据库接口</strong>、<strong>图形系统</strong>、<strong>XML 处理</strong> 等额外的功能</li><li>Python 社区提供了<strong>大量的第三方模块</strong>，使用方式与标准库类似。它们的功能覆盖 <strong>科学计算</strong>、<strong>人工智能</strong>、<strong>机器学习</strong>、<strong>Web 开发</strong>、<strong>数据库接口</strong>、<strong>图形系统</strong> 多个领域</li></ul><h3 id="面向对象的思维方式"><a href="#面向对象的思维方式" class="headerlink" title="面向对象的思维方式"></a>面向对象的思维方式</h3><ul><li><strong>面向对象</strong> 是一种 <strong>思维方式</strong>，也是一门 <strong>程序设计技术</strong></li><li>要解决一个问题前，首先考虑 <strong>由谁</strong> 来做，怎么做事情是 <strong>谁</strong> 的职责，最后把事情做好就行！<ul><li><strong>对象</strong> 就是 <strong>谁</strong></li></ul></li><li>要解决复杂的问题，就可以找<strong>多个不同的对象</strong>，<strong>各司其职</strong>，共同实现，最终完成需求</li></ul><h2 id="04-Python-的优缺点"><a href="#04-Python-的优缺点" class="headerlink" title="04. Python 的优缺点"></a>04. Python 的优缺点</h2><h3 id="4-1-优点"><a href="#4-1-优点" class="headerlink" title="4.1 优点"></a>4.1 优点</h3><ul><li>简单、易学</li><li>免费、开源</li><li><strong>面向对象</strong></li><li>丰富的库</li><li>可扩展性<ul><li>如果需要一段关键代码运行得更快或者希望某些算法不公开，可以把这部分程序用 <code>C</code> 或 <code>C++</code> 编写，然后在 <code>Python</code> 程序中使用它们</li></ul></li><li>……</li></ul><h3 id="4-2-缺点"><a href="#4-2-缺点" class="headerlink" title="4.2 缺点"></a>4.2 缺点</h3><ul><li>运行速度</li><li>国内市场较小</li><li>中文资料匮乏</li></ul>]]></content>
      
      
      <categories>
          
          <category> python学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vi-终端中的编辑器</title>
      <link href="/2019/11/01/vi-%E7%BB%88%E7%AB%AF%E4%B8%AD%E7%9A%84%E7%BC%96%E8%BE%91%E5%99%A8/"/>
      <url>/2019/11/01/vi-%E7%BB%88%E7%AB%AF%E4%B8%AD%E7%9A%84%E7%BC%96%E8%BE%91%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="vi-——-终端中的编辑器"><a href="#vi-——-终端中的编辑器" class="headerlink" title="vi —— 终端中的编辑器"></a><code>vi</code> —— 终端中的编辑器</h1><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ul><li><code>vi</code> 简介</li><li>打开和新建文件</li><li>三种工作模式</li><li>常用命令</li><li>分屏命令</li><li>常用命令速查图</li></ul><h2 id="01-vi-简介"><a href="#01-vi-简介" class="headerlink" title="01. vi 简介"></a>01. <code>vi</code> 简介</h2><h3 id="1-1-学习-vi-的目的"><a href="#1-1-学习-vi-的目的" class="headerlink" title="1.1 学习 vi 的目的"></a>1.1 学习 <code>vi</code> 的目的</h3><ul><li>在工作中，要对 <strong>服务器</strong> 上的文件进行 <strong>简单</strong> 的修改，可以使用 <code>ssh</code> 远程登录到服务器上，并且使用 <code>vi</code> 进行快速的编辑即可</li><li>常见需要修改的文件包括：<ul><li><strong>源程序</strong></li><li><strong>配置文件</strong>，例如 <code>ssh</code> 的配置文件 <code>~/.ssh/config</code></li></ul></li></ul><blockquote><ul><li>在没有图形界面的环境下，要编辑文件，<code>vi</code> 是最佳选择！</li><li>每一个要使用 Linux 的程序员，都应该或多或少的学习一些 <code>vi</code> 的常用命令</li></ul></blockquote><h3 id="1-2-vi-和-vim"><a href="#1-2-vi-和-vim" class="headerlink" title="1.2 vi 和 vim"></a>1.2 vi 和 vim</h3><ul><li>在很多 <code>Linux</code> 发行版中，直接把 <code>vi</code> 做成 <code>vim</code> 的软连接</li></ul><h4 id="vi"><a href="#vi" class="headerlink" title="vi"></a>vi</h4><ul><li><code>vi</code> 是 <code>Visual interface</code> 的简称，是 <code>Linux</code> 中 <strong>最经典</strong> 的文本编辑器</li><li><code>vi</code> 的核心设计思想 —— <strong>让程序员的手指始终保持在键盘的核心区域，就能完成所有的编辑操作</strong></li></ul><p><img src="001_vi键盘.png" alt="vi键盘"></p><ul><li><code>vi</code> 的特点：<ul><li><strong>没有图形界面</strong> 的 <strong>功能强大</strong> 的编辑器</li><li>只能是编辑 <strong>文本内容</strong>，不能对字体、段落进行排版</li><li><strong>不支持鼠标操作</strong></li><li><strong>没有菜单</strong></li><li><strong>只有命令</strong></li></ul></li><li><code>vi</code> 编辑器在 <strong>系统管理</strong>、<strong>服务器管理</strong> 编辑文件时，<strong>其功能永远不是图形界面的编辑器能比拟的</strong></li></ul><h4 id="vim"><a href="#vim" class="headerlink" title="vim"></a><code>vim</code></h4><p><strong>vim = vi improved</strong></p><ul><li><code>vim</code> 是从 <code>vi</code> 发展出来的一个文本编辑器，支持 <strong>代码补全</strong>、<strong>编译</strong> 及 <strong>错误跳转</strong> 等方便编程的功能特别丰富，在程序员中被广泛使用，被称为 <strong>编辑器之神</strong></li></ul><h4 id="查询软连接命令（知道）"><a href="#查询软连接命令（知道）" class="headerlink" title="查询软连接命令（知道）"></a>查询软连接命令（知道）</h4><ul><li>在很多 <code>Linux</code> 发行版中直接把 <code>vi</code> 做成 <code>vim</code> 的软连接</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查找 vi 的运行文件</span></span><br><span class="line"></span><br><span class="line">$ <span class="built_in">which</span> vi</span><br><span class="line">$ ls -l /usr/bin/vi</span><br><span class="line">$ ls -l /etc/alternatives/vi</span><br><span class="line">$ ls -l /usr/bin/vim.basic</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找 vim 的运行文件</span></span><br><span class="line">$ <span class="built_in">which</span> vim</span><br><span class="line">$ ls -l /usr/bin/vim</span><br><span class="line">$ ls -l /etc/alternatives/vim</span><br><span class="line">$ ls -l /usr/bin/vim.basic</span><br></pre></td></tr></table></figure><h2 id="02-打开和新建文件"><a href="#02-打开和新建文件" class="headerlink" title="02. 打开和新建文件"></a>02. 打开和新建文件</h2><ul><li>在终端中输入 <code>vi</code> <strong>在后面跟上文件名</strong> 即可</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vi 文件名</span><br></pre></td></tr></table></figure><ul><li>如果文件已经存在，会直接打开该文件</li><li>如果文件不存在，会新建一个文件</li></ul><h3 id="2-1-打开文件并且定位行"><a href="#2-1-打开文件并且定位行" class="headerlink" title="2.1 打开文件并且定位行"></a>2.1 打开文件并且定位行</h3><ul><li>在日常工作中，有可能会遇到 <strong>打开一个文件，并定位到指定行</strong> 的情况</li><li>例如：在开发时，<strong>知道某一行代码有错误</strong>，可以 <strong>快速定位</strong> 到出错代码的位置</li><li>这个时候，可以使用以下命令打开文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vi 文件名 +行数</span><br></pre></td></tr></table></figure><blockquote><p>提示：如果只带上 <code>+</code> 而不指定行号，会直接定位到文件末尾</p></blockquote><h3 id="2-2-异常处理"><a href="#2-2-异常处理" class="headerlink" title="2.2 异常处理"></a>2.2 异常处理</h3><ul><li>如果 <code>vi</code> 异常退出，在磁盘上可能会保存有 <strong>交换文件</strong></li><li>下次再使用 <code>vi</code> 编辑该文件时，会看到以下屏幕信息，按下字母 <code>d</code> 可以 <strong>删除交换文件</strong> 即可</li></ul><blockquote><p>提示：按下键盘时，注意关闭输入法</p></blockquote><p><img src="002_删除交换文件.png" alt="删除交换文件"></p><h2 id="03-三种工作模式"><a href="#03-三种工作模式" class="headerlink" title="03. 三种工作模式"></a>03. 三种工作模式</h2><ul><li><code>vi</code> 有三种基本工作模式：<ol><li><strong>命令模式</strong><ul><li><strong>打开文件首先进入命令模式</strong>，是使用 <code>vi</code> 的 <strong>入口</strong></li><li>通过 <strong>命令</strong> 对文件进行常规的编辑操作，例如：<strong>定位</strong>、<strong>翻页</strong>、<strong>复制</strong>、<strong>粘贴</strong>、<strong>删除</strong>……</li><li>在其他图形编辑器下，通过 <strong>快捷键</strong> 或者 <strong>鼠标</strong> 实现的操作，都在 <strong>命令模式</strong> 下实现</li></ul></li><li><strong>末行模式</strong> —— 执行 <strong>保存</strong>、<strong>退出</strong> 等操作 <ul><li>要退出 <code>vi</code> 返回到控制台，需要在末行模式下输入命令</li><li><strong>末行模式</strong> 是 <code>vi</code> 的 <strong>出口</strong></li></ul></li><li><strong>编辑模式</strong> —— 正常的编辑文字</li></ol></li></ul><p><img src="003_vi的模式.png" alt="vi的模式"></p><blockquote><p>提示：在 <code>Touch Bar</code> 的 Mac 电脑上 ，按 <code>ESC</code> 不方便，可以使用 <code>CTRL + [</code> 替代</p></blockquote><h3 id="末行模式命令"><a href="#末行模式命令" class="headerlink" title="末行模式命令"></a>末行模式命令</h3><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">英文</th><th>功能</th></tr></thead><tbody><tr><td style="text-align:center">w</td><td style="text-align:center">write</td><td>保存</td></tr><tr><td style="text-align:center">q</td><td style="text-align:center">quit</td><td>退出，如果没有保存，不允许退出</td></tr><tr><td style="text-align:center">q!</td><td style="text-align:center">quit</td><td>强行退出，不保存退出</td></tr><tr><td style="text-align:center">wq</td><td style="text-align:center">write &amp; quit</td><td>保存并退出</td></tr><tr><td style="text-align:center">x</td><td style="text-align:center"></td><td>保存并退出</td></tr></tbody></table><h2 id="04-常用命令"><a href="#04-常用命令" class="headerlink" title="04. 常用命令"></a>04. 常用命令</h2><h3 id="命令线路图"><a href="#命令线路图" class="headerlink" title="命令线路图"></a>命令线路图</h3><ol start="0"><li>重复次数<ul><li>在命令模式下，<strong>先输入一个数字</strong>，<strong>再跟上一个命令</strong>，可以让该命令 <strong>重复执行指定次数</strong> </li></ul></li><li>移动和选择（<strong>多练</strong>）<ul><li><code>vi</code> 之所以快，关键在于 <strong>能够快速定位到要编辑的代码行</strong></li><li><strong>移动命令</strong> 能够 和 <strong>编辑操作</strong> 命令 <strong>组合使用</strong></li></ul></li><li>编辑操作<ul><li><strong>删除</strong>、<strong>复制</strong>、<strong>粘贴</strong>、<strong>替换</strong>、<strong>缩排</strong></li></ul></li><li>撤销和重复</li><li>查找替换</li><li>编辑</li></ol><h4 id="学习提示"><a href="#学习提示" class="headerlink" title="学习提示"></a>学习提示</h4><ol><li><code>vi</code> 的命令较多，<strong>不要期望一下子全部记住</strong>，个别命令忘记了，只是会影响编辑速度而已</li><li>在使用 <code>vi</code> 命令时，注意 <strong>关闭中文输入法</strong></li></ol><h3 id="4-1-移动（基本）"><a href="#4-1-移动（基本）" class="headerlink" title="4.1 移动（基本）"></a>4.1 移动（基本）</h3><ul><li>要熟练使用 <code>vi</code>，首先应该学会怎么在 <strong>命令模式</strong> 下样快速移动光标</li><li><strong>编辑操作命令</strong>，能够和 <strong>移动命令</strong> 结合在一起使用</li></ul><h4 id="1-上、下、左、右"><a href="#1-上、下、左、右" class="headerlink" title="1) 上、下、左、右"></a>1) 上、下、左、右</h4><table><thead><tr><th style="text-align:center">命令</th><th>功能</th><th style="text-align:center">手指</th></tr></thead><tbody><tr><td style="text-align:center">h</td><td>向左</td><td style="text-align:center">食指</td></tr><tr><td style="text-align:center">j</td><td>向下</td><td style="text-align:center">食指</td></tr><tr><td style="text-align:center">k</td><td>向上</td><td style="text-align:center">中指</td></tr><tr><td style="text-align:center">l</td><td>向右</td><td style="text-align:center">无名指</td></tr></tbody></table><p><img src="005_移动光标.png" alt="移动光标"></p><h4 id="2-行内移动"><a href="#2-行内移动" class="headerlink" title="2) 行内移动"></a>2) 行内移动</h4><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">英文</th><th>功能</th></tr></thead><tbody><tr><td style="text-align:center">w</td><td style="text-align:center">word</td><td>向后移动一个单词</td></tr><tr><td style="text-align:center">b</td><td style="text-align:center">back</td><td>向前移动一个单词</td></tr><tr><td style="text-align:center">0</td><td style="text-align:center"></td><td>行首</td></tr><tr><td style="text-align:center">^</td><td style="text-align:center"></td><td>行首，第一个不是空白字符的位置</td></tr><tr><td style="text-align:center">$</td><td style="text-align:center"></td><td>行尾</td></tr></tbody></table><h4 id="3-行数移动"><a href="#3-行数移动" class="headerlink" title="3) 行数移动"></a>3) 行数移动</h4><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">英文</th><th>功能</th></tr></thead><tbody><tr><td style="text-align:center">gg</td><td style="text-align:center">go</td><td>文件顶部</td></tr><tr><td style="text-align:center">G</td><td style="text-align:center">go</td><td>文件末尾</td></tr><tr><td style="text-align:center">数字gg</td><td style="text-align:center">go</td><td>移动到 数字 对应行数</td></tr><tr><td style="text-align:center">数字G</td><td style="text-align:center">go</td><td>移动到 数字 对应行数</td></tr><tr><td style="text-align:center">:数字</td><td style="text-align:center"></td><td>移动到 数字 对应行数</td></tr></tbody></table><h4 id="4-屏幕移动"><a href="#4-屏幕移动" class="headerlink" title="4) 屏幕移动"></a>4) 屏幕移动</h4><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">英文</th><th>功能</th></tr></thead><tbody><tr><td style="text-align:center">Ctrl + b</td><td style="text-align:center">back</td><td>向上翻页</td></tr><tr><td style="text-align:center">Ctrl + f</td><td style="text-align:center">forward</td><td>向下翻页</td></tr><tr><td style="text-align:center">H</td><td style="text-align:center">Head</td><td>屏幕顶部</td></tr><tr><td style="text-align:center">M</td><td style="text-align:center">Middle</td><td>屏幕中间</td></tr><tr><td style="text-align:center">L</td><td style="text-align:center">Low</td><td>屏幕底部</td></tr></tbody></table><h3 id="4-2-移动（程序）"><a href="#4-2-移动（程序）" class="headerlink" title="4.2 移动（程序）"></a>4.2 移动（程序）</h3><h4 id="1-段落移动"><a href="#1-段落移动" class="headerlink" title="1) 段落移动"></a>1) 段落移动</h4><ul><li><code>vi</code> 中使用 空行 来区分段落</li><li>在程序开发时，通常 <strong>一段功能相关的代码会写在一起</strong> —— 之间没有空行</li></ul><table><thead><tr><th style="text-align:center">命令</th><th>功能</th></tr></thead><tbody><tr><td style="text-align:center">{</td><td>上一段</td></tr><tr><td style="text-align:center">}</td><td>下一段</td></tr></tbody></table><h4 id="2-括号切换"><a href="#2-括号切换" class="headerlink" title="2) 括号切换"></a>2) 括号切换</h4><ul><li>在程序世界中，<code>()</code>、<code>[]</code>、<code>{}</code> 使用频率很高，而且 <strong>都是成对出现的</strong></li></ul><table><thead><tr><th style="text-align:center">命令</th><th>功能</th></tr></thead><tbody><tr><td style="text-align:center">%</td><td>括号匹配及切换</td></tr></tbody></table><h4 id="3-标记"><a href="#3-标记" class="headerlink" title="3) 标记"></a>3) 标记</h4><ul><li>在开发时，某一块代码可能<strong>需要稍后处理</strong>，例如：编辑、查看</li><li>此时先使用 <code>m</code> 增加一个标记，这样可以 <strong>在需要时快速地跳转回来</strong> 或者 <strong>执行其他编辑操作</strong></li><li><strong>标记名称</strong> 可以是 <code>a~z</code> 或者 <code>A~Z</code> 之间的任意 <strong>一个</strong> 字母</li><li>添加了标记的 <strong>行如果被删除</strong>，<strong>标记同时被删除</strong></li><li>如果 <strong>在其他行添加了相同名称的标记</strong>，<strong>之前添加的标记也会被替换掉</strong></li></ul><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">英文</th><th>功能</th></tr></thead><tbody><tr><td style="text-align:center">mx</td><td style="text-align:center">mark</td><td>添加标记 x，x 是 a~z 或者 A~Z 之间的任意一个字母</td></tr><tr><td style="text-align:center">‘x</td><td style="text-align:center"></td><td>直接定位到标记 x 所在位置</td></tr></tbody></table><h3 id="4-3-选中文本（可视模式）"><a href="#4-3-选中文本（可视模式）" class="headerlink" title="4.3 选中文本（可视模式）"></a>4.3 选中文本（可视模式）</h3><ul><li>学习 <code>复制</code> 命令前，应该先学会 <strong>怎么样选中 要复制的代码</strong></li><li>在 <code>vi</code> 中要选择文本，需要先使用 <code>Visual</code> 命令切换到 <strong>可视模式</strong></li><li><code>vi</code> 中提供了 <strong>三种</strong> 可视模式，可以方便程序员选择 <strong>选中文本的方式</strong></li><li>按 <code>ESC</code> 可以放弃选中，返回到 <strong>命令模式</strong></li></ul><table><thead><tr><th style="text-align:center">命令</th><th>模式</th><th>功能</th></tr></thead><tbody><tr><td style="text-align:center">v</td><td>可视模式</td><td>从光标位置开始按照正常模式选择文本</td></tr><tr><td style="text-align:center">V</td><td>可视行模式</td><td>选中光标经过的完整行</td></tr><tr><td style="text-align:center">Ctrl + v</td><td>可视块模式</td><td>垂直方向选中文本</td></tr></tbody></table><ul><li><strong>可视模式</strong>下，可以和 <strong>移动命令</strong> 连用，例如：<code>ggVG</code> 能够选中所有内容</li></ul><h3 id="4-4-撤销和恢复撤销"><a href="#4-4-撤销和恢复撤销" class="headerlink" title="4.4 撤销和恢复撤销"></a>4.4 撤销和恢复撤销</h3><ul><li>在学习编辑命令之前，先要知道怎样撤销之前一次 <strong>错误的</strong> 编辑动作！</li></ul><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">英文</th><th>功能</th></tr></thead><tbody><tr><td style="text-align:center">u</td><td style="text-align:center">undo</td><td>撤销上次命令</td></tr><tr><td style="text-align:center">CTRL + r</td><td style="text-align:center">redo</td><td>恢复撤销的命令</td></tr></tbody></table><h3 id="4-5-删除文本"><a href="#4-5-删除文本" class="headerlink" title="4.5 删除文本"></a>4.5 删除文本</h3><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">英文</th><th>功能</th></tr></thead><tbody><tr><td style="text-align:center">x</td><td style="text-align:center">cut</td><td>删除光标所在字符，或者选中文字</td></tr><tr><td style="text-align:center">d(移动命令)</td><td style="text-align:center">delete</td><td>删除移动命令对应的内容</td></tr><tr><td style="text-align:center">dd</td><td style="text-align:center">delete</td><td>删除光标所在行，可以 ndd 复制多行</td></tr><tr><td style="text-align:center">D</td><td style="text-align:center">delete</td><td>删除至行尾</td></tr></tbody></table><blockquote><p>提示：如果使用 <strong>可视模式</strong> 已经选中了一段文本，那么无论使用 <code>d</code> 还是 <code>x</code>，都可以删除选中文本</p></blockquote><ul><li>删除命令可以和 <strong>移动命令</strong> 连用，以下是常见的组合命令：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">* dw        # 从光标位置删除到单词末尾</span><br><span class="line">* d0        # 从光标位置删除到一行的起始位置</span><br><span class="line">* d&#125;        # 从光标位置删除到段落结尾</span><br><span class="line">* ndd       # 从光标位置向下连续删除 n 行</span><br><span class="line">* d代码行G   # 从光标所在行 删除到 指定代码行 之间的所有代码</span><br><span class="line">* d&apos;a       # 从光标所在行 删除到 标记a 之间的所有代码</span><br></pre></td></tr></table></figure><h3 id="4-6-复制、粘贴"><a href="#4-6-复制、粘贴" class="headerlink" title="4.6 复制、粘贴"></a>4.6 复制、粘贴</h3><ul><li><code>vi</code> 中提供有一个 <strong>被复制文本的缓冲区</strong><ul><li><strong>复制</strong> 命令会将选中的文字保存在缓冲区 </li><li><strong>删除</strong> 命令删除的文字会被保存在缓冲区</li><li>在需要的位置，使用 <strong>粘贴</strong> 命令可以将缓冲区的文字插入到光标所在位置</li></ul></li></ul><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">英文</th><th>功能</th></tr></thead><tbody><tr><td style="text-align:center">y(移动命令)</td><td style="text-align:center">copy</td><td>复制</td></tr><tr><td style="text-align:center">yy</td><td style="text-align:center">copy</td><td>复制一行，可以 nyy 复制多行</td></tr><tr><td style="text-align:center">p</td><td style="text-align:center">paste</td><td>粘贴</td></tr></tbody></table><p><strong>提示</strong></p><ul><li>命令 <code>d</code>、<code>x</code> 类似于图形界面的 <strong>剪切操作</strong> —— <code>CTRL + X</code></li><li>命令 <code>y</code> 类似于图形界面的 <strong>复制操作</strong> —— <code>CTRL + C</code></li><li>命令 <code>p</code> 类似于图形界面的 <strong>粘贴操作</strong> —— <code>CTRL + V</code></li><li><code>vi</code> 中的 <strong>文本缓冲区同样只有一个</strong>，如果后续做过 <strong>复制、剪切</strong> 操作，之前缓冲区中的内容会被替换</li></ul><p><strong>注意</strong></p><ul><li><code>vi</code> 中的 <strong>文本缓冲区</strong> 和系统的 <strong>剪贴板</strong> 不是同一个</li><li>所以在其他软件中使用 <code>CTRL + C</code> 复制的内容，不能在 <code>vi</code> 中通过 <code>P</code> 命令粘贴</li><li>可以在 <strong>编辑模式</strong> 下使用 <strong>鼠标右键粘贴</strong></li></ul><h3 id="4-7-替换"><a href="#4-7-替换" class="headerlink" title="4.7 替换"></a>4.7 替换</h3><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">英文</th><th>功能</th><th>工作模式</th></tr></thead><tbody><tr><td style="text-align:center">r</td><td style="text-align:center">replace</td><td>替换当前字符</td><td>命令模式</td></tr><tr><td style="text-align:center">R</td><td style="text-align:center">replace</td><td>替换当前行光标后的字符</td><td>替换模式</td></tr></tbody></table><ul><li><code>R</code> 命令可以进入 <strong>替换模式</strong>，替换完成后，按下 <code>ESC</code> 可以回到 <strong>命令模式</strong></li><li><strong>替换命令</strong> 的作用就是不用进入 <strong>编辑模式</strong>，对文件进行 <strong>轻量级的修改</strong></li></ul><h3 id="4-8-缩排和重复执行"><a href="#4-8-缩排和重复执行" class="headerlink" title="4.8 缩排和重复执行"></a>4.8 缩排和重复执行</h3><table><thead><tr><th style="text-align:center">命令</th><th>功能</th></tr></thead><tbody><tr><td style="text-align:center">&gt;&gt;</td><td>向右增加缩进</td></tr><tr><td style="text-align:center">&lt;&lt;</td><td>向左减少缩进</td></tr><tr><td style="text-align:center">.</td><td>重复上次命令</td></tr></tbody></table><ul><li><strong>缩排命令</strong> 在开发程序时，<strong>统一增加代码的缩进</strong> 比较有用！<ul><li>一次性 <strong>在选中代码前增加 4 个空格</strong>，就叫做 <strong>增加缩进</strong></li><li>一次性 <strong>在选中代码前删除 4 个空格</strong>，就叫做 <strong>减少缩进</strong></li></ul></li><li>在 <strong>可视模式</strong> 下，缩排命令只需要使用 <strong>一个</strong> <code>&gt;</code> 或者 <code>&lt;</code> </li></ul><blockquote><p>在程序中，<strong>缩进</strong> 通常用来表示代码的归属关系</p><ul><li>前面空格越少，代码的级别越高</li><li>前面空格越多，代码的级别越低</li></ul></blockquote><h3 id="4-9-查找"><a href="#4-9-查找" class="headerlink" title="4.9 查找"></a>4.9 查找</h3><h4 id="常规查找"><a href="#常规查找" class="headerlink" title="常规查找"></a>常规查找</h4><table><thead><tr><th style="text-align:center">命令</th><th>功能</th></tr></thead><tbody><tr><td style="text-align:center">/str</td><td>查找 str</td></tr></tbody></table><ul><li>查找到指定内容之后，使用 <code>Next</code> 查找下一个出现的位置：<ul><li><code>n</code>: 查找下一个</li><li><code>N</code>: 查找上一个</li></ul></li><li>如果不想看到高亮显示，可以随便查找一个文件中不存在的内容即可</li></ul><h4 id="单词快速匹配"><a href="#单词快速匹配" class="headerlink" title="单词快速匹配"></a>单词快速匹配</h4><table><thead><tr><th style="text-align:center">命令</th><th>功能</th></tr></thead><tbody><tr><td style="text-align:center">*</td><td>向后查找当前光标所在单词</td></tr><tr><td style="text-align:center">#</td><td>向前查找当前光标所在单词</td></tr></tbody></table><ul><li>在开发中，通过单词快速匹配，可以快速看到这个单词在其他什么位置使用过</li></ul><h3 id="4-10-查找并替换"><a href="#4-10-查找并替换" class="headerlink" title="4.10 查找并替换"></a>4.10 查找并替换</h3><ul><li>在 <code>vi</code> 中查找和替换命令需要在 <strong>末行模式</strong> 下执行</li><li>记忆命令格式：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:%s///g</span><br></pre></td></tr></table></figure><h4 id="1-全局替换"><a href="#1-全局替换" class="headerlink" title="1) 全局替换"></a>1) 全局替换</h4><ul><li><strong>一次性</strong>替换文件中的 <strong>所有出现的旧文本</strong></li><li>命令格式如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:%s/旧文本/新文本/g</span><br></pre></td></tr></table></figure><h4 id="2-可视区域替换"><a href="#2-可视区域替换" class="headerlink" title="2) 可视区域替换"></a>2) 可视区域替换</h4><ul><li><strong>先选中</strong> 要替换文字的 <strong>范围</strong></li><li>命令格式如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:s/旧文本/新文本/g</span><br></pre></td></tr></table></figure><h4 id="3-确认替换"><a href="#3-确认替换" class="headerlink" title="3) 确认替换"></a>3) 确认替换</h4><ul><li>如果把末尾的 <code>g</code> 改成 <code>gc</code> 在替换的时候，会有提示！<strong>推荐使用！</strong></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:%s/旧文本/新文本/gc</span><br></pre></td></tr></table></figure><ol><li><code>y</code> - <code>yes</code> 替换</li><li><code>n</code> - <code>no</code> 不替换</li><li><code>a</code> - <code>all</code> 替换所有</li><li><code>q</code> - <code>quit</code> 退出替换</li><li><code>l</code> - <code>last</code> 最后一个，并把光标移动到行首</li><li><code>^E</code> 向下滚屏</li><li><code>^Y</code> 向上滚屏</li></ol><h3 id="4-11-插入命令"><a href="#4-11-插入命令" class="headerlink" title="4.11 插入命令"></a>4.11 插入命令</h3><ul><li>在 <code>vi</code> 中除了常用的 <code>i</code> 进入 <strong>编辑模式</strong> 外，还提供了以下命令同样可以进入编辑模式：</li></ul><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">英文</th><th>功能</th><th style="text-align:center">常用</th></tr></thead><tbody><tr><td style="text-align:center">i</td><td style="text-align:center">insert</td><td>在当前字符前插入文本</td><td style="text-align:center">常用</td></tr><tr><td style="text-align:center">I</td><td style="text-align:center">insert</td><td>在行首插入文本</td><td style="text-align:center">较常用</td></tr><tr><td style="text-align:center">a</td><td style="text-align:center">append</td><td>在当前字符后添加文本</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">A</td><td style="text-align:center">append</td><td>在行末添加文本</td><td style="text-align:center">较常用</td></tr><tr><td style="text-align:center">o</td><td style="text-align:center"></td><td>在当前行后面插入一空行</td><td style="text-align:center">常用</td></tr><tr><td style="text-align:center">O</td><td style="text-align:center"></td><td>在当前行前面插入一空行</td><td style="text-align:center">常用</td></tr></tbody></table><p><img src="004_插入命令.png" alt="插入命令"></p><h4 id="演练-1-——-编辑命令和数字连用"><a href="#演练-1-——-编辑命令和数字连用" class="headerlink" title="演练 1 —— 编辑命令和数字连用"></a>演练 1 —— 编辑命令和数字连用</h4><ul><li>在开发中，可能会遇到连续输入 <code>N</code> 个同样的字符</li></ul><blockquote><p>在 <code>Python</code> 中有简单的方法，但是其他语言中通常需要自己输入</p></blockquote><ul><li>例如：<code>**********</code> 连续 10 个星号</li></ul><p>要实现这个效果可以在 <strong>命令模式</strong> 下</p><ol><li>输入 <code>10</code>，表示要重复 10 次</li><li>输入 <code>i</code> 进入 <strong>编辑模式</strong></li><li>输入 <code>*</code> 也就是重复的文字</li><li>按下 <code>ESC</code> 返回到 <strong>命令模式</strong>，返回之后 <code>vi</code> 就会把第 <code>2、3</code> 两步的操作重复 <code>10</code> 次</li></ol><blockquote><p>提示：正常开发时，在 <strong>进入编辑模式之前，不要按数字</strong></p></blockquote><h4 id="演练-2-——-利用-可视块-给多行代码增加注释"><a href="#演练-2-——-利用-可视块-给多行代码增加注释" class="headerlink" title="演练 2 —— 利用 可视块 给多行代码增加注释"></a>演练 2 —— 利用 可视块 给多行代码增加注释</h4><ul><li>在开发中，可能会遇到一次性给多行代码 <strong>增加注释</strong> 的情况</li></ul><blockquote><p>在 <code>Python</code> 中，要给代码增加注释，可以在代码前增加一个 <code>#</code></p></blockquote><p>要实现这个效果可以在 <strong>命令模式</strong> 下</p><ol><li>移动到要添加注释的 <strong>第 1 行代码</strong>，按 <code>^</code> 来到行首</li><li>按 <code>CTRL + v</code> 进入 <strong>可视块</strong> 模式</li><li>使用 <code>j</code> 向下连续选中要添加的代码行</li><li>输入 <code>I</code> 进入 <strong>编辑模式</strong>，并在 <strong>行首插入</strong>，注意：一定要使用 <strong>I</strong></li><li>输入 <code>#</code> 也就是注释符号</li><li>按下 <code>ESC</code> 返回到 <strong>命令模式</strong>，返回之后 <code>vi</code> 会在之前选中的每一行代码 <strong>前</strong> 插入 <code>#</code></li></ol><h2 id="05-分屏命令"><a href="#05-分屏命令" class="headerlink" title="05. 分屏命令"></a>05. 分屏命令</h2><ul><li>属于 <code>vi</code> 的高级命令 —— 可以 <strong>同时编辑和查看多个文件</strong></li></ul><h3 id="5-1-末行命令扩展"><a href="#5-1-末行命令扩展" class="headerlink" title="5.1 末行命令扩展"></a>5.1 末行命令扩展</h3><p><strong>末行命令</strong> 主要是针对文件进行操作的：<strong>保存</strong>、<strong>退出</strong>、<strong>保存&amp;退出</strong>、<strong>搜索&amp;替换</strong>、<strong>另存</strong>、<strong>新建</strong>、<strong>浏览文件</strong></p><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">英文</th><th>功能</th></tr></thead><tbody><tr><td style="text-align:center">:e .</td><td style="text-align:center">edit</td><td>会打开内置的文件浏览器，浏览要当前目录下的文件</td></tr><tr><td style="text-align:center">:n 文件名</td><td style="text-align:center">new</td><td>新建文件</td></tr><tr><td style="text-align:center">:w 文件名</td><td style="text-align:center">write</td><td>另存为，但是仍然编辑当前文件，并不会切换文件</td></tr></tbody></table><blockquote><p>提示：切换文件之前，必须保证当前这个文件已经被保存！</p></blockquote><ul><li>已经学习过的 <strong>末行命令</strong>：</li></ul><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">英文</th><th>功能</th></tr></thead><tbody><tr><td style="text-align:center">:w</td><td style="text-align:center">write</td><td>保存</td></tr><tr><td style="text-align:center">:q</td><td style="text-align:center">quit</td><td>退出，如果没有保存，不允许退出</td></tr><tr><td style="text-align:center">:q!</td><td style="text-align:center">quit</td><td>强行退出，不保存退出</td></tr><tr><td style="text-align:center">:wq</td><td style="text-align:center">write &amp; quit</td><td>保存并退出</td></tr><tr><td style="text-align:center">:x</td><td style="text-align:center"></td><td>保存并退出</td></tr><tr><td style="text-align:center">:%s///gc</td><td style="text-align:center"></td><td>确认搜索并替换</td></tr></tbody></table><blockquote><p>在实际开发中，可以使用 <code>w</code> 命令 <strong>阶段性的备份代码</strong></p></blockquote><h3 id="5-2-分屏命令"><a href="#5-2-分屏命令" class="headerlink" title="5.2 分屏命令"></a>5.2 分屏命令</h3><ul><li>使用 <strong>分屏命令</strong>，可以 <strong>同时编辑和查看多个文件</strong></li></ul><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">英文</th><th>功能</th></tr></thead><tbody><tr><td style="text-align:center">:sp [文件名]</td><td style="text-align:center">split</td><td>横向增加分屏</td></tr><tr><td style="text-align:center">:vsp [文件名]</td><td style="text-align:center">vertical split</td><td>纵向增加分屏</td></tr></tbody></table><h4 id="1-切换分屏窗口"><a href="#1-切换分屏窗口" class="headerlink" title="1) 切换分屏窗口"></a>1) 切换分屏窗口</h4><blockquote><p>分屏窗口都是基于 <code>CTRL + W</code> 这个快捷键的，<code>w</code> 对应的英文单词是 <code>window</code></p></blockquote><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">英文</th><th>功能</th></tr></thead><tbody><tr><td style="text-align:center">w</td><td style="text-align:center">window</td><td>切换到下一个窗口</td></tr><tr><td style="text-align:center">r</td><td style="text-align:center">reverse</td><td>互换窗口</td></tr><tr><td style="text-align:center">c</td><td style="text-align:center">close</td><td>关闭当前窗口，但是不能关闭最后一个窗口</td></tr><tr><td style="text-align:center">q</td><td style="text-align:center">quit</td><td>退出当前窗口，如果是最后一个窗口，则关闭 vi</td></tr><tr><td style="text-align:center">o</td><td style="text-align:center">other</td><td>关闭其他窗口</td></tr></tbody></table><h4 id="2-调整窗口大小"><a href="#2-调整窗口大小" class="headerlink" title="2) 调整窗口大小"></a>2) 调整窗口大小</h4><blockquote><p>分屏窗口都是基于 <code>CTRL + W</code> 这个快捷键的，<code>w</code> 对应的英文单词是 <code>window</code></p></blockquote><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">英文</th><th>功能</th></tr></thead><tbody><tr><td style="text-align:center">+</td><td style="text-align:center"></td><td>增加窗口高度</td></tr><tr><td style="text-align:center">-</td><td style="text-align:center"></td><td>减少窗口高度</td></tr><tr><td style="text-align:center">&gt;</td><td style="text-align:center"></td><td>增加窗口宽度</td></tr><tr><td style="text-align:center">&lt;</td><td style="text-align:center"></td><td>减少窗口宽度</td></tr><tr><td style="text-align:center">=</td><td style="text-align:center"></td><td>等分窗口大小</td></tr></tbody></table><blockquote><p>调整窗口宽高的命令可以和数字连用，例如：<code>5 CTRL + W +</code> 连续 5 次增加高度</p></blockquote><h2 id="06-常用命令速查图"><a href="#06-常用命令速查图" class="headerlink" title="06. 常用命令速查图"></a>06. 常用命令速查图</h2><p><img src="vim.png" alt="vi"></p><h3 id="vimrc"><a href="#vimrc" class="headerlink" title="vimrc"></a>vimrc</h3><ul><li><code>vimrc</code> 是 <code>vim</code> 的配置文件，可以设置 vim 的配置，包括：<strong>热键</strong>、<strong>配色</strong>、<strong>语法高亮</strong>、<strong>插件</strong> 等</li><li><code>Linux</code> 中 <code>vimrc</code> 有两个位置，<strong>家目录下的配置文件优先级更高</strong></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/etc/vim/vimrc</span><br><span class="line">~/.vimrc</span><br></pre></td></tr></table></figure><ul><li>常用的插件有：<ul><li>代码补全</li><li>代码折叠</li><li>搜索</li><li>Git 集成</li><li>……</li></ul></li><li>网上有很多高手已经配置好的针对 <code>python</code> 开发的 <code>vimrc</code> 文件，可以下载过来直接使用，或者等大家多 <code>Linux</code> 比较熟悉后，再行学习！</li></ul>]]></content>
      
      
      <categories>
          
          <category> python学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> vi </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>802.11 MAC架构</title>
      <link href="/2019/08/28/802-11-MAC%E6%9E%B6%E6%9E%84/"/>
      <url>/2019/08/28/802-11-MAC%E6%9E%B6%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<p><img src="2019082802.jpg" alt></p><h1 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h1><p>802.11数据链路层分为两个子层。上层是IEEE802.2逻辑链路控制(LLC)子层，底层是媒介访问控制(MAC)子层。</p><p><img src="LLC和MAC.png" alt="LLC和MAC"></p><h2 id="MAC服务数据单元MSDU"><a href="#MAC服务数据单元MSDU" class="headerlink" title="MAC服务数据单元MSDU"></a>MAC服务数据单元MSDU</h2><p>网络层(第3层)将数据发送到数据链路层，数据被移交给LLC后即称为MAC服务数据单元(MSDU)。MSDU包含LLC和第3-7层的数据</p><h2 id="MAC协议数据单元MPDU"><a href="#MAC协议数据单元MPDU" class="headerlink" title="MAC协议数据单元MPDU"></a>MAC协议数据单元MPDU</h2><p>LLC将MSDU发送到MAC子层后，需要给MSDU加MAC头信息。被封装后的MSDU称为MAC协议数据单元MPDU，这也就是802.11帧。</p><h1 id="物理层"><a href="#物理层" class="headerlink" title="物理层"></a>物理层</h1><p>物理层也分为两个子层。上层称为物理层汇聚协议(PLCP)子层，底层称为物理媒介相关(PMD)子层。PLCP为传输数据帧做好准备，将MAC子层的帧变为PLCP协议数据单元PPDU。PMD子层进行数据调制处理并按照比特方式进行传输。</p><p><img src="数据链路层和物理层.png" alt="数据链路层和物理层"></p><h1 id="三种802-11帧类型"><a href="#三种802-11帧类型" class="headerlink" title="三种802.11帧类型"></a>三种802.11帧类型</h1><h2 id="管理帧"><a href="#管理帧" class="headerlink" title="管理帧"></a>管理帧</h2><ul><li>Association Request(关联请求)</li><li>Association Response (关联响应)</li><li>Reassociation Request(重关联请求)</li><li>Reassociation Response(重关联响应)</li><li>Probe Request(探测请求)</li><li>Probe Response(探测响应)</li><li>Beacon(信标帧)</li><li>ATIM(通知传输指示信息)</li><li>Disassociation(解除关联)</li><li>Authentication(身份验证)</li><li>Deauthentication(解除身份验证)</li><li>ACK(应答)</li><li>No ACK(无应答)</li><li>Timing advertisement</li></ul><h2 id="控制帧"><a href="#控制帧" class="headerlink" title="控制帧"></a>控制帧</h2><ul><li>Power Save Poll(PS-Poll)</li><li>RTS</li><li>CTS</li><li>ACK</li><li>CF-End</li><li>CF-End + ACK</li><li>Block ACK Request [BlockAckReq]</li><li>Block ACK [BlockQck]</li><li>Control wrapper</li></ul><h2 id="数据帧"><a href="#数据帧" class="headerlink" title="数据帧"></a>数据帧</h2><ul><li>Data</li><li>Null function</li><li>Data + CF-ACK</li><li>Data + CF-Poll</li><li>Data + CF-ACK + CF-Poll</li><li>CF-ACK(No data)</li><li>CF-Poll(No data)</li><li>CF-ACK + CF-Poll(No data)</li><li>QoS Data</li><li>QoS Null(No data)</li><li>QoS Data + CF-ACK</li><li>QoS Data + CF-Poll</li><li>QoS Data + CF-ACK + CF-Poll</li><li>QoS CF-Poll(No data)</li><li>Qos CF-ACK + CF-Poll(No data)</li></ul><h1 id="信标管理帧"><a href="#信标管理帧" class="headerlink" title="信标管理帧"></a>信标管理帧</h1><p>信标管理帧，也就是Beacon。基本服务集(BSS)中无线AP发送Beacon,客户端侦听Beacon。客户端只有在加入独立基本服务集(IBSS)时才发送Beacon.</p><h2 id="被动扫描"><a href="#被动扫描" class="headerlink" title="被动扫描"></a>被动扫描</h2><p>STA将侦听媒介中是否有与客户端软件使用程序配置了相同SSID的信标帧。一旦无线客户端听到该信标帧，便可以尝试连接发送信标帧的无线局域网。</p><h2 id="主动扫描"><a href="#主动扫描" class="headerlink" title="主动扫描"></a>主动扫描</h2><p>客户端主动发送探询请求(probe request)的管理帧。包含特定SSID信息的探询请求帧被称为定向探询请求(direct probe request)，不包含SSID信息的探询请求帧被称为空探询请求(Null probe request)</p><h1 id="认证"><a href="#认证" class="headerlink" title="认证"></a>认证</h1><p>开放式系统认证，共享密钥认证</p><h1 id="漫游"><a href="#漫游" class="headerlink" title="漫游"></a>漫游</h1><p>当无线局域网存在多个无线AP时，有一种功能使得客户端从一个AP过渡到另一个AP时扔然保持上层应用程序的网络连接。这个功能称为漫游(Roaming)。</p><p>漫游的决定权由客户端决定，决定客户端是否漫游的规则由无线网卡制造商确定。客户端可以与多个AP认证，但是只和一个AP关联。当客户端移动并远离其原本关联的无线AP时，信号强度低于预定信号阈值，它将尝试连接到另一个AP，并从当前BSS漫游到新的BSS。</p><h1 id="重关联"><a href="#重关联" class="headerlink" title="重关联"></a>重关联</h1><p>当客户端决定漫游到一个新的AP时，会发送reassociation到新AP。</p><h1 id="电源管理"><a href="#电源管理" class="headerlink" title="电源管理"></a>电源管理</h1><h2 id="主动模式"><a href="#主动模式" class="headerlink" title="主动模式"></a>主动模式</h2><p>主动模式(active mode)是大多数802.11终端默认的电源管理模式。时刻准备好传输或接受数据，并不提供电力节省功能。在802.11帧的MAC报头中，电源管理字段占用一位。值为0表示终端处于主动模式，可以比节电模式实现更高的吞吐量，但续航会缩短。</p><p><img src="MAC报头中的电源管理位.png" alt="MAC报头中的电源管理位"></p><h2 id="节电模式"><a href="#节电模式" class="headerlink" title="节电模式"></a>节电模式</h2><p>可以关闭某些收发器组件，比如天线等，从而节省电力。MAC报头电源管理位置为1表示正在使用节电模式。此时AP会缓存客户端所有的802.11帧。</p><h1 id="频段引导Band-steering"><a href="#频段引导Band-steering" class="headerlink" title="频段引导Band steering"></a>频段引导Band steering</h1><p>当双频客户端第一次启动时，它会在2.4G和5G发送探询请求帧来查找AP。当双频AP听到来自于同一客户端的两个频段的探询请求帧时，便知道客户端能够运行在5G频带。AP将仅响应使用5G频段的客户端，使用这种方法尝试引导客户端使用5G频段。通常情况下，客户端在2.4G和5G频段发送探询请求，但AP只在5G频段进行探询响应。尽管客户端被引导使用5G频段的AP，但仍有客户端使用2.4G频段连接AP。如果客户端持续尝试使用2.4G连接AP，AP最终会允许这个连接。可以查看我另一篇博客：</p><p><a href="http://www.iliuqi.com/2019/08/26/wifi%E5%8F%8C%E9%A2%91%E4%BC%98%E9%80%89/" target="_blank" rel="noopener">wifi双频优选</a></p><hr><p>注：具体802.11帧格式，建议阅读CWAP，我后续也会继续也这个系列的学习笔记，待阅读后会把笔记链接附在此处。</p>]]></content>
      
      
      <categories>
          
          <category> CWNA学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CWNA </tag>
            
            <tag> wifi </tag>
            
            <tag> MAC层 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>无线网络拓扑结构</title>
      <link href="/2019/08/28/%E6%97%A0%E7%BA%BF%E7%BD%91%E7%BB%9C%E6%8B%93%E6%89%91%E7%BB%93%E6%9E%84/"/>
      <url>/2019/08/28/%E6%97%A0%E7%BA%BF%E7%BD%91%E7%BB%9C%E6%8B%93%E6%89%91%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<p><img src="2019082801.jpg" alt></p><p>除802.11技术外，蜂窝电话、蓝牙和zigbee都是常见的无线技术。各种无线技术都可以划分到以下4种无线拓扑结构：</p><ul><li>无线局域网WWAN</li><li>无线城域网WMAN</li><li>无线个人域网WPAN</li><li>无线局域网WLAN</li></ul><h1 id="802-11拓扑结构"><a href="#802-11拓扑结构" class="headerlink" title="802.11拓扑结构"></a>802.11拓扑结构</h1><p>802.11标准定义了3种不同的802.11拓扑结构，它们称为服务集。BSS(基础服务集)、ESS(扩展服务集)和IBSS(独立基础服务集)，802.11s-2011修正案成了第四种服务集Mesh服务集(MBSS)。</p><p>单工通信：一台设备只能发送数据，另一台只能接受数据。调频广播</p><p>半双工通信：两台设备都可以收发数据，但是二者无法同时收发数据。对讲机和双向无线电。IEEE802.11无线局域网采用半双工通信</p><p>全双工通信：两台设备可以同时收发数据。电话通信，IEEE 802.3设备</p><h2 id="服务标识符"><a href="#服务标识符" class="headerlink" title="服务标识符"></a>服务标识符</h2><p>SSID是标识802.11无线网络的逻辑名。STA可以通过主动扫描或被动扫描识别彼此身份。SSID最多32个字符，且区分大小写。</p><h2 id="基础服务集BSS"><a href="#基础服务集BSS" class="headerlink" title="基础服务集BSS"></a>基础服务集BSS</h2><p>构成BSS的通信设备包括一个接入点和若干个客户端。再加入接入点的无线域后，客户端通过接入点交换数据。</p><p><img src="基础服务集BSS.png" alt="基础服务集BSS"></p><p>接入点通常与分布系统介质相连。如果接入点作为分布系统的入口设备，则客户端可以经由接入点访问分布系统介质中的网络资源。<strong>客户端之间的数据交换必须通过接入点进行，客户端之间无法直接通信。</strong></p><h2 id="基础服务集标识符"><a href="#基础服务集标识符" class="headerlink" title="基础服务集标识符"></a>基础服务集标识符</h2><p>接入点无线射频卡的48位(6字节)MAC地址称为BSSID。BSSID的简单定义就是AP无限射频卡的MAC地址。</p><p>用于标识BSS的BSSID地址位于大多数802.11无线帧的帧头。BSSID地址不仅用于BSS的802.11流量转发，也是BSS唯一的二层标识符，还在漫游过程中起重要作用。</p><p><img src="基础服务集标识符BSSID.png" alt="基础服务集标识符BSSID"></p><h2 id="扩展服务集"><a href="#扩展服务集" class="headerlink" title="扩展服务集"></a>扩展服务集</h2><p>ESS由一个或多个BSS构成，BSS之间通过分布系统介质连接。在大部分ESS中，所有接入点的SSID相同。ESS的网络名一般称为ESSID。同一分布系统介质相连的多个接入点可能具备不同的SSID，但是仍然属于同一个ESS。如果RSS支持漫游，则ESS中的所有接入点必须共享同一个SSID。</p><p><img src="ESS中的SSID和BSSID.png" alt="ESS中的SSID和BSSID"></p><h3 id="无缝漫游"><a href="#无缝漫游" class="headerlink" title="无缝漫游"></a>无缝漫游</h3><p><img src="ESS：无缝漫游.png" alt="ESS：无缝漫游"></p><p>接入点的覆盖区域部分重叠，可实现客户端的无缝漫游。</p><h3 id="游动漫游"><a href="#游动漫游" class="headerlink" title="游动漫游"></a>游动漫游</h3><p><img src="ESS：游动漫游.png" alt="ESS：游动漫游"></p><p>接入点覆盖区域不存在任何重叠，客户端在离开第一个接入点的时候会暂时失去连接，并在进入第二个接入点的覆盖范围时重新建立连接。</p><h3 id="colocation"><a href="#colocation" class="headerlink" title="colocation"></a>colocation</h3><p><img src="ESS：colocation.png" alt="ESS：colocation"></p><p>多个接入点覆盖范围完全重合，其目的是为了增加客户容量。</p><h2 id="独立基础服务集IBSS"><a href="#独立基础服务集IBSS" class="headerlink" title="独立基础服务集IBSS"></a>独立基础服务集IBSS</h2><p>IBSS只存在客户端，不存在接入点，采用点对点(ad hoc)方式通信。客户端将数据直接传输给其他客户端，而不是经过路由给其他客户端，即所有客户端的帧传输都是对等的。</p><p>为保证IBSS通信成功，所有客户端必须使用同一信道收发数据。此外IBSS的所有客户端必须共享同一个SSID，每个IBSS都会产生一个BSSID</p><h2 id="Mesh服务集"><a href="#Mesh服务集" class="headerlink" title="Mesh服务集"></a>Mesh服务集</h2><h1 id="802-11配置模式"><a href="#802-11配置模式" class="headerlink" title="802.11配置模式"></a>802.11配置模式</h1><h2 id="接入点模式"><a href="#接入点模式" class="headerlink" title="接入点模式"></a>接入点模式</h2><p>默认接入点配置为ap模式，也可以被配置为其他非标准模式：</p><ul><li>网桥模式 接入点被转换为无线网桥。此时ap增加额外的MAC层功能，可学习并维护到网络有限端的MAC地址</li><li>工作组网桥模式 接入点被转换为工作组网桥</li><li>中继器模式 接入点被转换为中继器接入点</li><li>Mesh模式 接入点作为Mesh环境中的无线回传设备</li><li>扫描模式 接入点无线接口被转换为探测器</li></ul><h2 id="客户端模式"><a href="#客户端模式" class="headerlink" title="客户端模式"></a>客户端模式</h2><p>客户端可以被配置为两种模式。默认的客户端模式被称为基础架构模式(Infrastrcture mode)。这种模式客户端之间的通信必须通过接入点进行。第二种配置模式称为点对点模式(ad hoc mode)，一些厂商也称为对等模式(peer to peer mode)。比如wifi direct(P2P)</p>]]></content>
      
      
      <categories>
          
          <category> CWNA学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CWNA </tag>
            
            <tag> wifi </tag>
            
            <tag> 无线网络拓扑结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ISM频段和UNII频段</title>
      <link href="/2019/08/27/CWNA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-2/"/>
      <url>/2019/08/27/CWNA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-2/</url>
      
        <content type="html"><![CDATA[<p><img src="2019082701.jpg" alt></p><h1 id="ISM频段"><a href="#ISM频段" class="headerlink" title="ISM频段"></a>ISM频段</h1><p>ISM(Industrial, Scientific, and Medical,工业、科学和以用)频段。分为以下3个频段：</p><ul><li>902MHz~928MHz(宽度为26MHz)</li><li>2.4000GHz~2.4835GHz(宽度为83.5MHz)</li><li>5.725GHz~5.875GHz(宽度为150MHz)</li></ul><p>FCC(美国联邦通信委员会)负责美国境内的ISM频段管理，其它国家对ISM频段的管理可能会有所不同。</p><p>900MHz频段称为工业频段，2.4GHz频段陈伟科学频段，5.8GHz频段成为医用频段</p><h2 id="900MHz-ISM频段"><a href="#900MHz-ISM频段" class="headerlink" title="900MHz ISM频段"></a>900MHz ISM频段</h2><p>900MHz ISM频段范围902MHz~928MHz，宽度为26MHz。</p><h2 id="2-4GHz-ISM频段"><a href="#2-4GHz-ISM频段" class="headerlink" title="2.4GHz ISM频段"></a>2.4GHz ISM频段</h2><p>2.4GHz ISM频段是无线网络最常用的工作频段。频段范围2.4000GHz~2.4835GHz，宽度为83.5MHz。</p><p>该频段包括采用以下技术的设备：</p><ul><li>802.11(FHSS或DSSS射频卡)</li><li>802.11b(HR-DSSS射频卡)</li><li>802.11g(ERP射频卡)</li><li>802.11n(HT射频卡)</li></ul><p>除无线网络设备之外，微波炉、无绳电话等也是用2.4GHz ISM频段进行通信，该频段拥挤不堪，很容易对802.11b/g/n射频卡造成干扰。</p><p>无线局域网可以使用该频段14个信道传输数据，但是每个国家对信道的分配可能有所不通。</p><h2 id="5-8GHz-ISM频段"><a href="#5-8GHz-ISM频段" class="headerlink" title="5.8GHz ISM频段"></a>5.8GHz ISM频段</h2><p>5.8GHz ISM频段范围5.725GHz~5.875GHz，宽度为150MHz。</p><h1 id="UNII频段"><a href="#UNII频段" class="headerlink" title="UNII频段"></a>UNII频段</h1><p>根据IEEE 802.11a修正案规定，无线局域网可以使用3个5GHz频段传输数据，每个频段包括4个信道。这三个频段称为UNII(Unlicensed National Information Infrastrcture,无需拍照的国家信息基础设施)频段。802.11a修正案将UNII频段划分为UNII-1(低)、UNII-2(中)和UNII-3(高)。宽度均为100MHz。</p><p>802.11h修正案定义了一个新的频段，称为UNII-2 Extended频段，共11个信道，宽度255MHz。</p><blockquote><p>整个UNII频段分为4个频段，总共23个信道，不过其他国家对信道的分配可能有所不同。</p></blockquote><h2 id="UNII-1低频段"><a href="#UNII-1低频段" class="headerlink" title="UNII-1低频段"></a>UNII-1低频段</h2><p>UNII-1低频段，范围是5.150GHz~5.250GHz，宽度100MHz。FCC规定，UNII-1频段一般用于室内通信，主动辐射器允许使用的最大输出功率为50mW。</p><h2 id="UNII-2中频段"><a href="#UNII-2中频段" class="headerlink" title="UNII-2中频段"></a>UNII-2中频段</h2><p>UNII-2中频段，范围是5.250GHz~5.350GHz，宽度100MHz。UNII-2频段一般用于室内通信，主动辐射器允许使用的最大输出功率为200mW。其他国家和地区的监管机构可能对UNII-2频段的使用做出其它限制。</p><h2 id="UNII-2-Extended频段"><a href="#UNII-2-Extended频段" class="headerlink" title="UNII-2 Extended频段"></a>UNII-2 Extended频段</h2><p>UNII-2 Extended频段范围是5.470GHz~5.725GHz，宽度为255MHz。UNII-2扩展频段一般用于室内通信，主动辐射器允许使用的最大输出功率为250mW。其他国家和地区的监管机构可能对UNII-2扩展频段的使用做出其它限制。</p><p>TPC(传输功率控制)和DFS(动态频率选择)机制，是用来避免无线局域网对雷达传输造成干扰。所有在美国和加拿大销售的5GHz无线局域网产品必须支持DFS。FCC规定使用UNII-2和UNII-2 Extended频段时必须采用DFS。欧洲也同样支持DFS。所有UNII频段都可能要支持TPC和DFS，各国监管机构负责制定具体的方案。</p><h2 id="UNII-3高频段"><a href="#UNII-3高频段" class="headerlink" title="UNII-3高频段"></a>UNII-3高频段</h2><p>UNII-3高频段范围5.725GHz~5.825GHz，宽度100MHz。UNII-3频段一般用于室外点对点桥接。欧洲不适用UNII-3频段。</p><p><img src="5GHz UNII频段.png" alt="5GHz UNII频段"></p><h1 id="跳频扩频"><a href="#跳频扩频" class="headerlink" title="跳频扩频"></a>跳频扩频</h1><p>跳频扩频(FHSS)工作原理：使用一个很小的载频空间传输数据，然后跳到另一个很小的载频空间继续传输，再跳到另一个，以此反复进行。</p><p><img src="跳频扩频.png" alt="跳频扩频"></p><h1 id="直序扩频"><a href="#直序扩频" class="headerlink" title="直序扩频"></a>直序扩频</h1><p>FHSS发射机在不同频率间跳变，而DSSS发射机只在一个信道上收发数据。数据被扩展到该信道的频率范围内，这个过程称为数据编码。</p><p>DSSS是一种扩频通信技术，用高速率的伪噪声码序列与信息码序列模二加（波形相乘）后的复合码序列去控制载波的相位而获得直接序列扩频信号，即将原来较高功率、较窄的频率变成具有较宽频的低功率频率，以在无线通信领域获得令人满意的抗噪声干扰性能。DSSS是直接用伪噪声序列对载波进行调制，要传送的数据信息需要经过信道编码后，与伪噪声序列进行模2和生成复合码去调制载波。接受机在收到发射信号后，首先通过伪码同步捕获电路来捕获发送来到伪码精确相位，并由次产生跟发送端的伪码相位完全一致的伪码相位，作为本地解扩信号，以便能够及时恢复出数据信息，完成整个直扩通信系统的信号接收。</p><p><img src="直序扩频编码与调制方式.png" alt="直序扩频编码与调制方式"></p><h1 id="正交频分复用"><a href="#正交频分复用" class="headerlink" title="正交频分复用"></a>正交频分复用</h1><p>正交频分复用(OFDM)使用52个独立的，精确划分的频率传输数据。这些频率相隔很近，一般将他们称为子载波。子载波之间的频率间隔经过精心选择，恰好能使谐波重叠，消除大部分不需要的信号。</p><p><img src="802.11信道与OFDM子载波.png" alt="802.11信道与OFDM子载波"></p><p>52个子载波按-26~+26的顺序进行编号。其中48个子载波用于传输数据，另外4个子载波(-21、-7、+7、+21)称为导频载波。导频载波用来作为接收机解调器的相位和幅度参考，用于补偿失真的OFDM信号。</p><p><img src="802.11a和802.11g数据率与调制方式的比较.png" alt="802.11a和802.11g数据率与调制方式的比较"></p><p>BPSK：二进制相移键控<br>QPSK：四进制相移键控<br>QAM：正交调幅，结合了调相和调幅的调制方式。</p><h1 id="2-4GHz信道"><a href="#2-4GHz信道" class="headerlink" title="2.4GHz信道"></a>2.4GHz信道</h1><p>IEEE将2.4GHz信道划分为14个独立的信道，下图列出了美国、加拿大与欧洲使用的信道。</p><p><img src="2.4GHz ISM频段信道规划.png" alt="2.4GHz ISM频段信道规划"></p><p>信道由其中心频率(fc)标识，每个信道宽度22MHz。例如，信道1的频率范围2.401~2.423GHz，其中心频率2.412GHz。两个相邻的信道中心频率间隔只有5MHz。信道之间相互重叠。</p><p><img src="2.4GHz信道重叠.png" alt="2.4GHz信道重叠"></p><p>很容易看到其中 1、6、11 这三个信道（红色标记）之间是完全没有交叠的，也就是人们常说的三个不互相重叠的信道。另外，如果设备支持，除 1、6、11 三个一组互不干扰的信道外，还有 2、7、12；3、8、13；4、9、14 三组互不干扰的信道。</p><h1 id="5GHz信道"><a href="#5GHz信道" class="headerlink" title="5GHz信道"></a>5GHz信道</h1><p><img src="5GHz UNII信道概述.png" alt="5GHz UNII信道概述"></p><p>根据802.11a修正案规定，两个信道中心频率只要相隔20MHz，就可以认为他们互不重叠。5GHz UNII频段全部23个信道均采用OFDM，信道中心频率之间的间隔为20MHz。理论上5GHz OFDM信道都是互不重叠的。</p><h1 id="吞吐量和带宽"><a href="#吞吐量和带宽" class="headerlink" title="吞吐量和带宽"></a>吞吐量和带宽</h1><p>无线网络在有限的一段频率范围称为频段。频段即频率带宽。数据编码和调制方式决定了数据率，也成为数据带宽。OFDM射频卡支持的数据速率为6、12、18、24、36、48和54Bbps,但是所有UNII信道频率带宽都是一样的，不同的是调制和编码方式。采用不同的调制和编码方式可以获得不同的数据率，也就是数据带宽。</p><p>由于射频介质的半双工特性以及CSMA/CA产生的开销，实际的总吞吐量一般不会超过数据率的50%。例如当数据率为54Mbps时，实际吞吐量只有20Mbps。</p>]]></content>
      
      
      <categories>
          
          <category> CWNA学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CWNA </tag>
            
            <tag> wifi </tag>
            
            <tag> 协议 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通信基础</title>
      <link href="/2019/08/26/CWNA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1/"/>
      <url>/2019/08/26/CWNA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1/</url>
      
        <content type="html"><![CDATA[<p><img src="2019082602.jpg" alt></p><h1 id="通信基础"><a href="#通信基础" class="headerlink" title="通信基础"></a>通信基础</h1><h2 id="理解载波信号"><a href="#理解载波信号" class="headerlink" title="理解载波信号"></a>理解载波信号</h2><p>构成数据的最小单位是比特，发射机采用的某种方式发送0和1，以便在两地之间传输数据。交流或直流信号本身不具备传输数据的能力，不过如果信号发生哪怕是微小的波动或者变化，发送端和接收端就能将信号解析出来，从而成功的收发数据。转化后的信号可以区分0和1，一般将其称为载波信号。调整信号以产生载波信号的过程称为调制。</p><p>可以对电波的3种分量进行调制以产生载波信号，分别为振幅、频率和相位。</p><h3 id="振幅和波长"><a href="#振幅和波长" class="headerlink" title="振幅和波长"></a>振幅和波长</h3><p>射频通信的基本过程：射频发射机产生无线电信号，并被另一端的接收机接收并监听。波主要由波长和振幅两部分构成。</p><p><img src="波的波长和振幅.png" alt="波的波长和振幅"></p><blockquote><p>振幅是波的高度、力度或能量。电波越小，越不容易被接收天线识别。电波越大，所产生的电信号越大，约容易被接收天线接收到。接收机根据振幅来区分波的大小</p></blockquote><blockquote><p>波长是两个相邻波的相似点之间的距离。测量波时，一般将两个波峰的距离作为波长。</p></blockquote><h3 id="频率"><a href="#频率" class="headerlink" title="频率"></a>频率</h3><p>频率描述了波的行为。波的传播速度的快慢称为频率，更具体的说，频率是1秒钟内产生的波的数量。</p><h3 id="相位"><a href="#相位" class="headerlink" title="相位"></a>相位</h3><p>相位是一个相对术语，它描述了两个同频波之间的关系，为了测定相位，将波长划分为360份，每一份称为1°。我们将度作为波传播的起始时间，如果一个波在0°的时候开始传播，另一个波在90°的时候开始传播，就称二者90°异相。</p><p><img src="90°异相.png" alt="90°异相"></p><h2 id="理解键控法-keying-method"><a href="#理解键控法-keying-method" class="headerlink" title="理解键控法(keying method)"></a>理解键控法(keying method)</h2><p>收发器将数据信号发送出去，必须对其进行调控，以便接收端能正确识别0和1。这种调控信号使其表示不同数据的方式称为键控法（keying methd）。键控法将信号转换为载波信号，数据经过编码以便传输。</p><p>下面介绍3种键控法，幅移键控(amplitude-shift keying ,ASK)、频移键控(frequency-shift keying ,FSK)和相移键控(phase-shift keying ,PSK)。键控法又称调制技术。它采用两种方式表示数据：</p><ol><li>当前状态，这种方式采用信号的当前值来区分0和1。</li><li>状态转换，这种方式采用信号的变换来区分0和1</li></ol><h3 id="幅移键控-ASK"><a href="#幅移键控-ASK" class="headerlink" title="幅移键控(ASK)"></a>幅移键控(ASK)</h3><p>幅移键控通过改变信号的幅度或高度来表示二进制数据，它属于当前状态技术，分别使用两种不同幅度代表二进制0和1。</p><p><img src="幅移键控实例.png" alt="幅移键控实例"></p><p>幅移键控接收端首先要将接收的信号划分为若干个时间段，这些时间段称为符号周期。在符号周期内对波进行抽样判断波的幅度，并根据幅度值确定接收到的二进制值。</p><p>无线信号无法预测，而且容易受到干扰源干扰。噪声和干扰通常会对信号幅度造成影响。如果信号幅度因噪声而改变，将导致接收端误判接收到的数据值，因此采用幅移键控必须谨慎！</p><h3 id="频移键控-FSK"><a href="#频移键控-FSK" class="headerlink" title="频移键控(FSK)"></a>频移键控(FSK)</h3><p>频移键控通过改变信号的频率来表示二进制数据，它属于当前状态技术，即分别采用两种不同的频率代表二进制0和1。</p><p><img src="频移键控实例.png" alt="频移键控实例"></p><p>频移键控根据频率的变化表示所传输的数据，接收端在符号周期内对信号抽样以判定波的频率，并根据频率值确定接收到的二进制值。</p><h3 id="相移键控-PSK"><a href="#相移键控-PSK" class="headerlink" title="相移键控(PSK)"></a>相移键控(PSK)</h3><p>相移键控通过改变信号的相位来表示二进制数据，它是一种状态转换技术，即分别采用两种不同的相位代表二进制0和1。</p><p><img src="相移键控实例.png" alt="相移键控实例"></p><p>相移键控使用相位的变化表示所传输的数据，接收端在符号周期内对信号抽样以判断波的相位，并根据相位值确定接收到的二进制值。</p><blockquote><p>相移键控技术广泛应用于802.11-2007标准定义的无线传输。接收端通常在符号周期内对信号进行抽样，并将当前抽样的相位和前一个抽样的相位进行比较以确定二者的差异，这种相位差称为差分，用于判定位值。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CWNA学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CWNA </tag>
            
            <tag> wifi </tag>
            
            <tag> 协议 </tag>
            
            <tag> 通信原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wifi双频优选</title>
      <link href="/2019/08/26/wifi%E5%8F%8C%E9%A2%91%E4%BC%98%E9%80%89/"/>
      <url>/2019/08/26/wifi%E5%8F%8C%E9%A2%91%E4%BC%98%E9%80%89/</url>
      
        <content type="html"><![CDATA[<h1 id="应用背景"><a href="#应用背景" class="headerlink" title="应用背景"></a>应用背景</h1><p>在数字通信领域，单位时间的有效数据传输率是衡量一个公司的产品性能的重要指标。在Wi-Fi网络中，2.4GHz频段只有3个未重复的信道，而5GHz频段拥有较多个未重复的信道。</p><p>因此，在“热点”区域内，2.4GHz频段的 信道资源会非常紧俏，当在同一信道上的接入用户数量过多时，会导致无线空口竞争加剧，使得网络传输性能下降。</p><p>同时，在密集部署情况下，AP间的覆盖范围和 信道常常产生重叠，由此带来的同频干扰也会严重影响无线网络质量。</p><p>当“热点”区域同时位于两个AP的覆盖范围内，所有的用户都指向连接同一个AP时，此 时，在一个AP下可能的接入用户量已经接近饱和，而另一个AP下可能只有少量用户，这种不均衡的负载分布同样会导致网络传输性能的下降。因此在这种情况下，SRM应运而生。</p><h1 id="术语解释"><a href="#术语解释" class="headerlink" title="术语解释"></a>术语解释</h1><p>BandSteering：接入信道引导。<br>LoadBalance：负载均衡。<br>AutoChannel &amp;Power Management：自动频率功率管理。</p><h1 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h1><h2 id="BandSteering应用场景"><a href="#BandSteering应用场景" class="headerlink" title="BandSteering应用场景"></a>BandSteering应用场景</h2><p><img src="BandSteering应用场景-部分只支持2.4G.jpg" alt="BandSteering应用场景-部分只支持2.4G"><br>如上图所示，当前AP1下的用户，有部分用户只支持2.4GHz，而其余用户同时支持2.4GHz和5GHz。</p><p>在此场景下，当没有Band Steering功能时，由于不能引导用户接入5GHz网络，可能所有或大部分用户都使用2.4GHz接入，造成2.4GHz信道繁忙，而5GHz信道空闲，如下图：<br><img src="BandSteering应用场景-未开启BandSteering功能.jpg" alt="BandSteering应用场景-未开启BandSteering功能"></p><p>开启Band Streeing功能后，支持5GHz接入的用户将被引导优先接入5GHz，以保证只支持2.4GHz的用户能在此时加入网络，如下图：<br><img src="BandSteering应用场景-开启BandSteering功能.jpg" alt="BandSteering应用场景-开启BandSteering功能"></p><h2 id="Load-Balance-base-on-User应用场景"><a href="#Load-Balance-base-on-User应用场景" class="headerlink" title="Load Balance base on User应用场景"></a>Load Balance base on User应用场景</h2><p><img src="Load Balance on user应用场景-部分用户同时处于2.4G和5G覆盖范围.jpg" alt="Load Balance on user应用场景-部分用户同时处于2.4G和5G覆盖范围"><br>如上图所示，有部分用户同时处在AP1和AP2的覆盖下，这部分用户连接到哪个AP将直接影响到AP的负载能力和用户的接入速率。</p><p>在此场景下，当没有Load Balance功能时，User7到User10有可能同时接入到AP1，导致AP1下用户数量远远大于AP2，使得AP1负载过高同时降低用户的流量,如图：<br><img src="Load Balance on user应用场景-部分用户同时处于2.4G和5G覆盖范围2.jpg" alt="Load Balance on user应用场景-部分用户同时处于2.4G和5G覆盖范围2"></p><p>在开启Load Balance后，User7到User10将会被引导接入到AP2中，使得AP1和AP2的负载能均衡分布，如下图：<br><img src="Load Balance on user应用场景-部分用户同时处于2.4G和5G覆盖范围3.jpg" alt="Load Balance on user应用场景-部分用户同时处于2.4G和5G覆盖范围3"></p><h2 id="Load-Balance-base-on-Traffic应用场景"><a href="#Load-Balance-base-on-Traffic应用场景" class="headerlink" title="Load Balance base on Traffic应用场景"></a>Load Balance base on Traffic应用场景</h2><p>除了基于用户的负载均衡外，还有一种基于流量的负载均衡。该种情况发生在，某一个AP下的某些终端的数据流量要求很高，导致无法满足其余用户的数据流量要求。当使用Load Balance功能后，其余用户将接入到另一个接入点，以满足这些用户的流量要求，如图：<br><img src="Load Balance on traffic应用场景-部分用户处于2个ap覆盖范围内.jpg" alt="Load Balance on traffic应用场景-部分用户处于2个ap覆盖范围内"></p><h2 id="AutoChannel-and-Power-management的应用场景"><a href="#AutoChannel-and-Power-management的应用场景" class="headerlink" title="AutoChannel and Power management的应用场景"></a>AutoChannel and Power management的应用场景</h2><p><img src="Auto Channel and Power MGMT-AP密集部署.jpg" alt="Auto Channel and Power MGMT-AP密集部署"><br>如上图所示，2.4GHz只有3个无重复的信道，所有的AP均只能在这三个信道中选择，而物理相邻的AP之间的信道必须不同。 </p><p>5GHz信道虽然多余 2.4GHz的信道，但同样需要妥善处理相邻AP之间的信道和功率关系。在没有实现该功能的情况下，必须由网络管理员手动对每一个AP所处的信道和功率进行配置，配置过程不但繁复，而且因为空口信号质量与周围环境息息相关，因此可能导致下雨天或挪动家具后，已经配置好的AP的信道和功率不再满足使用要求。</p><p>在这种情况下，为了简化网络管理员的配置过程，一个统揽全局的自动频道及功率调整就显得尤为重要。</p><h1 id="实现方式及其特点"><a href="#实现方式及其特点" class="headerlink" title="实现方式及其特点"></a>实现方式及其特点</h1><h2 id="Band-Steering的实现思路"><a href="#Band-Steering的实现思路" class="headerlink" title="Band Steering的实现思路"></a>Band Steering的实现思路</h2><p>带宽均衡。带宽均衡功能的提出是在双频AP的5G频谱未被完全利用的情况下。<br>在这种部署中，BandSteering通过以下方式，鼓励用户弃用拥挤的2.4GHz信道而选用5GHz信道：</p><ol><li>强制5GHz（Force5GHz）</li><li>5GHz优先（Prefer5GHz）</li><li>带宽均衡（BalanceBands）</li></ol><p>当启用强制5GHz功能后，AP将在以下情况下隐藏自己的2.4GHz频带（通过不回复Proberequests的方式）：</p><ul><li>用户已经探测了5GHz信道，并且已知5GHz可用。</li><li>此时用户在2.4GHz上没有开展会话。</li><li>此时当前信道的频谱负载均衡可用。</li></ul><p>5GHz优先是传统的带宽引导功能：将可以使用5GHz的用户引导使用5GHz的频段。当启用5GHz优先功能后，AP将在以下情况下隐藏自己的2.4GHz频带：</p><ul><li>用户已经探测了5GHz信道，并且已知5GHz可用。</li><li>此时用户在2.4GHz上没有开展会话。</li><li>此时当前信道的频谱负载均衡可用。</li><li>用户在最近10秒内已经发送了至少8次探测报文。</li></ul><p>在带宽均衡模式下，AP会试着去平衡两个Radio下的用户。AP会一直检测用户在11a和11g下的会话情况。</p><p>对于每一个在11g频率上会话的用户，AP会考虑在11a频率下的用户数量的”Band_Factor”，并使用该值去运算在2.4GHz和5GHz下，各个频道下的用户数量是否处于一种平衡状 态，并根据结果去控制之后接入的用户。</p><h2 id="LoadBalance的实现思路"><a href="#LoadBalance的实现思路" class="headerlink" title="LoadBalance的实现思路"></a>LoadBalance的实现思路</h2><p>负载均衡的目的是让用户在AP间均匀分布，以提高每个AP下的用户带宽。其实现的思路是：</p><ul><li>确定“RFneighborhood”,或者说一组邻近的AP，用户们可以再他们之间任意选择连接。</li><li>确定在“RFneighborhood”中负载过载的AP。</li><li>转移视图连接到当前负载过载的AP的用户到邻近的AP中。</li></ul><h2 id="计算“RF-neighborhood”的方法"><a href="#计算“RF-neighborhood”的方法" class="headerlink" title="计算“RF neighborhood”的方法"></a>计算“RF neighborhood”的方法</h2><ol><li>AP支持扫描周围信道信息，用于寻找邻近AP。</li><li>找到邻近AP后，则可以定义AP2是AP1的“RFneighborhood”，则用户可以同时连接AP1和AP2。</li><li>AP记录接收到的每一个用户的探测（Probe），并使用RSSI来权衡“用户密度”，同时，记录接收到的邻近AP的信息（Beacon）。</li><li>AC通过各个AP上报的Probe、Beacon以及“用户密度”来综合判断是否需要引导用户切换到其他AP上。</li></ol><h2 id="Auto-Channel-and-PowerManagement的实现思路"><a href="#Auto-Channel-and-PowerManagement的实现思路" class="headerlink" title="Auto Channel and PowerManagement的实现思路"></a>Auto Channel and PowerManagement的实现思路</h2><ol><li>AC向AP下发信道监控配置参数</li><li>AP进行信道监控，包括对各信道（包括工作信道）的测量，收集各相邻AP的发送功率。</li><li>AP通过RF算法，确认是否需要信道跳转和发射功率调整。</li><li>AP向AC上报预调整信道参数和发射功率。</li><li>AC裁决AP预调整参数是否接受，并配合AP执行。</li></ol><h1 id="在AP进行信道监控的过程中，主要需要AP检测一下参数"><a href="#在AP进行信道监控的过程中，主要需要AP检测一下参数" class="headerlink" title="在AP进行信道监控的过程中，主要需要AP检测一下参数"></a>在AP进行信道监控的过程中，主要需要AP检测一下参数</h1><p>Coverage Index: 覆盖指数，perchannel，用于指明该信道的覆盖情况，用于判断该信道是否被AP（不区分敌我）覆盖，以及覆盖程度（轻度覆盖／过份覆盖）。</p><p>该指标 为AP监听到的工作在该信道上所有AP（可包括监听AP本身，如果该信道为该监听AP的工作信道）的SNR值总和。</p><p>Interference Index: 干扰指数，perchannel，用于指明该信道的同信道干扰情况。<br>该指标为AP监听到的所有AP（不包括监听AP本身）的SNR的总和。 </p><p>Co-channel InterferenceIndex: 邻频干扰指数，perchannel，用于指明该信道的邻频干扰情况。<br>该指标为AP监听到的相邻频段的AP的SNR的总和。各AP按照起工作信道与该目标信道的间隔x进行加权统计。</p><h1 id="AP将根据以下原因进行信道变更预调"><a href="#AP将根据以下原因进行信道变更预调" class="headerlink" title="AP将根据以下原因进行信道变更预调"></a>AP将根据以下原因进行信道变更预调</h1><ol><li>雷达规避。</li><li>信道误码率高。</li><li>非法信道（不符合国家码规则）。</li><li>非法AP检测。</li><li>信道优化选择。</li></ol><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>通过Band Steering、Load Balance和AutoChannel and Power Management三种SRM管理功能，能有效的优化Wi-Fi无线网络并提高用户的使用流量。 </p>]]></content>
      
      
      <categories>
          
          <category> wifi模块 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wifi </tag>
            
            <tag> 双频 </tag>
            
            <tag> band steering </tag>
            
            <tag> land balance </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>802.11协议帧基本格式</title>
      <link href="/2019/08/25/802-11%E5%8D%8F%E8%AE%AE%E5%B8%A7%E5%9F%BA%E6%9C%AC%E6%A0%BC%E5%BC%8F/"/>
      <url>/2019/08/25/802-11%E5%8D%8F%E8%AE%AE%E5%B8%A7%E5%9F%BA%E6%9C%AC%E6%A0%BC%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p><img src="2019082501.JPG" alt></p><h1 id="MSDU和MPDU"><a href="#MSDU和MPDU" class="headerlink" title="MSDU和MPDU"></a>MSDU和MPDU</h1><p>MSDU(MAC Service Data Unit): MAC服务数据单元 </p><p>MPDU(MAC Protocol Data Unit): MAC协议数据单元</p><p>MSDU是Ethernet报文，经过添加完整性校验MIC、分帧、省电模 式下报文缓存、加密、序列号赋值、CRC校验、MAC头 之后成为MPDU</p><p>MPDU就是 指的经过802.11协议封装过的数据帧 </p><p>A-MPDU：即将多个MPDU聚合为一个A-MPDU，只保留一个PHY头，删除其余MPDU的PHY头，减少了传输每个MPDU 的PHY头的附加信息，同时也减少了ACK帧的数目，从而降低了协议的负荷，有效的提高网络吞吐量。</p><p>A-MSDU：该特性实现了将多个MSDU组合成一个MSDU发送，与A-MPDU类似，通过聚合，A-MSDU减少了传输每个 MSDU的MAC头的附加信息，提高了MAC层的传输效率.通常，当AP 或无线客户端从协议栈收到报文（MSDU）时，会打上Ethernet报文头，称之为AMSDUSubframe，而A-MSDU技术旨在将若干个A-MSDUSubframe按照802.11协议格 式，封装成一个MPDU报文单元，即是A_MPDUSubframe</p><hr><blockquote><p>TO BE CONTINUED!</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> wifi模块 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wifi </tag>
            
            <tag> 802.11 </tag>
            
            <tag> 协议帧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>802.11a/b/g/n/ac速率表</title>
      <link href="/2019/08/24/802-11a-b-g-n-ac%E9%80%9F%E7%8E%87%E8%A1%A8/"/>
      <url>/2019/08/24/802-11a-b-g-n-ac%E9%80%9F%E7%8E%87%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<p><img src="2019082402.jpg" alt="2019082402.jpg"></p><h1 id="802-11b"><a href="#802-11b" class="headerlink" title="802.11b"></a>802.11b</h1><blockquote><p>最高速率11Mbps</p></blockquote><table><thead><tr><th style="text-align:center">调制方式</th><th style="text-align:center">速率(Mbps)</th></tr></thead><tbody><tr><td style="text-align:center">DSSS</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">DSSS</td><td style="text-align:center">2</td></tr><tr><td style="text-align:center">CCK</td><td style="text-align:center">5.5</td></tr><tr><td style="text-align:center">CCK</td><td style="text-align:center">11</td></tr></tbody></table><h1 id="802-11a-g"><a href="#802-11a-g" class="headerlink" title="802.11a/g"></a>802.11a/g</h1><blockquote><p>最高速率54Mbps</p></blockquote><table><thead><tr><th style="text-align:center">调制方式</th><th style="text-align:center">码率</th><th style="text-align:center">速率(Mbps)</th></tr></thead><tbody><tr><td style="text-align:center">BSPK</td><td style="text-align:center">1/2</td><td style="text-align:center">6</td></tr><tr><td style="text-align:center">BPSK</td><td style="text-align:center">3/4</td><td style="text-align:center">9</td></tr><tr><td style="text-align:center">QPSK</td><td style="text-align:center">1/2</td><td style="text-align:center">12</td></tr><tr><td style="text-align:center">QPSK</td><td style="text-align:center">3/4</td><td style="text-align:center">18</td></tr><tr><td style="text-align:center">16-QAM</td><td style="text-align:center">1/2</td><td style="text-align:center">24</td></tr><tr><td style="text-align:center">16-QAM</td><td style="text-align:center">3/4</td><td style="text-align:center">36</td></tr><tr><td style="text-align:center">64-QAM</td><td style="text-align:center">2/3</td><td style="text-align:center">48</td></tr><tr><td style="text-align:center">64-QAM</td><td style="text-align:center">3/4</td><td style="text-align:center">54</td></tr></tbody></table><h1 id="802-11n"><a href="#802-11n" class="headerlink" title="802.11n"></a>802.11n</h1><blockquote><p>HT40单流最高速率150Mbps HT40 4*4 MIMO速率最高600Mbps</p></blockquote><table><thead><tr><th style="text-align:center">空间流</th><th style="text-align:center">MCS</th><th style="text-align:center">调制方式</th><th style="text-align:center">码率</th><th style="text-align:center">HT20 GI=800ns</th><th style="text-align:center">HT20 GI=400ns</th><th style="text-align:center">HT40 GI=800ns</th><th style="text-align:center">HT20 GI=400ns</th></tr></thead><tbody><tr><td style="text-align:center">1x1</td><td style="text-align:center">0</td><td style="text-align:center">BPSK</td><td style="text-align:center">1/2</td><td style="text-align:center">6.5</td><td style="text-align:center">7.2</td><td style="text-align:center">13.5</td><td style="text-align:center">15.0</td></tr><tr><td style="text-align:center">1x1</td><td style="text-align:center">1</td><td style="text-align:center">QPSK</td><td style="text-align:center">1/2</td><td style="text-align:center">13.0</td><td style="text-align:center">14.2</td><td style="text-align:center">27.0</td><td style="text-align:center">30.0</td></tr><tr><td style="text-align:center">1x1</td><td style="text-align:center">2</td><td style="text-align:center">QPSK</td><td style="text-align:center">3/4</td><td style="text-align:center">19.5</td><td style="text-align:center">21.7</td><td style="text-align:center">40.5</td><td style="text-align:center">45.0</td></tr><tr><td style="text-align:center">1x1</td><td style="text-align:center">3</td><td style="text-align:center">16-QAM</td><td style="text-align:center">1/2</td><td style="text-align:center">26.0</td><td style="text-align:center">28.9</td><td style="text-align:center">54.0</td><td style="text-align:center">60.0</td></tr><tr><td style="text-align:center">1x1</td><td style="text-align:center">4</td><td style="text-align:center">16-QAM</td><td style="text-align:center">3/4</td><td style="text-align:center">39.0</td><td style="text-align:center">43.3</td><td style="text-align:center">81.0</td><td style="text-align:center">90.0</td></tr><tr><td style="text-align:center">1x1</td><td style="text-align:center">5</td><td style="text-align:center">64-QAM</td><td style="text-align:center">2/3</td><td style="text-align:center">52.0</td><td style="text-align:center">57.8</td><td style="text-align:center">108.0</td><td style="text-align:center">120.0</td></tr><tr><td style="text-align:center">1x1</td><td style="text-align:center">6</td><td style="text-align:center">64-QAM</td><td style="text-align:center">3/4</td><td style="text-align:center">58.5</td><td style="text-align:center">65.0</td><td style="text-align:center">121.5</td><td style="text-align:center">135.0</td></tr><tr><td style="text-align:center">1x1</td><td style="text-align:center">7</td><td style="text-align:center">64-QAM</td><td style="text-align:center">5/6</td><td style="text-align:center">65.0</td><td style="text-align:center">72.2</td><td style="text-align:center">135.0</td><td style="text-align:center">150.0</td></tr><tr><td style="text-align:center">2x2</td><td style="text-align:center">8</td><td style="text-align:center">BPSK</td><td style="text-align:center">1/2</td><td style="text-align:center">13.0</td><td style="text-align:center">14.4</td><td style="text-align:center">27.0</td><td style="text-align:center">30</td></tr><tr><td style="text-align:center">2x2</td><td style="text-align:center">9</td><td style="text-align:center">QPSK</td><td style="text-align:center">1/2</td><td style="text-align:center">26.0</td><td style="text-align:center">28.9</td><td style="text-align:center">54.0</td><td style="text-align:center">60</td></tr><tr><td style="text-align:center">2x2</td><td style="text-align:center">10</td><td style="text-align:center">QPSK</td><td style="text-align:center">3/4</td><td style="text-align:center">39.0</td><td style="text-align:center">43.3</td><td style="text-align:center">81.0</td><td style="text-align:center">90</td></tr><tr><td style="text-align:center">2x2</td><td style="text-align:center">11</td><td style="text-align:center">16-QAM</td><td style="text-align:center">1/2</td><td style="text-align:center">52.0</td><td style="text-align:center">57.8</td><td style="text-align:center">108.0</td><td style="text-align:center">120</td></tr><tr><td style="text-align:center">2x2</td><td style="text-align:center">12</td><td style="text-align:center">16-QAM</td><td style="text-align:center">3/4</td><td style="text-align:center">78.0</td><td style="text-align:center">86.7</td><td style="text-align:center">162.0</td><td style="text-align:center">180</td></tr><tr><td style="text-align:center">2x2</td><td style="text-align:center">13</td><td style="text-align:center">64-QAM</td><td style="text-align:center">2/3</td><td style="text-align:center">104.0</td><td style="text-align:center">115.6</td><td style="text-align:center">216.0</td><td style="text-align:center">240</td></tr><tr><td style="text-align:center">2x2</td><td style="text-align:center">14</td><td style="text-align:center">64-QAM</td><td style="text-align:center">3/4</td><td style="text-align:center">117.0</td><td style="text-align:center">130.0</td><td style="text-align:center">243.0</td><td style="text-align:center">270</td></tr><tr><td style="text-align:center">2x2</td><td style="text-align:center">15</td><td style="text-align:center">64-QAM</td><td style="text-align:center">5/6</td><td style="text-align:center">130.0</td><td style="text-align:center">144.4</td><td style="text-align:center">270.0</td><td style="text-align:center">300</td></tr><tr><td style="text-align:center">3x3</td><td style="text-align:center">16</td><td style="text-align:center">BPSK</td><td style="text-align:center">1/2</td><td style="text-align:center">19.5</td><td style="text-align:center">21.7</td><td style="text-align:center">40.5</td><td style="text-align:center">45</td></tr><tr><td style="text-align:center">3x3</td><td style="text-align:center">17</td><td style="text-align:center">QPSK</td><td style="text-align:center">1/2</td><td style="text-align:center">39.0</td><td style="text-align:center">43.3</td><td style="text-align:center">81.0</td><td style="text-align:center">90</td></tr><tr><td style="text-align:center">3x3</td><td style="text-align:center">18</td><td style="text-align:center">QPSK</td><td style="text-align:center">3/4</td><td style="text-align:center">58.5</td><td style="text-align:center">65.0</td><td style="text-align:center">121.5</td><td style="text-align:center">135</td></tr><tr><td style="text-align:center">3x3</td><td style="text-align:center">19</td><td style="text-align:center">16-QAM</td><td style="text-align:center">1/2</td><td style="text-align:center">78.0</td><td style="text-align:center">86.7</td><td style="text-align:center">162.0</td><td style="text-align:center">180</td></tr><tr><td style="text-align:center">3x3</td><td style="text-align:center">20</td><td style="text-align:center">16-QAM</td><td style="text-align:center">3/4</td><td style="text-align:center">117.0</td><td style="text-align:center">130.0</td><td style="text-align:center">243.0</td><td style="text-align:center">270</td></tr><tr><td style="text-align:center">3x3</td><td style="text-align:center">21</td><td style="text-align:center">64-QAM</td><td style="text-align:center">2/3</td><td style="text-align:center">156.0</td><td style="text-align:center">173.3</td><td style="text-align:center">324.0</td><td style="text-align:center">360</td></tr><tr><td style="text-align:center">3x3</td><td style="text-align:center">22</td><td style="text-align:center">64-QAM</td><td style="text-align:center">3/4</td><td style="text-align:center">175.5</td><td style="text-align:center">195.0</td><td style="text-align:center">364.5</td><td style="text-align:center">405</td></tr><tr><td style="text-align:center">3x3</td><td style="text-align:center">23</td><td style="text-align:center">64-QAM</td><td style="text-align:center">5/6</td><td style="text-align:center">195.0</td><td style="text-align:center">216.7</td><td style="text-align:center">405.0</td><td style="text-align:center">450</td></tr><tr><td style="text-align:center">4x4</td><td style="text-align:center">24</td><td style="text-align:center">BPSK</td><td style="text-align:center">1/2</td><td style="text-align:center">26.0</td><td style="text-align:center">28.9</td><td style="text-align:center">54.0</td><td style="text-align:center">60</td></tr><tr><td style="text-align:center">4x4</td><td style="text-align:center">25</td><td style="text-align:center">QPSK</td><td style="text-align:center">1/2</td><td style="text-align:center">52.0</td><td style="text-align:center">57.8</td><td style="text-align:center">108.0</td><td style="text-align:center">120</td></tr><tr><td style="text-align:center">4x4</td><td style="text-align:center">26</td><td style="text-align:center">QPSK</td><td style="text-align:center">3/4</td><td style="text-align:center">78.0</td><td style="text-align:center">86.7</td><td style="text-align:center">162.0</td><td style="text-align:center">180</td></tr><tr><td style="text-align:center">4x4</td><td style="text-align:center">27</td><td style="text-align:center">16-QAM</td><td style="text-align:center">1/2</td><td style="text-align:center">104.0</td><td style="text-align:center">115.6</td><td style="text-align:center">216.0</td><td style="text-align:center">240</td></tr><tr><td style="text-align:center">4x4</td><td style="text-align:center">28</td><td style="text-align:center">16-QAM</td><td style="text-align:center">3/4</td><td style="text-align:center">156.0</td><td style="text-align:center">173.3</td><td style="text-align:center">324.0</td><td style="text-align:center">360</td></tr><tr><td style="text-align:center">4x4</td><td style="text-align:center">29</td><td style="text-align:center">64-QAM</td><td style="text-align:center">2/3</td><td style="text-align:center">208.0</td><td style="text-align:center">231.1</td><td style="text-align:center">432.0</td><td style="text-align:center">480</td></tr><tr><td style="text-align:center">4x4</td><td style="text-align:center">30</td><td style="text-align:center">64-QAM</td><td style="text-align:center">3/4</td><td style="text-align:center">234.0</td><td style="text-align:center">260.0</td><td style="text-align:center">486.0</td><td style="text-align:center">540</td></tr><tr><td style="text-align:center">4x4</td><td style="text-align:center">31</td><td style="text-align:center">64-QAM</td><td style="text-align:center">5/6</td><td style="text-align:center">260.0</td><td style="text-align:center">188.9</td><td style="text-align:center">540.0</td><td style="text-align:center">600</td></tr></tbody></table><h1 id="802-11ac-80M"><a href="#802-11ac-80M" class="headerlink" title="802.11ac(80M)"></a>802.11ac(80M)</h1><blockquote><p>单流最高速率433.3Mbps；8×8 MIMO（160M）最高速率6.928Gbps</p></blockquote><p><img src="80211AC速率1.jpg" alt><br><img src="80211AC速率2.jpg" alt><br><img src="80211AC速率3.jpg" alt><br><img src="80211AC速率4.jpg" alt><br><img src="80211AC速率5.jpg" alt><br><img src="80211AC速率6.jpg" alt><br><img src="80211AC速率7.jpg" alt><br><img src="80211AC速率8.jpg" alt><br><img src="80211AC速率9.jpg" alt><br><img src="80211AC速率10.jpg" alt><br><img src="80211AC速率11.jpg" alt></p>]]></content>
      
      
      <categories>
          
          <category> wifi模块 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wifi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wifi子帧对照表</title>
      <link href="/2019/08/24/wifi%E5%AD%90%E5%B8%A7%E5%AF%B9%E7%85%A7%E8%A1%A8/"/>
      <url>/2019/08/24/wifi%E5%AD%90%E5%B8%A7%E5%AF%B9%E7%85%A7%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<p><img src="2019082401.jpg" alt="2019082401.png"></p><table><thead><tr><th style="text-align:left">帧类型/子类型</th><th style="text-align:left">过滤器语法</th></tr></thead><tbody><tr><td style="text-align:left">Management frame</td><td style="text-align:left">wlan.fc.type == 0</td></tr><tr><td style="text-align:left">Control frame</td><td style="text-align:left">Control frame wlan.fc.type == 1</td></tr><tr><td style="text-align:left">Data frame</td><td style="text-align:left">wlan.fc.type == 2</td></tr><tr><td style="text-align:left">Association request</td><td style="text-align:left">wlan.fc.type_subtype == 0x00</td></tr><tr><td style="text-align:left">Association response</td><td style="text-align:left">wlan.fc.type_subtype == 0x01</td></tr><tr><td style="text-align:left">Reassociation request</td><td style="text-align:left">wlan.fc.type_subtype == 0x02</td></tr><tr><td style="text-align:left">Reassociation response</td><td style="text-align:left">wlan.fc.type_subtype == 0x03</td></tr><tr><td style="text-align:left">Probe request</td><td style="text-align:left">wlan.fc.type_subtype == 0x04</td></tr><tr><td style="text-align:left">Probe response</td><td style="text-align:left">wlan.fc.type_subtype == 0x05</td></tr><tr><td style="text-align:left">Beacon</td><td style="text-align:left">wlan.fc.type_subtype == 0x08</td></tr><tr><td style="text-align:left">Disassociate</td><td style="text-align:left">wlan.fc.type_subtype == 0x0A</td></tr><tr><td style="text-align:left">Authentication</td><td style="text-align:left">wlan.fc.type_subtype == 0x0B</td></tr><tr><td style="text-align:left">Deauthentication</td><td style="text-align:left">wlan.fc.type_subtype == 0x0C</td></tr><tr><td style="text-align:left">Action frame</td><td style="text-align:left">wlan.fc.type_subtype == 0x0D</td></tr><tr><td style="text-align:left">Block ACK requests</td><td style="text-align:left">wlan.fc.type_subtype == 0x18</td></tr><tr><td style="text-align:left">Block ACK</td><td style="text-align:left">wlan.fc.type_subtype == 0x19</td></tr><tr><td style="text-align:left">Power save poll</td><td style="text-align:left">wlan.fc.type_subtype == 0x1A</td></tr><tr><td style="text-align:left">Request to send</td><td style="text-align:left">wlan.fc.type_subtype == 0x1B</td></tr><tr><td style="text-align:left">Clear to send</td><td style="text-align:left">wlan.fc.type_subtype == 0x1C</td></tr><tr><td style="text-align:left">ACK</td><td style="text-align:left">wlan.fc.type_subtype == 0x1D</td></tr><tr><td style="text-align:left">Contention free period end</td><td style="text-align:left">wlan.fc.type_subtype == 0x1E</td></tr><tr><td style="text-align:left">NULL data</td><td style="text-align:left">wlan.fc.type_subtype == 0x24</td></tr><tr><td style="text-align:left">QoS data</td><td style="text-align:left">QoS data wlan.fc.type_subtype == 0x28</td></tr><tr><td style="text-align:left">Null QoS data</td><td style="text-align:left">wlan.fc.type_subtype == 0x2C</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> wifi模块 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wifi </tag>
            
            <tag> wireshark </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20190821随笔</title>
      <link href="/2019/08/21/20190821%E9%9A%8F%E7%AC%94/"/>
      <url>/2019/08/21/20190821%E9%9A%8F%E7%AC%94/</url>
      
        <content type="html"><![CDATA[<p><img src="2019082101.jpg" alt></p><h1 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h1><p>​    怎么开始说呢？我入职龙旗快3个月了，这3个月了首先承认我学到了很多，有关android，有关wifi上层，有关WFD等等。尽管在公司里wifi的工作不被重视，因为高通在wifi的高度集成，使得细节部分不会给外界太多的暴露。有些难解的问题只能询问高通，这也是没有办法的事。但是wifi的事很多，每天都是从早忙到晚，像只小蜜蜂一样。</p><p>​    C3J的项目快要封包了，还有10天左右的时间，又遇上了问题难以解决，每晚的加班，也变成了家常便饭。唉</p><h1 id="情感"><a href="#情感" class="headerlink" title="情感"></a>情感</h1><p>​    这段日子，我本以为我可以过的很洒脱。可结果呢活得越来越累。跳了槽，涨了薪，买了房，本来以为只要努力就会得到想要的生活，可是压力真的是越来越大。天天加班到晚上11点，回到家躺在床上尽管很累，但是就是睡不着。周六放弃了所谓的社交，因为穷啊，也是因为懒的社交。我本以为我可以自己赚钱自己花，让我父母过上好日子，此生足矣。没必要再找一个女人走进我的生活，想来真的可笑，不知从什么时候我开始害怕孤独，害怕一个人的日子。我频繁的发朋友圈，搞笑的有趣的就是想有个人能停下来点个赞，留下一句评论，可以和我说说话。可是，这也成了难以得到的奢侈品。想来以后总会习惯这样的日子的。呵，一定会习惯的！</p>]]></content>
      
      
      <categories>
          
          <category> 生活点滴 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 时光小记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git和repo教程</title>
      <link href="/2019/08/17/git%E5%92%8Crepo%E6%95%99%E7%A8%8B/"/>
      <url>/2019/08/17/git%E5%92%8Crepo%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p><img src="2019081702.jpg" alt="2019081702.jpg"></p><h1 id="git常用命令"><a href="#git常用命令" class="headerlink" title="git常用命令"></a>git常用命令</h1><h2 id="git-clone"><a href="#git-clone" class="headerlink" title="git clone"></a>git clone</h2><p>git clone命令是代码克隆的命令，完整命令为：<br>git clone ssh://username@Gerrit-IP:29418/库名 –b 分支名<br>当我们在ssh配置文件 vi ~/.ssh/config 中添加了用户配置后，可以使用 git clone ssh://Gerrit-IP/库名 –b 分支名  下载</p><h2 id="git-pull"><a href="#git-pull" class="headerlink" title="git pull"></a>git pull</h2><p>更新代码仓库</p><h2 id="git-branch"><a href="#git-branch" class="headerlink" title="git branch"></a>git branch</h2><p>git branch 查看本地分支，可以使用git branch | grep XXX 进行有条件的查询<br>git branch –a 查看远程分支，类似的可以使用git branch -a| grep XXX 进行有条件的查询</p><h2 id="git-checkout"><a href="#git-checkout" class="headerlink" title="git checkout"></a>git checkout</h2><p>git 切换分支 远程分支名命令<br>git checkout –b 本地分支名 远程分支名 【远程分支名型如remotes/origin/master】</p><h2 id="git-add"><a href="#git-add" class="headerlink" title="git add"></a>git add</h2><p>git add是将修改提交到暂存区的命令常用的有：git add .和git add -u<br>git add . 是将所有变化提交到暂存区，包括修改内容及新文件<br>git add –u 是将修改过的文件提交到暂存区<br>通常情况下使用git add .即可</p><h2 id="git-rm"><a href="#git-rm" class="headerlink" title="git rm"></a>git rm</h2><p>git rm 文件名 git上删除文件的命令，和手动删除之后git add .一样，可以看做是省了一个git add .</p><h2 id="git-status"><a href="#git-status" class="headerlink" title="git status"></a>git status</h2><p>查看有哪些文件做了修改，或者是否有新增/删除</p><h2 id="git-diff"><a href="#git-diff" class="headerlink" title="git diff"></a>git diff</h2><p>git diff 不加参数默认比较工作区与暂存区<br>git diff [<commit-id>] [<commit-id>] 比较两个commit-id之间的差异</commit-id></commit-id></p><h2 id="git-commit"><a href="#git-commit" class="headerlink" title="git commit"></a>git commit</h2><p>git commit -m “” 提交到本地库“”中填写描述<br>git commit -amend 在上一笔提交的基础上追加提交<br>git commit -F commitmessge.txt     以此文件的格式提交描述</p><h2 id="git-log"><a href="#git-log" class="headerlink" title="git log"></a>git log</h2><p>查看提交log，包括commitid 提交描述 changeid</p><h2 id="git-merge"><a href="#git-merge" class="headerlink" title="git merge"></a>git merge</h2><p>git merge 远程分支名 将远程分支合入到当前工作分支<br>一般会有大量冲突，需要工程师手动解冲突<br>一般SCM升级基线使用，不建议工程师手动使用</p><h2 id="git-cherry-pick"><a href="#git-cherry-pick" class="headerlink" title="git cherry-pick"></a>git cherry-pick</h2><p>git cherry-pick [<commit-id>] 挑单命令，从另一个分支挑到现有分支<br>如果有冲突需要手动解冲突<br>解冲突后需要git commit手动进行提交<br>或者在git add .后使用git cherry-pick –continue继续</commit-id></p><h2 id="git-revert"><a href="#git-revert" class="headerlink" title="git revert"></a>git revert</h2><p>git revert [<commit-id>] 回退命令将某一笔提交会退掉<br>回退掉之后需要 git add . &amp; git commit进行提交</commit-id></p><h2 id="git-reset-amp-git-clean"><a href="#git-reset-amp-git-clean" class="headerlink" title="git reset &amp; git clean"></a>git reset &amp; git clean</h2><p>git reset –hard HEAD~1 是回退到某个版本的操作，这边有几个参数<br> –soft 不删除改动代码，撤销commit，不撤销add <strong>|</strong> –mixed 不删除改动代码，撤销commit，撤销add <strong>|</strong> –hard 删除改动代码，撤销commit，撤销add<br>HEAD~1表示回退一次提交同理可以使用HEAD~2， HEAD~3等等HEAD代表的是当前的节点版本<br>git clean 一般和git reset –hard 一起用，reset影响被track过的文件，clean清理没有被track过的文件<br>git clean –dfx<br>通常情况下修改代码前忘记更新了可以用这个方法处理，处理完了使用git pull</p><h2 id="git-push"><a href="#git-push" class="headerlink" title="git push"></a>git push</h2><p>常规命令： git push username@hostname:29418/projects branch1:refs/for/branch2<br>查看仓库下的.git/config<br>例如：<br>[remote “origin”]<br>​          url = ssh://172.16.16.121/qc-repository/zprojects<br>​          fetch = +refs/heads/<em>:refs/remotes/origin/</em><br>username@hostname:29418/projects 这一块参照url可以用origin替换<br>branch1代表本地分支如果是当前指向的工作空间可以用HEAD代替<br>branch2代表远程分支当同一个提交需要往两个不同的分支上提交的时候直接切换这边的分支名即可达成<br>简化后的形式为：git push origin HEAD:refs/for/branch2<br>git push的两种方式<br>HEAD:refs/for/branch2<br>使用refs/for/branch2提交会生成一条gerrit网址的链接需要reviewer合入<br>HEAD:refs/heads/branch2<br>使用refs/heads/branch2提交会直接推送到gerrit服务器上，很危险，一般不开放，需要发邮件向SCM申请</p><h1 id="repo常用命令"><a href="#repo常用命令" class="headerlink" title="repo常用命令"></a>repo常用命令</h1><ol><li><p>Android 使用 Git 作为代码管理工具，使用 Gerrit 进行代码审核以便更好的对代码进行集中式管理，还开了 Repo 命令行工具，对 Git 部分命令封装，将百多个 Git 库有效的进行组织。</p></li><li><p>REPO根据manifest文件进行pull/push代码。</p></li><li><p>Manifest文件被称为清单文件个清单库可以包含多个清单文件和多个分支，每个清单文件和分支都有对应的版本，清单文件以xml格式组织的，放在.repo/manifests这个库里面</p></li><li><p>remote元素：定义远程版本库caf以及地址172.16.<em>.</em></p></li><li><p>default元素：设置远程版本库caf以及默认分支master。</p></li><li><p>project元素：path属性表示在工作区克隆的位置，name属性表示该GIT库的远程版本库的相对路径。project元素的子元素copyfile，定义了项目克隆后的一个附件动作，从src拷贝文件到dest</p></li></ol><h2 id="repo-init"><a href="#repo-init" class="headerlink" title="repo init"></a>repo init</h2><p>Repo init 的完整命令如下：<br>repo init -u ssh://username@Gerrit-IP:29418/manifest -b branchname -m manifest.xml<br>同一个清单仓库分支中切换其他的xml文件，使用如下命令：<br>repo init -m manifest.xml</p><h2 id="repo-sync"><a href="#repo-sync" class="headerlink" title="repo sync"></a>repo sync</h2><p>repo sync 同步代码<br>repo sync project 可以选择只同步project库<br>repo sync  -j$Thread 多线程更新<br>repo sync –dx 把代码回退至manifest清单文件中指定的revision并clean<br>repo sync –f 强制更新<br>以上命令可以拼接，例如：repo sync -c –no-tags –j8</p><h2 id="repo-start-branch-–all"><a href="#repo-start-branch-–all" class="headerlink" title="repo start branch –all"></a>repo start branch –all</h2><p>给所有git库创建基于当前工作区分支的本地分支</p><h2 id="repo-checkout-branch"><a href="#repo-checkout-branch" class="headerlink" title="repo checkout branch"></a>repo checkout branch</h2><p>所有git库分支切换至branch</p><h2 id="repo-branches"><a href="#repo-branches" class="headerlink" title="repo branches"></a>repo branches</h2><p>查看所有git库分支</p><h2 id="repo-diff-project"><a href="#repo-diff-project" class="headerlink" title="repo diff [project]"></a>repo diff [project]</h2><p>查看工作区差异</p><h2 id="repo-stage-i"><a href="#repo-stage-i" class="headerlink" title="repo stage -i"></a>repo stage -i</h2><p>相当于给所有库git add -I</p><h2 id="repo-prune"><a href="#repo-prune" class="headerlink" title="repo prune"></a>repo prune</h2><p>删除已经合并的分支</p><h2 id="repo-abandon-branch"><a href="#repo-abandon-branch" class="headerlink" title="repo abandon branch"></a>repo abandon branch</h2><p>删除指定分支</p><h2 id="repo-status"><a href="#repo-status" class="headerlink" title="repo status"></a>repo status</h2><p>查看文件状态</p><h2 id="repo-forall-c-‘command’"><a href="#repo-forall-c-‘command’" class="headerlink" title="repo forall -c ‘command’"></a>repo forall -c ‘command’</h2><p>迭代器，在所有git 库中执行command命令<br>repo forall -c ‘ID=’git log –before=”2019-08-08 12:00” –after=”2019-08-08 13:00” -1 –pretty=format:”%H”‘; git reset –hard $ID’<br>这条指令是将所有的git库回退到某一天的代码</p><h2 id="repo-upload"><a href="#repo-upload" class="headerlink" title="repo upload"></a>repo upload</h2><p>把代码推送至gerrit审核服务器</p>]]></content>
      
      
      <categories>
          
          <category> linux应用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> repo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[bug]打开wlan开关不显示扫描的SSID结果</title>
      <link href="/2019/08/17/bug-%E6%89%93%E5%BC%80wlan%E5%BC%80%E5%85%B3%E4%B8%8D%E6%98%BE%E7%A4%BA%E6%89%AB%E6%8F%8F%E7%9A%84SSID%E7%BB%93%E6%9E%9C/"/>
      <url>/2019/08/17/bug-%E6%89%93%E5%BC%80wlan%E5%BC%80%E5%85%B3%E4%B8%8D%E6%98%BE%E7%A4%BA%E6%89%AB%E6%8F%8F%E7%9A%84SSID%E7%BB%93%E6%9E%9C/</url>
      
        <content type="html"><![CDATA[<p><img src="2019081701.jpg" alt="2019081701.jpg"></p><h1 id="BUG详情"><a href="#BUG详情" class="headerlink" title="BUG详情"></a>BUG详情</h1><blockquote><p>关闭wlan开关再打开，WIFI列表不显示扫描结果，没有可选择的无线网络。</p></blockquote><h1 id="LOG分析"><a href="#LOG分析" class="headerlink" title="LOG分析"></a>LOG分析</h1><blockquote><p>根据所提供的bugreport的日志分析如下：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">08-16 09:43:27.519 1000 1396 4707 D WifiService: setWifiEnabled: <span class="literal">true</span> pid=2029, uid=1000, package=com.android.systemui</span><br><span class="line">08-16 09:43:27.520 1000 1396 4707 I chatty : uid=1000(system) Binder:1396_11 expire 1 line</span><br><span class="line">08-16 09:43:27.522 1000 1396 1396 V SettingsProvider: Notifying <span class="keyword">for</span> 0: content://settings/global/wifi_on</span><br><span class="line">08-16 09:43:27.523 wifi 834 834 W wificond: No pno scan started</span><br><span class="line">08-16 09:43:27.523 wifi 834 834 W wificond: Scheduled scan is not running!</span><br><span class="line"></span><br><span class="line">08-16 09:43:27.570 gps 942 966 I LOWI-8.6.0.44: [LOWIController] isWifiEnabled: Wifi is now disabled</span><br><span class="line">08-16 09:43:27.571 gps 942 32270 I LOWI-8.6.0.44: [LOWIScanResultReceiver] Thread terminate was requested</span><br><span class="line">08-16 09:43:27.572 gps 942 32271 I LOWI-8.6.0.44: [LOWIScanResultReceiver] Thread terminate was requested</span><br><span class="line"></span><br><span class="line">08-16 09:43:27.701 wifi 620 620 E android.hardware.wifi@1.0-service: Failed to open directory: Permission denied</span><br><span class="line">08-16 09:43:27.701 wifi 620 620 E android.hardware.wifi@1.0-service: Error occurred <span class="keyword">while</span> deleting old tombstone files</span><br><span class="line">08-16 09:43:27.701 wifi 620 620 E android.hardware.wifi@1.0-service: Error writing files to flash</span><br><span class="line"></span><br><span class="line">08-16 09:43:27.702 wifi 620 32272 I android.hardware.wifi@1.0-service: Legacy HAL stop complete callback received</span><br><span class="line">08-16 09:43:27.774 1046 835 32180 I OMX-VENC: venc_dev: stats: avg. fps 24.08, bitrate 159559</span><br><span class="line">08-16 09:43:27.906 wifi 620 620 I android.hardware.wifi@1.0-service: Wifi HAL stopped</span><br><span class="line">08-16 09:43:27.917 wifi 620 620 I android.hardware.wifi@1.0-service: Wifi HAL started</span><br><span class="line">08-16 09:43:27.937 1000 1396 1921 I chatty : uid=1000(system) WifiP2pService expire 12 lines</span><br><span class="line">08-16 09:43:28.018 wifi 32283 32283 I chatty : uid=1010(wifi) expire 305 lines</span><br><span class="line">08-16 09:43:28.067 gps 942 966 I LOWI-8.6.0.44: [LOWIController] isWifiEnabled: Wifi is now enabled</span><br><span class="line"></span><br><span class="line">08-16 09:43:28.077 gps 942 966 I CLD80211: lowi-server: initialized <span class="built_in">exit</span> socket pair</span><br><span class="line">08-16 09:43:28.078 gps 942 966 I CLD80211: lowi-server: nlctrl family id: 16 group: oem_msgs mcast_id: 25</span><br><span class="line">08-16 09:43:28.088 wifi 620 620 I android.hardware.wifi@1.0-service: Adding interface handle <span class="keyword">for</span> wlan0</span><br><span class="line">08-16 09:43:28.088 wifi 620 620 I android.hardware.wifi@1.0-service: Adding interface handle <span class="keyword">for</span> p2p0</span><br><span class="line">08-16 09:43:28.088 wifi 620 620 I android.hardware.wifi@1.0-service: Adding interface handle <span class="keyword">for</span> wlan1</span><br><span class="line">08-16 09:43:28.089 wifi 620 620 I android.hardware.wifi@1.0-service: Configured chip <span class="keyword">in</span> mode 0</span><br><span class="line">08-16 09:43:28.108 wifi 834 834 I wificond: create scanner <span class="keyword">for</span> interface with index: 29</span><br><span class="line">08-16 09:43:28.108 wifi 834 834 I wificond: subscribe scan result <span class="keyword">for</span> interface with index: 29</span><br><span class="line"></span><br><span class="line">08-16 09:43:28.171 1000 1396 1921 E WifiP2pService: Unhandled message &#123; when=-1ms what=131203 target=com.android.internal.util.StateMachine<span class="variable">$SmHandler</span> &#125;</span><br><span class="line">08-16 09:43:30.164 1000 1396 1920 I chatty : uid=1000(system) WifiScanningSer expire 10 lines</span><br><span class="line">08-16 09:43:30.166 gps 942 32285 I LOWI-8.6.0.44: [LOWI-Scan] lowi_close_record:Scan <span class="keyword">done</span> <span class="keyword">in</span> 329380726ms, 13 APs <span class="keyword">in</span> scan results</span><br><span class="line">08-16 09:43:28.178 1000 1396 1921 E WifiP2pService: Unhandled message &#123; when=-1ms what=131203 target=com.android.internal.util.StateMachine<span class="variable">$SmHandler</span> &#125;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">2019-08-16T09:43:28.172 - Set WiFi enabled</span><br><span class="line">2019-08-16T09:43:28.172 - Starting up WifiConnectivityManager</span><br><span class="line">2019-08-16T09:43:28.177 - startConnectivityScan: screenOn=true wifiState=transitioning scanImmediately=true wifiEnabled=true wifiConnectivityManagerEnabled=true</span><br><span class="line">2019-08-16T09:43:28.177 - handleConnectionStateChanged: state=disconnected</span><br><span class="line">2019-08-16T09:43:28.178 - scheduleWatchdogTimer</span><br><span class="line">2019-08-16T09:43:28.178 - startConnectivityScan: screenOn=true wifiState=disconnected scanImmediately=true wifiEnabled=true wifiConnectivityManagerEnabled=true</span><br><span class="line">2019-08-16T09:43:30.171 - AllSingleScanListener onResults: start network selection</span><br><span class="line">2019-08-16T09:43:30.172 - Disabled saved networks:</span><br><span class="line">2019-08-16T09:43:30.172 - "Xiaomi_7ED0_812F":3 reason=NETWORK_SELECTION_DISABLED_BY_WIFI_MANAGER, count=1; </span><br><span class="line">"Xiaomi_7ED0":4</span><br><span class="line"></span><br><span class="line">2019-08-16T09:43:30.173 - Networks filtered out due to low signal strength: MI-V6:48:4a:e9:f7:63:63(2.4GHz)-88 / MIOT:04:bd:88:59:fe:90(5GHz)-90 / MIPublic:04:bd:88:59:fe:91(5GHz)-89 / MI-V6:04:bd:88:59:fe:93(5GHz)-90 / MI-IPv6:04:bd:88:59:fe:94(5GHz)-89 / HUAWEI6677:3c:fa:43:31:fe:70(2.4GHz)-93 / HIWIFI RENREN:d4:ee:07:0c:70:66(2.4GHz)-92 / Xiaomi固件:8c:be:be:40:0d:1c(2.4GHz)-89 / MIOT:94:b4:0f:06:6a:10(5GHz)-90 / MIPublic:94:b4:0f:06:6a:11(5GHz)-89 / MI-IPv6:94:b4:0f:06:6a:14(5GHz)-88 / </span><br><span class="line">2019-08-16T09:43:30.173 - About to run SavedNetworkEvaluator :</span><br><span class="line">2019-08-16T09:43:30.174 - </span><br><span class="line">[ HWCS 5c:c3:07:63:aa:44 RSSI:-73 ] RSSI score: 48, Secure network bonus: 80, ## Total score: 128</span><br><span class="line"></span><br><span class="line">2019-08-16T09:43:30.174 - SavedNetworkEvaluator selects "HWCS":0 : 5c:c3:07:63:aa:44</span><br><span class="line">2019-08-16T09:43:30.175 - AllSingleScanListener: WNS candidate-"HWCS"</span><br><span class="line">2019-08-16T09:43:30.175 - connectToNetwork: Connect to "HWCS":any from Disconnected</span><br><span class="line">2019-08-16T09:43:35.359 - handleConnectionStateChanged: state=transitioning</span><br><span class="line">2019-08-16T09:43:35.359 - startConnectivityScan: screenOn=true wifiState=transitioning scanImmediately=false wifiEnabled=true wifiConnectivityManagerEnabled=true</span><br></pre></td></tr></table></figure><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><blockquote><p>打开wifi后，立即触发连接了之前保存过的网络，而且信号-75,信号很弱，一直连接不上。所以连接过程较长，而<strong>在连接过程中是禁止扫描的</strong>，所以一直刷新不出来扫描结果</p></blockquote><h1 id="后续验证方案"><a href="#后续验证方案" class="headerlink" title="后续验证方案"></a>后续验证方案</h1><blockquote><p>可以使用下面两种方法验证是否是上述原因：</p></blockquote><ol><li>保存一个信号好的网络进行断开以及打开的操作</li><li>删除已保存的网络进行尝试</li></ol>]]></content>
      
      
      <categories>
          
          <category> BUG记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wifi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>android P wifi模块分析之wifi扫描</title>
      <link href="/2019/08/09/android-P-wifi%E6%A8%A1%E5%9D%97%E5%88%86%E6%9E%90%E4%B9%8Bwifi%E6%89%AB%E6%8F%8F/"/>
      <url>/2019/08/09/android-P-wifi%E6%A8%A1%E5%9D%97%E5%88%86%E6%9E%90%E4%B9%8Bwifi%E6%89%AB%E6%8F%8F/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>android P wifi模块分析之wifi启动</title>
      <link href="/2019/07/06/android-P-wifi%E6%A8%A1%E5%9D%97%E5%88%86%E6%9E%90%E4%B9%8Bwifi%E5%90%AF%E5%8A%A8/"/>
      <url>/2019/07/06/android-P-wifi%E6%A8%A1%E5%9D%97%E5%88%86%E6%9E%90%E4%B9%8Bwifi%E5%90%AF%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<p><img src="20190706_04.jpg" alt="20190706_04"></p><h1 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h1><p><img src="wifi start流程图.jpg" alt="wifi start 流程图"></p><h1 id="代码具体流程"><a href="#代码具体流程" class="headerlink" title="代码具体流程"></a>代码具体流程</h1><h2 id="app应用层"><a href="#app应用层" class="headerlink" title="app应用层"></a>app应用层</h2><h3 id="WifiSettings-java"><a href="#WifiSettings-java" class="headerlink" title="WifiSettings.java"></a>WifiSettings.java</h3><blockquote><p>packages/apps/settings/WifiSettings.java<br>在onStart()创建一个WifiEnabler对象，实现wifi开关功能。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStart</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onStart();</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// On/off switch is hidden for Setup Wizard (returns null)</span></span><br><span class="line">    mWifiEnabler = createWifiEnabler();</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> (mIsRestricted) &#123;</span><br><span class="line">        restrictUi();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    onWifiStateChanged(mWifiManager.getWifiState());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> WifiEnabler <span class="title">createWifiEnabler</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> SettingsActivity activity = (SettingsActivity) getActivity();</span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">new</span> WifiEnabler(activity, <span class="keyword">new</span> SwitchBarController(activity.getSwitchBar()),</span><br><span class="line">            mMetricsFeatureProvider);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="WifiEnabler-java"><a href="#WifiEnabler-java" class="headerlink" title="WifiEnabler.java"></a>WifiEnabler.java</h3><blockquote><p>packages/apps/settings/WifiEnabler.java<br>开启Wifi开关变会有下面的操作。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onSwitchToggled</span><span class="params">(<span class="keyword">boolean</span> isChecked)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//Do nothing if called as a result of a state machine event</span></span><br><span class="line">    <span class="keyword">if</span> (mStateMachineEvent) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// Show toast message if Wi-Fi is not allowed in airplane mode</span></span><br><span class="line">    <span class="keyword">if</span> (isChecked &amp;&amp; !WirelessUtils.isRadioAllowed(mContext, Settings.Global.RADIO_WIFI)) &#123;</span><br><span class="line">        Toast.makeText(mContext, R.string.wifi_in_airplane_mode, Toast.LENGTH_SHORT).show();</span><br><span class="line">        <span class="comment">// Reset switch to off. No infinite check/listener loop.</span></span><br><span class="line">        mSwitchWidget.setChecked(<span class="keyword">false</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> (isChecked) &#123;</span><br><span class="line">        mMetricsFeatureProvider.action(mContext, MetricsEvent.ACTION_WIFI_ON);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// Log if user was connected at the time of switching off.</span></span><br><span class="line">        mMetricsFeatureProvider.action(mContext, MetricsEvent.ACTION_WIFI_OFF,</span><br><span class="line">        mConnected.get());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!mWifiManager.setWifiEnabled(isChecked)) &#123;</span><br><span class="line">        <span class="comment">// Error</span></span><br><span class="line">        mSwitchWidget.setEnabled(<span class="keyword">true</span>);</span><br><span class="line">        Toast.makeText(mContext, R.string.wifi_error, Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>点击开关会调用mWifiManager.setWifiEnabled。</p></blockquote><h2 id="Java框架层"><a href="#Java框架层" class="headerlink" title="Java框架层"></a>Java框架层</h2><h3 id="WifiManager-java"><a href="#WifiManager-java" class="headerlink" title="WifiManager.java"></a>WifiManager.java</h3><blockquote><p>frameworks/base/wifi/java/android/net/wifi/WifiManager.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">setWifiEnabled</span><span class="params">(<span class="keyword">boolean</span> enabled)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mService.setWifiEnabled(mContext.getOpPackageName(), enabled);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">        <span class="keyword">throw</span> e.rethrowFromSystemServer();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="IWifiManager-aidl"><a href="#IWifiManager-aidl" class="headerlink" title="IWifiManager.aidl"></a>IWifiManager.aidl</h3><blockquote><p>frameworks/base/wifi/java/android/net/wifi/IWifiManager.aidl</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">boolean setWifiEnabled(String packageName, boolean enable);</span><br></pre></td></tr></table></figure><h3 id="WifiSeviceImpl-java"><a href="#WifiSeviceImpl-java" class="headerlink" title="WifiSeviceImpl.java"></a>WifiSeviceImpl.java</h3><blockquote><p>frameworks/opt/net/wifi/service/java/com/android/server/wifi/WifiSeviceImpl.java</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">boolean</span> <span class="title">setWifiEnabled</span><span class="params">(String packageName, <span class="keyword">boolean</span> enable)</span><span class="keyword">throws</span> RemoteException </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (enforceChangePermission(packageName) != MODE_ALLOWED) &#123;            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    Slog.d(TAG, <span class="string">"setWifiEnabled: "</span> + enable + <span class="string">" pid="</span> + Binder.getCallingPid()</span><br><span class="line">            + <span class="string">", uid="</span> + Binder.getCallingUid() + <span class="string">", package="</span> + packageName);</span><br><span class="line">    mLog.info(<span class="string">"setWifiEnabled package=% uid=% enable=%"</span>).c(packageName).c(Binder.getCallingUid()).c(enable).flush();</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">boolean</span> isFromSettings = checkNetworkSettingsPermission(</span><br><span class="line">                Binder.getCallingPid(), Binder.getCallingUid());</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// If Airplane mode is enabled, only Settings is allowed to toggle Wifi</span></span><br><span class="line">    <span class="keyword">if</span> (mSettingsStore.isAirplaneModeOn() &amp;&amp; !isFromSettings) &#123;</span><br><span class="line">            mLog.info(<span class="string">"setWifiEnabled in Airplane mode: only Settings can enable wifi"</span>).flush();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// If SoftAp is enabled, only Settings is allowed to toggle wifi</span></span><br><span class="line">    <span class="keyword">boolean</span> apEnabled = mWifiApState == WifiManager.WIFI_AP_STATE_ENABLED;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> (apEnabled &amp;&amp; !isFromSettings) &#123;</span><br><span class="line">        mLog.info(<span class="string">"setWifiEnabled SoftAp not disabled: only Settings can enable wifi"</span>).flush();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    * Caller might not have WRITE_SECURE_SETTINGS,</span></span><br><span class="line"><span class="comment">    * only CHANGE_WIFI_STATE is enforced</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">long</span> ident = Binder.clearCallingIdentity();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (! mSettingsStore.handleWifiToggled(enable)) &#123;</span><br><span class="line">            <span class="comment">// Nothing to do if wifi cannot be toggled</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            Binder.restoreCallingIdentity(ident);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> (mPermissionReviewRequired) &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> wiFiEnabledState = getWifiEnabledState();</span><br><span class="line">        <span class="keyword">if</span> (enable) &#123;</span><br><span class="line">            <span class="keyword">if</span> (wiFiEnabledState == WifiManager.WIFI_STATE_DISABLING</span><br><span class="line">                    || wiFiEnabledState == WifiManager.WIFI_STATE_DISABL)&#123;</span><br><span class="line">                <span class="keyword">if</span> (startConsentUi(packageName, Binder.getCallingUid(),</span><br><span class="line">                    WifiManager.ACTION_REQUEST_ENABLE)) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (wiFiEnabledState == WifiManager.WIFI_STATE_ENABLING</span><br><span class="line">            || wiFiEnabledState == WifiManager.WIFI_STATE_ENABLED) &#123;</span><br><span class="line">                <span class="keyword">if</span> (startConsentUi(packageName, Binder.getCallingUid(),</span><br><span class="line">                    WifiManager.ACTION_REQUEST_DISABLE)) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    mWifiController.sendMessage(CMD_WIFI_TOGGLED);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>WifiManager.setWifiEnabled通过aidl跨进程调用到了WifiServiceImpl.setWifiEnabled,其中WifiServiceImpl是WifiService的实现类。在WifiServiceImpl的setWifiEnabled方法里做的一些事情：</p><p>enforceChangePermission 判断调用的进程是否有权限。想要开关wifi需要CHANGE_WIFI_STATE 权限。</p><p>isAirplaneModeOn 判断飞行模式。</p><p>handleWifiToggled 保存wifi 操作的状态。</p><p>向WifiController发送CMD_WIFI_TOGGLED消息。</p></blockquote><h3 id="WifiController-java"><a href="#WifiController-java" class="headerlink" title="WifiController.java"></a>WifiController.java</h3><blockquote><p>frameworks/opt/net/wifi/service/java/com/android/server/wifi/WifiController.java</p></blockquote><blockquote><p>首先讲一下WifiController，它是一个状态机，可能Android每个版本的状态机不完全一样，比如Android P 和Android O比起来状态机减少了一些分支。 WifiController在WIfiServiceImpl的构造函数中初始化、并开始运行。</p></blockquote><blockquote><p>WifiController 和WifiStateMachine 不同，WifiStateMachine是一个复杂的状态机，它维护了Wifi的启动、扫描、连接、断开等多个状态。WifiController 是高级别的wifi状态机，因为它管理的状态是wifi开关，wifi热点开关等状态，只有在wifi开关等具体状态下，判断wifi处于启动扫描附近热点状态等才是有意义的。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">WifiController(Context context, WifiStateMachine wsm, Looper                        </span><br><span class="line">        wifiStateMachineLooper, WifiSettingsStore wss, Looper                                   </span><br><span class="line">        wifiServiceLooper, FrameworkFacade f,WifiStateMachinePrime wsmp) &#123;</span><br><span class="line">    <span class="keyword">super</span>(TAG, wifiServiceLooper);</span><br><span class="line">    ...</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// CHECKSTYLE:OFF IndentationCheck</span></span><br><span class="line">    addState(mDefaultState);</span><br><span class="line">        addState(mStaDisabledState, mDefaultState);</span><br><span class="line">        addState(mStaEnabledState, mDefaultState);</span><br><span class="line">            addState(mDeviceActiveState, mStaEnabledState);</span><br><span class="line">        addState(mStaDisabledWithScanState, mDefaultState);</span><br><span class="line">        addState(mEcmState, mDefaultState);</span><br><span class="line">    <span class="comment">// CHECKSTYLE:ON IndentationCheck</span></span><br><span class="line">    ...</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> (checkScanOnlyModeAvailable()) &#123;</span><br><span class="line">        setInitialState(mStaDisabledWithScanState);</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        setInitialState(mStaDisabledState);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>wifiController状态机各状态：</p><p><img src="WifiController状态机.jpg" alt="WifiController状态机"></p><blockquote><p>状态机初始状态为StaDisabledState，在该状态下对CMD_WIFI_TOGGLED消息的处理</p></blockquote><h4 id="StaDisabledState"><a href="#StaDisabledState" class="headerlink" title="StaDisabledState"></a>StaDisabledState</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StaDisabledState</span> <span class="keyword">extends</span> <span class="title">State</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mDeferredEnableSerialNumber = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> mHaveDeferredEnable = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> mDisabledTimestamp;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">enter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        mWifiStateMachinePrime.disableWifi();</span><br><span class="line">        <span class="comment">// Supplicant can't restart right away, so note the time we switched off</span></span><br><span class="line">        mDisabledTimestamp = SystemClock.elapsedRealtime();</span><br><span class="line">        mDeferredEnableSerialNumber++;</span><br><span class="line">        mHaveDeferredEnable = <span class="keyword">false</span>;</span><br><span class="line">        mWifiStateMachine.clearANQPCache();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">processMessage</span><span class="params">(Message msg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (msg.what) &#123;</span><br><span class="line">            <span class="keyword">case</span> CMD_WIFI_TOGGLED:</span><br><span class="line">                <span class="keyword">if</span> (mSettingsStore.isWifiToggleEnabled()) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (doDeferEnable(msg)) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (mHaveDeferredEnable) &#123;</span><br><span class="line">                            <span class="comment">//  have 2 toggles now, inc serial number and ignore both</span></span><br><span class="line">                            mDeferredEnableSerialNumber++;</span><br><span class="line">                        &#125;</span><br><span class="line">                        mHaveDeferredEnable = !mHaveDeferredEnable;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    transitionTo(mDeviceActiveState); <span class="comment">//从这儿转换到DeviceActiveState状态</span></span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (checkScanOnlyModeAvailable()) &#123;</span><br><span class="line">                    <span class="comment">// only go to scan mode if we aren't in airplane mode</span></span><br><span class="line">                    <span class="keyword">if</span> (mSettingsStore.isAirplaneModeOn()) &#123;</span><br><span class="line">                        transitionTo(mStaDisabledWithScanState);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            ...</span><br><span class="line">                </span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> NOT_HANDLED;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> HANDLED;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>在StaDisabledState状态下没做什么处理，接着转换到DeviceActiveState状态，StaEnabledState是它的父状态，由StateMachine的知识可知，转换到该状态时，会依次调用父、子状态的enter()函数。先看DeviceActiveState的父状态StaEnabledState</p></blockquote><h4 id="StaEnabledState"><a href="#StaEnabledState" class="headerlink" title="StaEnabledState"></a>StaEnabledState</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StaEnabledState</span> <span class="keyword">extends</span> <span class="title">State</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">enter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            log(<span class="string">"StaEnabledState.enter()"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">processMessage</span><span class="params">(Message msg)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">switch</span> (msg.what) &#123;</span><br><span class="line">                <span class="keyword">case</span> CMD_WIFI_TOGGLED:</span><br><span class="line">                    <span class="keyword">if</span> (! mSettingsStore.isWifiToggleEnabled()) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (checkScanOnlyModeAvailable()) &#123;</span><br><span class="line">                            transitionTo(mStaDisabledWithScanState);</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            transitionTo(mStaDisabledState);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                ...</span><br><span class="line">                </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="DeviceActiveState"><a href="#DeviceActiveState" class="headerlink" title="DeviceActiveState"></a>DeviceActiveState</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Parent: StaEnabledState</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* TODO (b/79209870): merge DeviceActiveState and StaEnabledState into a single state</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DeviceActiveState</span> <span class="keyword">extends</span> <span class="title">State</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">enter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        mWifiStateMachinePrime.enterClientMode();</span><br><span class="line">        mWifiStateMachine.setHighPerfModeEnabled(<span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>可以看到在DeviceActiveState状态下主要做了两个操作mWifiStateMachinePrime.enterClientMode()和<br>mWifiStateMachine.setHighPerfModeEnabled(false)，主要看mWifiStateMachinePrime.enterClientMode()。</p></blockquote><h3 id="WifiStateMachinePrime-java"><a href="#WifiStateMachinePrime-java" class="headerlink" title="WifiStateMachinePrime.java"></a>WifiStateMachinePrime.java</h3><blockquote><p>frameworks/opt/net/wifi/service/java/com/android/server/wifi/WifiStateMachinePrime.java</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Method to switch wifi into client mode where connections to configured networks will be</span></span><br><span class="line"><span class="comment">* attempted.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">enterClientMode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    changeMode(ModeStateMachine.CMD_START_CLIENT_MODE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">changeMode</span><span class="params">(<span class="keyword">int</span> newMode)</span> </span>&#123;</span><br><span class="line">    mModeStateMachine.sendMessage(newMode);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>ModeStateMachine又是一个状态机，不过这个状态机比较简单只有三个状态，初始状态为WifiDisabledState。</p></blockquote><h4 id="ModeStateMachine"><a href="#ModeStateMachine" class="headerlink" title="ModeStateMachine"></a>ModeStateMachine</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">ModeStateMachine</span> <span class="keyword">extends</span> <span class="title">StateMachine</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Commands for the state machine  - these will be removed,</span></span><br><span class="line">    <span class="comment">// along with the StateMachine itself</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CMD_START_CLIENT_MODE    = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CMD_START_SCAN_ONLY_MODE = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CMD_DISABLE_WIFI         = <span class="number">3</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> State mWifiDisabledState = <span class="keyword">new</span> WifiDisabledState();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> State mClientModeActiveState = <span class="keyword">new</span> ClientModeActiveState();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> State mScanOnlyModeActiveState = <span class="keyword">new</span> ScanOnlyModeActiveState();</span><br><span class="line"> </span><br><span class="line">    ModeStateMachine() &#123;</span><br><span class="line">        <span class="keyword">super</span>(TAG, mLooper);</span><br><span class="line"> </span><br><span class="line">        addState(mClientModeActiveState);</span><br><span class="line">        addState(mScanOnlyModeActiveState);</span><br><span class="line">        addState(mWifiDisabledState);</span><br><span class="line"> </span><br><span class="line">        Log.d(TAG, <span class="string">"Starting Wifi in WifiDisabledState"</span>);</span><br><span class="line">        setInitialState(mWifiDisabledState);</span><br><span class="line">        start();</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h4 id="WifiDisabledState"><a href="#WifiDisabledState" class="headerlink" title="WifiDisabledState"></a>WifiDisabledState</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WifiDisabledState</span> <span class="keyword">extends</span> <span class="title">ModeActiveState</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">enter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Log.d(TAG, <span class="string">"Entering WifiDisabledState"</span>);</span><br><span class="line">        mDefaultModeManager.sendScanAvailableBroadcast(mContext, <span class="keyword">false</span>);</span><br><span class="line">        mScanRequestProxy.enableScanningForHiddenNetworks(<span class="keyword">false</span>);</span><br><span class="line">        mScanRequestProxy.clearScanResults();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">processMessage</span><span class="params">(Message message)</span> </span>&#123;</span><br><span class="line">    Log.d(TAG, <span class="string">"received a message in WifiDisabledState: "</span> + message);</span><br><span class="line">        <span class="keyword">if</span> (checkForAndHandleModeChange(message)) &#123;</span><br><span class="line">            <span class="keyword">return</span> HANDLED;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> NOT_HANDLED;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exit</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// do not have an active mode manager...  nothing to clean up</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">checkForAndHandleModeChange</span><span class="params">(Message message)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">switch</span>(message.what) &#123;</span><br><span class="line">        <span class="keyword">case</span> ModeStateMachine.CMD_START_CLIENT_MODE:</span><br><span class="line">            Log.d(TAG, <span class="string">"Switching from "</span> + getCurrentMode() + <span class="string">" to ClientMode"</span>);</span><br><span class="line">            mModeStateMachine.transitionTo(mClientModeActiveState);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> ModeStateMachine.CMD_START_SCAN_ONLY_MODE:</span><br><span class="line">            Log.d(TAG, <span class="string">"Switching from "</span> + getCurrentMode() + <span class="string">" to ScanOnlyMode"</span>);</span><br><span class="line">            mModeStateMachine.transitionTo(mScanOnlyModeActiveState);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> ModeStateMachine.CMD_DISABLE_WIFI:</span><br><span class="line">            Log.d(TAG, <span class="string">"Switching from "</span> + getCurrentMode() + <span class="string">" to WifiDisabled"</span>);</span><br><span class="line">            mModeStateMachine.transitionTo(mWifiDisabledState);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> NOT_HANDLED;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> HANDLED;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>状态机从WifiDisabledState状态转向ClientModeActiveState状态，所以再继续看ClientModeActiveState</p></blockquote><h4 id="ClientModeActiveState"><a href="#ClientModeActiveState" class="headerlink" title="ClientModeActiveState"></a>ClientModeActiveState</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ClientModeActiveState</span> <span class="keyword">extends</span> <span class="title">ModeActiveState</span> </span>&#123;</span><br><span class="line">    ClientListener mListener;</span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">ClientListener</span> <span class="keyword">implements</span> <span class="title">ClientModeManager</span>.<span class="title">Listener</span> </span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStateChanged</span><span class="params">(<span class="keyword">int</span> state)</span> </span>&#123;</span><br><span class="line">            <span class="comment">// make sure this listener is still active</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span> != mListener) &#123;</span><br><span class="line">                Log.d(TAG, <span class="string">"Client mode state change from previous manager"</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            Log.d(TAG, <span class="string">"State changed from client mode. state = "</span> + state);</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">if</span> (state == WifiManager.WIFI_STATE_UNKNOWN) &#123;</span><br><span class="line">                <span class="comment">// error while setting up client mode or an unexpected failure.</span></span><br><span class="line">                mModeStateMachine.sendMessage(CMD_CLIENT_MODE_FAILED, <span class="keyword">this</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (state == WifiManager.WIFI_STATE_DISABLED) &#123;</span><br><span class="line">                <span class="comment">// client mode stopped</span></span><br><span class="line">                mModeStateMachine.sendMessage(CMD_CLIENT_MODE_STOPPED, <span class="keyword">this</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (state == WifiManager.WIFI_STATE_ENABLED) &#123;</span><br><span class="line">                <span class="comment">// client mode is ready to go</span></span><br><span class="line">                Log.d(TAG, <span class="string">"client mode active"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// only care if client mode stopped or started, dropping</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">enter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Log.d(TAG, <span class="string">"Entering ClientModeActiveState"</span>);</span><br><span class="line"> </span><br><span class="line">        mListener = <span class="keyword">new</span> ClientListener();</span><br><span class="line">        mManager = mWifiInjector.makeClientModeManager(mListener);</span><br><span class="line">        mManager.start();</span><br><span class="line">        mActiveModeManagers.add(mManager);</span><br><span class="line"> </span><br><span class="line">        updateBatteryStatsWifiState(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这里的mManager是ActiveModeManager，是个接口，这里的ClientModeManager实现了这个接口。我们继续走下去，去看ClientModeManager，主要看mManager.start()这个调用。</p></blockquote><h3 id="ClientModeManager-java"><a href="#ClientModeManager-java" class="headerlink" title="ClientModeManager.java"></a>ClientModeManager.java</h3><blockquote><p>frameworks/opt/net/wifi/service/java/com/android/server/wifi/ClientModeManager.java</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Start client mode.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    mStateMachine.sendMessage(ClientModeStateMachine.CMD_START);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>ClientModeStateMachine也是个状态机，该状态机只有两个状态，初始状态为IdleState。</p></blockquote><h4 id="ClientModeStateMachine"><a href="#ClientModeStateMachine" class="headerlink" title="ClientModeStateMachine"></a>ClientModeStateMachine</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">ClientModeStateMachine</span> <span class="keyword">extends</span> <span class="title">StateMachine</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Commands for the state machine.</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CMD_START = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CMD_INTERFACE_STATUS_CHANGED = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CMD_INTERFACE_DESTROYED = <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CMD_INTERFACE_DOWN = <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> State mIdleState = <span class="keyword">new</span> IdleState();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> State mStartedState = <span class="keyword">new</span> StartedState();</span><br><span class="line">    ...</span><br><span class="line"> </span><br><span class="line">    ClientModeStateMachine(Looper looper) &#123;</span><br><span class="line">        <span class="keyword">super</span>(TAG, looper);</span><br><span class="line"> </span><br><span class="line">        addState(mIdleState);</span><br><span class="line">        addState(mStartedState);</span><br><span class="line"> </span><br><span class="line">        setInitialState(mIdleState);</span><br><span class="line">        start();</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>看一下初始状态Idlesate状态的处理</p></blockquote><h4 id="Idlesate"><a href="#Idlesate" class="headerlink" title="Idlesate"></a>Idlesate</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">IdleState</span> <span class="keyword">extends</span> <span class="title">State</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">enter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Log.d(TAG, <span class="string">"entering IdleState"</span>);</span><br><span class="line">        mClientInterfaceName = <span class="keyword">null</span>;</span><br><span class="line">        mIfaceIsUp = <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">processMessage</span><span class="params">(Message message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (message.what) &#123;</span><br><span class="line">            <span class="keyword">case</span> CMD_START:</span><br><span class="line">                updateWifiState(WifiManager.WIFI_STATE_ENABLING,</span><br><span class="line">                        WifiManager.WIFI_STATE_DISABLED);</span><br><span class="line"> </span><br><span class="line">                mClientInterfaceName = mWifiNative.setupInterfaceForClientMode(</span><br><span class="line">                        <span class="keyword">false</span> <span class="comment">/* not low priority */</span>, mWifiNativeInterfaceCallback);</span><br><span class="line">                <span class="keyword">if</span> (TextUtils.isEmpty(mClientInterfaceName)) &#123;</span><br><span class="line">                    Log.e(TAG, <span class="string">"Failed to create ClientInterface. Sit in Idle"</span>);</span><br><span class="line">                    updateWifiState(WifiManager.WIFI_STATE_UNKNOWN,</span><br><span class="line">                            WifiManager.WIFI_STATE_ENABLING);</span><br><span class="line">                    updateWifiState(WifiManager.WIFI_STATE_DISABLED,</span><br><span class="line">                            WifiManager.WIFI_STATE_UNKNOWN);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                sendScanAvailableBroadcast(<span class="keyword">false</span>);</span><br><span class="line">                mScanRequestProxy.enableScanningForHiddenNetworks(<span class="keyword">false</span>);</span><br><span class="line">                mScanRequestProxy.clearScanResults();</span><br><span class="line">                transitionTo(mStartedState);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                Log.d(TAG, <span class="string">"received an invalid message: "</span> + message);</span><br><span class="line">                <span class="keyword">return</span> NOT_HANDLED;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> HANDLED;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>主要看 mWifiNative.setupInterfaceForClientMode的操作。</p></blockquote><h3 id="WifiNative-java"><a href="#WifiNative-java" class="headerlink" title="WifiNative.java"></a>WifiNative.java</h3><blockquote><p>frameworks/opt/net/wifi/service/java/com/android/server/wifi/WifiNative.java</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Setup an interface for Client mode operations.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* * This method configures an interface in STA mode in all the native daemons</span></span><br><span class="line"><span class="comment">* (wificond, wpa_supplicant &amp; vendor HAL).</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> lowPrioritySta The requested STA has a low request priority (lower probability of</span></span><br><span class="line"><span class="comment">*                       getting created, higher probability of getting destroyed).</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> interfaceCallback Associated callback for notifying status changes for the iface.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> Returns the name of the allocated interface, will be null on failure.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">setupInterfaceForClientMode</span><span class="params">(<span class="keyword">boolean</span> lowPrioritySta,</span></span></span><br><span class="line"><span class="function"><span class="params">@NonNull InterfaceCallback interfaceCallback)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">synchronized</span> (mLock) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!startHal()) &#123;</span><br><span class="line">            Log.e(TAG, <span class="string">"Failed to start Hal"</span>);</span><br><span class="line">            mWifiMetrics.incrementNumSetupClientInterfaceFailureDueToHal();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!startSupplicant()) &#123;</span><br><span class="line">            Log.e(TAG, <span class="string">"Failed to start supplicant"</span>);</span><br><span class="line">            mWifiMetrics.incrementNumSetupClientInterfaceFailureDueToSupplicant();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Iface iface = mIfaceMgr.allocateIface(Iface.IFACE_TYPE_STA);</span><br><span class="line">        <span class="keyword">if</span> (iface == <span class="keyword">null</span>) &#123;</span><br><span class="line">            Log.e(TAG, <span class="string">"Failed to allocate new STA iface"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        iface.externalListener = interfaceCallback;</span><br><span class="line">        iface.name = createStaIface(iface, lowPrioritySta);</span><br><span class="line">        <span class="keyword">if</span> (TextUtils.isEmpty(iface.name)) &#123;</span><br><span class="line">            Log.e(TAG, <span class="string">"Failed to create STA iface in vendor HAL"</span>);</span><br><span class="line">            mIfaceMgr.removeIface(iface.id);</span><br><span class="line">            mWifiMetrics.incrementNumSetupClientInterfaceFailureDueToHal();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (mWificondControl.setupInterfaceForClientMode(iface.name) == <span class="keyword">null</span>) &#123;</span><br><span class="line">            Log.e(TAG, <span class="string">"Failed to setup iface in wificond on "</span> + iface);</span><br><span class="line">            teardownInterface(iface.name);</span><br><span class="line">            mWifiMetrics.incrementNumSetupClientInterfaceFailureDueToWificond();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!mSupplicantStaIfaceHal.setupIface(iface.name)) &#123;</span><br><span class="line">            Log.e(TAG, <span class="string">"Failed to setup iface in supplicant on "</span> + iface);</span><br><span class="line">            teardownInterface(iface.name);</span><br><span class="line">            mWifiMetrics.incrementNumSetupClientInterfaceFailureDueToSupplicant();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        iface.networkObserver = <span class="keyword">new</span> NetworkObserverInternal(iface.id);</span><br><span class="line">        <span class="keyword">if</span> (!registerNetworkObserver(iface.networkObserver)) &#123;</span><br><span class="line">            Log.e(TAG, <span class="string">"Failed to register network observer on "</span> + iface);</span><br><span class="line">            teardownInterface(iface.name);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        mWifiMonitor.startMonitoring(iface.name);</span><br><span class="line">        <span class="comment">// Just to avoid any race conditions with interface state change callbacks,</span></span><br><span class="line">        <span class="comment">// update the interface state before we exit.</span></span><br><span class="line">        onInterfaceStateChanged(iface, isInterfaceUp(iface.name));</span><br><span class="line">        initializeNwParamsForClientInterface(iface.name);</span><br><span class="line">        Log.i(TAG, <span class="string">"Successfully setup "</span> + iface);</span><br><span class="line">        <span class="keyword">return</span> iface.name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>到这里就可以看到一些关键性的操作：<br>启动Hal：startHal()<br>启动supplicant：startSupplicant()<br>加载驱动（loadDriver）：setupInterfaceForClientMode()<br>启动WifiMonitor：WifiMonitor.startMonitoring()</p><p>WifiMonitor.startMonitoring()：这一步主要是在WifiMonitor中建立与wpa_supplicant通信的socket通道、创建一个线程接收底层事件并分发处理。这里会创建两个socket通道与wpa_s通信，一个用于下发指令，另一个用于接收事件。成功后WifiMonitor会向WifiStateMachine发送一个代表socket通信建立成功的消息：SUP_CONNECTION_EVENT；收到这个消息就表示Wifi已经启动成功了。</p></blockquote><h3 id="startHal"><a href="#startHal" class="headerlink" title="startHal"></a>startHal</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** Helper method invoked to start supplicant if there were no ifaces */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">startHal</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">synchronized</span> (mLock) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!mIfaceMgr.hasAnyIface()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (mWifiVendorHal.isVendorHalSupported()) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!mWifiVendorHal.startVendorHal()) &#123;</span><br><span class="line">                    Log.e(TAG, <span class="string">"Failed to start vendor HAL"</span>);</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                Log.i(TAG, <span class="string">"Vendor Hal not supported, ignoring start."</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="WifiVendorHal-java"><a href="#WifiVendorHal-java" class="headerlink" title="WifiVendorHal.java"></a>WifiVendorHal.java</h4><blockquote><p>frameworks/opt/net/wifi/service/java/com/android/server/wifi/WifiVendorHal.java</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Bring up the HIDL Vendor HAL.</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> true on success, false otherwise.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">startVendorHal</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">synchronized</span> (sLock) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!mHalDeviceManager.start()) &#123;</span><br><span class="line">            mLog.err(<span class="string">"Failed to start vendor HAL"</span>).flush();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        mLog.info(<span class="string">"Vendor Hal started successfully"</span>).flush();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="mHalDeviceaManager-start"><a href="#mHalDeviceaManager-start" class="headerlink" title="mHalDeviceaManager.start()"></a>mHalDeviceaManager.start()</h4><blockquote><p>frameworks/opt/net/wifi/service/java/com/android/server/wifi/HalDeviceManager.java</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Attempts to start Wi-Fi (using HIDL). Returns the success (true) or failure (false) or</span></span><br><span class="line"><span class="comment">* the start operation. Will also dispatch any registered ManagerStatusCallback.onStart() on</span></span><br><span class="line"><span class="comment">* success.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* Note: direct call to HIDL.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">start</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> startWifi();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">startWifi</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (VDBG) Log.d(TAG, <span class="string">"startWifi"</span>);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">synchronized</span> (mLock) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (mWifi == <span class="keyword">null</span>) &#123;</span><br><span class="line">                Log.w(TAG, <span class="string">"startWifi called but mWifi is null!?"</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">int</span> triedCount = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">while</span> (triedCount &lt;= START_HAL_RETRY_TIMES) &#123;</span><br><span class="line">                    WifiStatus status = mWifi.start();</span><br><span class="line">                    <span class="keyword">if</span> (status.code == WifiStatusCode.SUCCESS) &#123;</span><br><span class="line">                        initIWifiChipDebugListeners();</span><br><span class="line">                        managerStatusListenerDispatch();</span><br><span class="line">                        <span class="keyword">if</span> (triedCount != <span class="number">0</span>) &#123;</span><br><span class="line">                            Log.d(TAG, <span class="string">"start IWifi succeeded after trying "</span></span><br><span class="line">                                     + triedCount + <span class="string">" times"</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (status.code == WifiStatusCode.ERROR_NOT_AVAILABLE) &#123;</span><br><span class="line">                        <span class="comment">// Should retry. Hal might still be stopping.</span></span><br><span class="line">                        Log.e(TAG, <span class="string">"Cannot start IWifi: "</span> + statusString(status)</span><br><span class="line">                                + <span class="string">", Retrying..."</span>);</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            Thread.sleep(START_HAL_RETRY_INTERVAL_MS);</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (InterruptedException ignore) &#123;</span><br><span class="line">                            <span class="comment">// no-op</span></span><br><span class="line">                        &#125;</span><br><span class="line">                        triedCount++;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="comment">// Should not retry on other failures.</span></span><br><span class="line">                        Log.e(TAG, <span class="string">"Cannot start IWifi: "</span> + statusString(status));</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                Log.e(TAG, <span class="string">"Cannot start IWifi after trying "</span> + triedCount + <span class="string">" times"</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">            Log.e(TAG, <span class="string">"startWifi exception: "</span> + e);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>主要看WifiStatus status = mWifi.start()，先看下mWifi是什么。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Wrapper function to access the HIDL services. Created to be mockable in unit-tests.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> IWifi <span class="title">getWifiServiceMockable</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> IWifi.getService();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">        Log.e(TAG, <span class="string">"Exception getting IWifi service: "</span> + e);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这里返回的是IWifi的服务端。至此我们开始进入HIDL。</p></blockquote><h2 id="HIDL"><a href="#HIDL" class="headerlink" title="HIDL"></a>HIDL</h2><h3 id="IWifi-hal"><a href="#IWifi-hal" class="headerlink" title="IWifi.hal"></a>IWifi.hal</h3><blockquote><p> hardware/interfaces/wifi/1.0/IWifi.hal</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Perform any setup that is required to make use of the module. If the module</span></span><br><span class="line"><span class="comment">* is already started then this must be a noop.</span></span><br><span class="line"><span class="comment">* Must trigger |IWifiEventCallback.onStart| on success.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> status WifiStatus of the operation.</span></span><br><span class="line"><span class="comment">*         Possible status codes:</span></span><br><span class="line"><span class="comment">*         |WifiStatusCode.SUCCESS|,</span></span><br><span class="line"><span class="comment">*         |WifiStatusCode.NOT_AVAILABLE|,</span></span><br><span class="line"><span class="comment">*         |WifiStatusCode.UNKNOWN|</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@entry</span></span><br><span class="line"><span class="meta">@callflow</span>(next=&#123;<span class="string">"registerEventCallback"</span>, <span class="string">"start"</span>, <span class="string">"stop"</span>, <span class="string">"getChip"</span>&#125;)</span><br><span class="line">start() generates (WifiStatus status);</span><br></pre></td></tr></table></figure><blockquote><p>系统编译的时候会自动产生IWifi.java文件</p><p>out/soong/.intermediates/hardware/interfaces/wifi/1.0/android.hardware.wifi_V1.0-java_gen_java/gen/android/hardware/wifi/V1_0/IWifi.java</p><p>IWifi.java的getService方法</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> IWifi <span class="title">getService</span><span class="params">(String serviceName)</span> <span class="keyword">throws</span> android.os.RemoteException </span>&#123;</span><br><span class="line">          <span class="keyword">return</span> IWifi.asInterface(android.os.HwBinder.getService(<span class="string">"android.hardware.wifi@1.0::IWifi"</span>,serviceName));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>再看一下 IWifi.java的asInterface方法</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IWifi.asInterface(android.os.HwBinder.getService(<span class="string">"android.hardware.wifi@1.0::IWifi"</span>,serviceName));</span><br></pre></td></tr></table></figure><blockquote><p>从而我们就可以知道IWifi对应的服务端了</p></blockquote><h3 id="wifi-cpp"><a href="#wifi-cpp" class="headerlink" title="wifi.cpp"></a>wifi.cpp</h3><blockquote><p>hardware/interfaces/wifi/1.2/default/wifi.cpp</p></blockquote><blockquote><p>按照IWifi.java的代码接下来的调用路径应该在hardware/interfaces/wifi/1.0/default/，但没有发现这个路径下有wifi.cpp这个文件，hardware/interfaces/wifi/1.2/default/倒是有wifi.cpp，这个我也不清楚为什么。那就先按这个调用流程走下去吧。</p></blockquote><h4 id="wifi-start"><a href="#wifi-start" class="headerlink" title="wifi.start"></a>wifi.start</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Return&lt;<span class="keyword">void</span>&gt; Wifi::start(start_cb hidl_status_cb) &#123;</span><br><span class="line">    <span class="keyword">return</span> validateAndCall(<span class="keyword">this</span>, WifiStatusCode::ERROR_UNKNOWN,</span><br><span class="line">            &amp;Wifi::startInternal, hidl_status_cb);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="startInternal"><a href="#startInternal" class="headerlink" title="startInternal()"></a>startInternal()</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">WifiStatus Wifi::startInternal() &#123;</span><br><span class="line">    <span class="keyword">if</span> (run_state_ == RunState::STARTED) &#123;</span><br><span class="line">        <span class="keyword">return</span> createWifiStatus(WifiStatusCode::SUCCESS);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (run_state_ == RunState::STOPPING) &#123;</span><br><span class="line">        <span class="keyword">return</span> createWifiStatus(WifiStatusCode::ERROR_NOT_AVAILABLE,</span><br><span class="line">                                <span class="string">"HAL is stopping"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    WifiStatus wifi_status = initializeModeControllerAndLegacyHal();</span><br><span class="line">    <span class="keyword">if</span> (wifi_status.code == WifiStatusCode::SUCCESS) &#123;</span><br><span class="line">        <span class="comment">// Create the chip instance once the HAL is started.</span></span><br><span class="line">        chip_ = <span class="keyword">new</span> WifiChip(kChipId, legacy_hal_, mode_controller_,</span><br><span class="line">                            feature_flags_);</span><br><span class="line">        run_state_ = RunState::STARTED;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span>&amp; callback : event_cb_handler_.getCallbacks()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!callback-&gt;onStart().isOk()) &#123;</span><br><span class="line">                LOG(ERROR) &lt;&lt; <span class="string">"Failed to invoke onStart callback"</span>;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        LOG(INFO) &lt;&lt; <span class="string">"Wifi HAL started"</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span>&amp; callback : event_cb_handler_.getCallbacks()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!callback-&gt;onFailure(wifi_status).isOk()) &#123;</span><br><span class="line">                LOG(ERROR) &lt;&lt; <span class="string">"Failed to invoke onFailure callback"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        LOG(ERROR) &lt;&lt; <span class="string">"Wifi HAL start failed"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> wifi_status;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">WifiStatus Wifi::initializeModeControllerAndLegacyHal() &#123;</span><br><span class="line">    <span class="keyword">if</span> (!mode_controller_-&gt;initialize()) &#123;</span><br><span class="line">        LOG(ERROR) &lt;&lt; <span class="string">"Failed to initialize firmware mode controller"</span>;</span><br><span class="line">        <span class="keyword">return</span> createWifiStatus(WifiStatusCode::ERROR_UNKNOWN);</span><br><span class="line">    &#125;</span><br><span class="line">    legacy_hal::wifi_error legacy_status = legacy_hal_-&gt;initialize();</span><br><span class="line">    <span class="keyword">if</span> (legacy_status != legacy_hal::WIFI_SUCCESS) &#123;</span><br><span class="line">        LOG(ERROR) &lt;&lt; <span class="string">"Failed to initialize legacy HAL: "</span></span><br><span class="line">                   &lt;&lt; legacyErrorToString(legacy_status);</span><br><span class="line">        <span class="keyword">return</span> createWifiStatusFromLegacyError(legacy_status);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> createWifiStatus(WifiStatusCode::SUCCESS);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>接着看wifi_mode_controller.cpp得initialize()方法。</p></blockquote><h3 id="wifi-mode-controller-cpp"><a href="#wifi-mode-controller-cpp" class="headerlink" title="wifi_mode_controller.cpp"></a>wifi_mode_controller.cpp</h3><blockquote><p> hardware/interfaces/wifi/1.2/default/wifi_mode_controller.cpp</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">bool</span> WifiModeController::initialize() &#123;</span><br><span class="line">      <span class="keyword">if</span> (!driver_tool_-&gt;LoadDriver()) &#123;</span><br><span class="line">         LOG(ERROR) &lt;&lt; <span class="string">"Failed to load WiFi driver"</span>;</span><br><span class="line">         <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="WPA适配层-硬件抽象层-HAL"><a href="#WPA适配层-硬件抽象层-HAL" class="headerlink" title="WPA适配层(硬件抽象层 HAL)"></a>WPA适配层(硬件抽象层 HAL)</h2><blockquote><p>HAL 可定义一个标准接口以供硬件供应商实现，这可让 Android 忽略较低级别的驱动程序实现。借助 HAL，可以顺利实现相关功能，而不会影响或更改更高级别的系统。HAL 实现会被封装成模块，并由 Android 系统适时地加载。</p></blockquote><h3 id="driver-tool-cpp"><a href="#driver-tool-cpp" class="headerlink" title="driver_tool.cpp"></a>driver_tool.cpp</h3><blockquote><p>frameworks/opt/net/wifi/libwifi_hal/driver_tool.cpp</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> DriverTool::LoadDriver() &#123;</span><br><span class="line">  <span class="keyword">return</span> ::wifi_load_driver() == <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="wifi-hal-common-cpp"><a href="#wifi-hal-common-cpp" class="headerlink" title="wifi_hal_common.cpp"></a>wifi_hal_common.cpp</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">wifi_load_driver</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> WIFI_DRIVER_MODULE_PATH</span></span><br><span class="line">  <span class="keyword">if</span> (is_wifi_driver_loaded()) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">if</span> (insmod(DRIVER_MODULE_PATH, DRIVER_MODULE_ARG) &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> WIFI_DRIVER_STATE_CTRL_PARAM</span></span><br><span class="line">  <span class="keyword">if</span> (is_wifi_driver_loaded()) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">if</span> (wifi_change_driver_state(WIFI_DRIVER_STATE_ON) &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">  property_set(DRIVER_PROP_NAME, <span class="string">"ok"</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">is_wifi_driver_loaded</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">char</span> driver_status[PROPERTY_VALUE_MAX];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> WIFI_DRIVER_MODULE_PATH</span></span><br><span class="line">  FILE *proc;</span><br><span class="line">  <span class="keyword">char</span> line[<span class="keyword">sizeof</span>(DRIVER_MODULE_TAG) + <span class="number">10</span>];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"> </span><br><span class="line">  <span class="keyword">if</span> (!property_get(DRIVER_PROP_NAME, driver_status, <span class="literal">NULL</span>) ||</span><br><span class="line">      <span class="built_in">strcmp</span>(driver_status, <span class="string">"ok"</span>) != <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">/* driver not loaded */</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> WIFI_DRIVER_MODULE_PATH</span></span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">   * If the property says the driver is loaded, check to</span></span><br><span class="line"><span class="comment">   * make sure that the property setting isn't just left</span></span><br><span class="line"><span class="comment">   * over from a previous manual shutdown or a runtime</span></span><br><span class="line"><span class="comment">   * crash.</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">if</span> ((proc = fopen(MODULE_FILE, <span class="string">"r"</span>)) == <span class="literal">NULL</span>) &#123;</span><br><span class="line">    PLOG(WARNING) &lt;&lt; <span class="string">"Could not open "</span> &lt;&lt; MODULE_FILE;</span><br><span class="line">    property_set(DRIVER_PROP_NAME, <span class="string">"unloaded"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span> ((fgets(line, <span class="keyword">sizeof</span>(line), proc)) != <span class="literal">NULL</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strncmp</span>(line, DRIVER_MODULE_TAG, <span class="built_in">strlen</span>(DRIVER_MODULE_TAG)) == <span class="number">0</span>) &#123;</span><br><span class="line">      fclose(proc);</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  fclose(proc);</span><br><span class="line">  property_set(DRIVER_PROP_NAME, <span class="string">"unloaded"</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="wpa-supplicant"><a href="#wpa-supplicant" class="headerlink" title="wpa_supplicant"></a>wpa_supplicant</h2><blockquote><p>wpa_supplicant是一个开源项目，已经被移植到Linux，Windows以及很多嵌入式系统上。它是WPA的应用层认证客户端，负责完成认证相关的登录、加密等工作。wpa_supplicant的源代码目录为：/external/wpa_supplicant_8/<br>wpa_supplicant是一个独立运行的守护进程，其核心是一个消息循环，在消息循环中处理WPA状态机、控制命令、驱动事件、配置信息等。wpa_supplicant有很多控制接口，也提供命令行和通行界面的控制模式：而Android与wpa_supplicant的通信通过Socket完成</p></blockquote><blockquote><p>后续我会专门写一系列关于wpa_supplicant相关的流程相关的文章，到时候会给出索引</p></blockquote><h2 id="Linux-Kernel"><a href="#Linux-Kernel" class="headerlink" title="Linux Kernel"></a>Linux Kernel</h2><blockquote><p>kernel/driver/net/wireless/</p><p> vendor/gcom/opensource/wlan/</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> wifi模块 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wifi </tag>
            
            <tag> wpa_supplicant </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>android P wifi模块分析之wifi初始化</title>
      <link href="/2019/07/06/android-P-wifi%E6%A8%A1%E5%9D%97%E5%88%86%E6%9E%90%E4%B9%8Bwifi%E5%88%9D%E5%A7%8B%E5%8C%96/"/>
      <url>/2019/07/06/android-P-wifi%E6%A8%A1%E5%9D%97%E5%88%86%E6%9E%90%E4%B9%8Bwifi%E5%88%9D%E5%A7%8B%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<p><img src="20190706_03.jpg" alt="20190706_03.jpg"></p><blockquote><p>在机器启动的时候会做三件事</p></blockquote><h1 id="添加注册ConnectivityService连接服务"><a href="#添加注册ConnectivityService连接服务" class="headerlink" title="添加注册ConnectivityService连接服务"></a>添加注册ConnectivityService连接服务</h1><blockquote><p>它跟所有手机的无线通信都有联系，包括wifi，蓝牙，2g网络，3g网络等。<br>frameworks/base/services/java/com/android/server/SystemServer.java</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">startOtherServices</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        connectivity = <span class="keyword">new</span> ConnectivityService(</span><br><span class="line">                context, networkManagement, networkStats, networkPolicy);</span><br><span class="line">        ServiceManager.addService(Context.CONNECTIVITY_SERVICE, connectivity,</span><br><span class="line">                <span class="comment">/* allowIsolated= */</span> <span class="keyword">false</span>,</span><br><span class="line">                DUMP_FLAG_PRIORITY_HIGH | DUMP_FLAG_PRIORITY_NORMAL);</span><br><span class="line">        networkStats.bindConnectivityManager(connectivity);</span><br><span class="line">        networkPolicy.bindConnectivityManager(connectivity);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Throwable e) &#123;</span><br><span class="line">        reportWtf(<span class="string">"starting Connectivity Service"</span>, e);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="管理开机wifi开启与否"><a href="#管理开机wifi开启与否" class="headerlink" title="管理开机wifi开启与否"></a>管理开机wifi开启与否</h1><blockquote><p>frameworks/opt/net/wifi/service/java/com/android/server/wifi/WifiService.java</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBootPhase</span><span class="params">(<span class="keyword">int</span> phase)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (phase == SystemService.PHASE_SYSTEM_SERVICES_READY) &#123;</span><br><span class="line">        mImpl.checkAndStartWifi();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>frameworks/opt/net/wifi/service/java/com/android/server/wifi/WifiServiceImpl.java</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Check if we are ready to start wifi.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* First check if we will be restarting system services to decrypt the device. If the device is</span></span><br><span class="line"><span class="comment">* not encrypted, check if Wi-Fi needs to be enabled and start if needed</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* This function is used only at boot time.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">checkAndStartWifi</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// First check if we will end up restarting WifiService</span></span><br><span class="line">    <span class="keyword">if</span> (mFrameworkFacade.inStorageManagerCryptKeeperBounce()) &#123;</span><br><span class="line">        Log.d(TAG, <span class="string">"Device still encrypted. Need to restart SystemServer.  Do not start wifi."</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// Check if wi-fi needs to be enabled</span></span><br><span class="line">    <span class="keyword">boolean</span> wifiEnabled = mSettingsStore.isWifiToggleEnabled();</span><br><span class="line">    Slog.i(TAG, <span class="string">"WifiService starting up with Wi-Fi "</span> +</span><br><span class="line">                (wifiEnabled ? <span class="string">"enabled"</span> : <span class="string">"disabled"</span>));</span><br><span class="line"> </span><br><span class="line">    registerForScanModeChange();</span><br><span class="line">    mContext.registerReceiver(</span><br><span class="line">            <span class="keyword">new</span> BroadcastReceiver() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (mSettingsStore.handleAirplaneModeToggled()) &#123;</span><br><span class="line">                        mWifiController.sendMessage(CMD_AIRPLANE_TOGGLED);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (mSettingsStore.isAirplaneModeOn()) &#123;</span><br><span class="line">                        Log.d(TAG, <span class="string">"resetting country code because Airplane mode is ON"</span>);</span><br><span class="line">                        mCountryCode.airplaneModeEnabled();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="keyword">new</span> IntentFilter(Intent.ACTION_AIRPLANE_MODE_CHANGED));</span><br><span class="line"> </span><br><span class="line">    mContext.registerReceiver(</span><br><span class="line">            <span class="keyword">new</span> BroadcastReceiver() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</span><br><span class="line">                    String state = intent.getStringExtra(IccCardConstants.INTENT_KEY_ICC_STATE);</span><br><span class="line">                    <span class="keyword">if</span> (IccCardConstants.INTENT_VALUE_ICC_ABSENT.equals(state)) &#123;</span><br><span class="line">                        Log.d(TAG, <span class="string">"resetting networks because SIM was removed"</span>);</span><br><span class="line">                        mWifiStateMachine.resetSimAuthNetworks(<span class="keyword">false</span>);</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (IccCardConstants.INTENT_VALUE_ICC_LOADED.equals(state)) &#123;</span><br><span class="line">                        Log.d(TAG, <span class="string">"resetting networks because SIM was loaded"</span>);</span><br><span class="line">                        mWifiStateMachine.resetSimAuthNetworks(<span class="keyword">true</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="keyword">new</span> IntentFilter(TelephonyIntents.ACTION_SIM_STATE_CHANGED));</span><br><span class="line"> </span><br><span class="line">    mContext.registerReceiver(</span><br><span class="line">            <span class="keyword">new</span> BroadcastReceiver() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</span><br><span class="line">                    <span class="keyword">final</span> <span class="keyword">int</span> currState = intent.getIntExtra(EXTRA_WIFI_AP_STATE,</span><br><span class="line">                                                                    WIFI_AP_STATE_DISABLED);</span><br><span class="line">                    <span class="keyword">final</span> <span class="keyword">int</span> prevState = intent.getIntExtra(EXTRA_PREVIOUS_WIFI_AP_STATE,</span><br><span class="line">                                                                 WIFI_AP_STATE_DISABLED);</span><br><span class="line">                    <span class="keyword">final</span> <span class="keyword">int</span> errorCode = intent.getIntExtra(EXTRA_WIFI_AP_FAILURE_REASON,</span><br><span class="line">                                                                 HOTSPOT_NO_ERROR);</span><br><span class="line">                    <span class="keyword">final</span> String ifaceName =</span><br><span class="line">                                intent.getStringExtra(EXTRA_WIFI_AP_INTERFACE_NAME);</span><br><span class="line">                    <span class="keyword">final</span> <span class="keyword">int</span> mode = intent.getIntExtra(EXTRA_WIFI_AP_MODE,</span><br><span class="line">                                                            WifiManager.IFACE_IP_MODE_UNSPECIFIED);</span><br><span class="line">                    handleWifiApStateChange(currState, prevState, errorCode, ifaceName, mode);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="keyword">new</span> IntentFilter(WifiManager.WIFI_AP_STATE_CHANGED_ACTION));</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// Adding optimizations of only receiving broadcasts when wifi is enabled</span></span><br><span class="line">    <span class="comment">// can result in race conditions when apps toggle wifi in the background</span></span><br><span class="line">    <span class="comment">// without active user involvement. Always receive broadcasts.</span></span><br><span class="line">    registerForBroadcasts();</span><br><span class="line">    mInIdleMode = mPowerManager.isDeviceIdleMode();</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> (!mWifiStateMachine.syncInitialize(mWifiStateMachineChannel)) &#123;</span><br><span class="line">        Log.wtf(TAG, <span class="string">"Failed to initialize WifiStateMachine"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    mWifiController.start();</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// If we are already disabled (could be due to airplane mode), avoid changing persist</span></span><br><span class="line">    <span class="comment">// state here</span></span><br><span class="line">    <span class="keyword">if</span> (wifiEnabled) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            setWifiEnabled(mContext.getPackageName(), wifiEnabled);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</span><br><span class="line">            <span class="comment">/* ignore - local call */</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="添加注册wifi的核心服务wifiservice"><a href="#添加注册wifi的核心服务wifiservice" class="headerlink" title="添加注册wifi的核心服务wifiservice"></a>添加注册wifi的核心服务wifiservice</h1><blockquote><p>frameworks/opt/net/wifi/service/java/com/android/server/wifi/WifiService.java</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStart</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Log.i(TAG, <span class="string">"Registering "</span> + Context.WIFI_SERVICE);</span><br><span class="line">    publishBinderService(Context.WIFI_SERVICE, mImpl);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>WifiService继承SystemService。</p><p>frameworks/base/services/core/java/com/android/server/SystemService.java</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Publish the service so it is accessible to other services and apps.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> name the name of the new service</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> service the service object</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">publishBinderService</span><span class="params">(String name, IBinder service)</span> </span>&#123;</span><br><span class="line">    publishBinderService(name, service, <span class="keyword">false</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Publish the service so it is accessible to other services and apps.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> name the name of the new service</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> service the service object</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> allowIsolated set to true to allow isolated sandboxed processes</span></span><br><span class="line"><span class="comment">* to access this service</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">publishBinderService</span><span class="params">(String name, IBinder service,</span></span></span><br><span class="line"><span class="function"><span class="params">        <span class="keyword">boolean</span> allowIsolated)</span> </span>&#123;</span><br><span class="line">    publishBinderService(name, service, allowIsolated, DUMP_FLAG_PRIORITY_DEFAULT);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Publish the service so it is accessible to other services and apps.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> name the name of the new service</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> service the service object</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> allowIsolated set to true to allow isolated sandboxed processes</span></span><br><span class="line"><span class="comment">* to access this service</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> dumpPriority supported dump priority levels as a bitmask</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">publishBinderService</span><span class="params">(String name, IBinder service,</span></span></span><br><span class="line"><span class="function"><span class="params">        <span class="keyword">boolean</span> allowIsolated, <span class="keyword">int</span> dumpPriority)</span> </span>&#123;</span><br><span class="line">    ServiceManager.addService(name, service, allowIsolated, dumpPriority);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> wifi模块 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wifi </tag>
            
            <tag> wpa_supplicant </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>android P wifi模块分析之wifi系统框架</title>
      <link href="/2019/07/06/android-P-wifi%E6%A8%A1%E5%9D%97%E5%88%86%E6%9E%90%E4%B9%8Bwifi%E7%B3%BB%E7%BB%9F%E6%A1%86%E6%9E%B6/"/>
      <url>/2019/07/06/android-P-wifi%E6%A8%A1%E5%9D%97%E5%88%86%E6%9E%90%E4%B9%8Bwifi%E7%B3%BB%E7%BB%9F%E6%A1%86%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<p><img src="20190706_02.jpg" alt="20170906_02.jpg"></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>这一篇是wifi这一系列的第一篇，讲述android P wifi的一个代码流程分析。这也是我到新公司接触到android开始，对wifi的上层的一次深入学习，因为我之前只是在linux层面接触到wifi。仅以此系列文章记录我对android wifi世界的理解。</p></blockquote><h1 id="Android-wifi-框架图"><a href="#Android-wifi-框架图" class="headerlink" title="Android wifi 框架图"></a>Android wifi 框架图</h1><p><img src="android wifi 框架图.jpg" alt="android wifi 框架图"></p><h1 id="Android-wifi-源码结构"><a href="#Android-wifi-源码结构" class="headerlink" title="Android wifi 源码结构"></a>Android wifi 源码结构</h1><h2 id="Wifi-Setting层"><a href="#Wifi-Setting层" class="headerlink" title="Wifi Setting层"></a>Wifi Setting层</h2><blockquote><p>packages/apps/Setting/src/com/android/settings/wifi/</p><p>主要的类：</p></blockquote><table><thead><tr><th style="text-align:center">类</th><th style="text-align:center">功能</th></tr></thead><tbody><tr><td style="text-align:center">WifiSetting.java</td><td style="text-align:center">负责显示Wifi的设置界面</td></tr><tr><td style="text-align:center">WifiEnabler.java</td><td style="text-align:center">负责Wifi的开关逻辑</td></tr><tr><td style="text-align:center">WifiDialog.java</td><td style="text-align:center">负责Wifi的对话框</td></tr><tr><td style="text-align:center">WifiInfo.java</td><td style="text-align:center">表示Wifi的相关配置信息</td></tr></tbody></table><h2 id="Wifi-framework层"><a href="#Wifi-framework层" class="headerlink" title="Wifi framework层"></a>Wifi framework层</h2><blockquote><p>frameworks/base/wifi/Java/android/net/wifi/</p><p>frameworks/base/core/java/android/net/</p><p>frameworks/opt/net/wifi/service/java/com/android/server/wifi</p><p>主要的类：</p></blockquote><table><thead><tr><th style="text-align:center">类</th><th style="text-align:center">功能</th></tr></thead><tbody><tr><td style="text-align:center">WifiManager</td><td style="text-align:center">它是Wifi模块向外部应用透漏出来的接口，其它所有应用都可以通过WifiManager来操作Wifi的各项功能，但是WifiManager本身不具备处理请求的能力，而是把所有的请求转发给WifServiceImpl来处理</td></tr><tr><td style="text-align:center">WifiService</td><td style="text-align:center">Framework中Wifi功能的总入口，负责Wifi功能的核心业务。它是服务器端的实现，作为Wifi部分的核心，处理实际的驱动加载、扫描、链接、断开等命令，以及底层上报的事件。对于主动的命令控制，WiFi是一个简单的封装，针对来自客户端的控制命令，调用相应的WifiNative底层实现</td></tr><tr><td style="text-align:center">WifiServiceImpl</td><td style="text-align:center">本身也不具备处理请求的能力，而是将请求分类后交给不同的处理者处理，比如WifiStateMachine。</td></tr><tr><td style="text-align:center">WifiStateMachine</td><td style="text-align:center">它是一个复杂的状态机，维护了Wifi的启动、扫描、连接、断开等多个状态。它运行自己独有的线程中，拥有自己的消息队列。</td></tr><tr><td style="text-align:center">WifiStateTracker</td><td style="text-align:center">除了负责WiFi的电源管理模式等功能外，其核心是WifiMonitor所实现的事件轮询机制，以及消息处理函数handleMessage()</td></tr><tr><td style="text-align:center">WifiMonitor</td><td style="text-align:center">专门负责接收来自Wpa_supplicant的事件，并将这些信息进行分类再交予StateMachine处理。</td></tr><tr><td style="text-align:center">WifiNative</td><td style="text-align:center">主要是提供一些native方法用于wifi framework层和WPAS通信。WifiNative的主要实现都在wifi.c函数里,WifiNative不过是将其封装,供framework层调用</td></tr></tbody></table><blockquote><p><strong>注：WifiService 和 WifiMonitor 是整个模块的核心。WifiService 负责启动关闭 wpa_supplicant、启动关闭 WifiMonitor 监视线程和把命令下发给 wpa_supplicant,而 WifiMonitor 则负责从 wpa_supplicant 接收事件通知。也就是说WifiService负责wifi整个流程的控制，而WifiMonitor负责监视底层的事件</strong></p></blockquote><h2 id="wifi-jni层"><a href="#wifi-jni层" class="headerlink" title="wifi jni层"></a>wifi jni层</h2><blockquote><p>frameworks/base/core/jni/android_net_wifi_Wifi.cpp</p><p>android_net_wifi_Wifi.cpp就是典型jni接口，通过它可以直接调用Wifi的硬件抽象层</p></blockquote><h2 id="wifi-Hardware层"><a href="#wifi-Hardware层" class="headerlink" title="wifi Hardware层"></a>wifi Hardware层</h2><blockquote><p>hardware/libhardware_legacy/wifi/wifi.c</p><p>Wifi Hardware层也叫wpa_supplicant适配层，是通用wpa_supplicant的封装。wpa_supplicant适配层起着承上启下的作用，主要用于与wpa_supplicant守护进程的通信，以供给Wifi框架层使用</p></blockquote><h2 id="wpa-supplicant层"><a href="#wpa-supplicant层" class="headerlink" title="wpa_supplicant层"></a>wpa_supplicant层</h2><blockquote><p>external/wpa_supplicant_8/</p><p>该层是Wifi FrameWork层的基石，也叫Wifi服务层。经过编译后主要结果是生成动态库libwpa_client.so和可执行程序wpa_supplicant。</p></blockquote><ol><li><p>wpa_client (生成库libwpaclient.so)</p><p>external/wpa_supplicant_8/wpa_supplicant/src/common/wpa_ctrl.c</p></li><li>wpa_server (生成守护进程wpa_supplicant)<br>external/wpa_supplicant_8/wpa_supplicant/main.c</li></ol><h2 id="wifi-kernel层"><a href="#wifi-kernel层" class="headerlink" title="wifi kernel层"></a>wifi kernel层</h2><blockquote><p>kernel/drivers/net/wireless</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> wifi模块 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wifi </tag>
            
            <tag> wpa_supplicant </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[bug]wlan_logs-disapper</title>
      <link href="/2019/06/25/bug-wlan-logs-disapper/"/>
      <url>/2019/06/25/bug-wlan-logs-disapper/</url>
      
        <content type="html"><![CDATA[<h1 id="BUG"><a href="#BUG" class="headerlink" title="BUG"></a>BUG</h1><blockquote><p>After the machine is flashed,the wlan_logs folder appears in the file, and the<br>log is continuously printd.</p><p>when i use the latest version to test ,the bug changed!</p><p>when i open the T card log,the wlan_logs disapper,so i record the analysis in<br>my blog.</p></blockquote><h1 id="Expected-result"><a href="#Expected-result" class="headerlink" title="Expected result"></a>Expected result</h1><blockquote><p>wlan_logs closed by default,when i open T card log ,the wlan_logs appears.</p></blockquote><h1 id="T-card-log"><a href="#T-card-log" class="headerlink" title="T card log"></a>T card log</h1><blockquote><p>input telephone number “<em>#</em>#87#<em>#</em>“<br>click the button that “manual test”<br>click the button “t card log”<br>choose “Method 2”</p></blockquote><h1 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h1><blockquote><p>when i serch the code, cnss_diag_system has been compiled.so i suspect the<br>service did not start.<br>“/device/qcom/sdm660_64/init.target.rc”.i suspect the service add in<br>init_target.rc do not start.so i changed to start service in init.rc.</p></blockquote><h1 id="Resolved"><a href="#Resolved" class="headerlink" title="Resolved"></a>Resolved</h1><h2 id="add-in-init-rc"><a href="#add-in-init-rc" class="headerlink" title="add in init.rc"></a>add in init.rc</h2><blockquote><p>“/system/core/rootdir/init.rc”<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//add wlan log</span><br><span class="line">service cnss_diag /system/bin/cnss_diag_system -q -f</span><br><span class="line">class main</span><br><span class="line">user system</span><br><span class="line">group system wifi inet net_admin sdcard_rw media_rw diag</span><br><span class="line">disabled</span><br><span class="line">oneshot</span><br><span class="line"></span><br><span class="line">on property:sys.cnss_diag.enable=1</span><br><span class="line">start cnss_diag</span><br><span class="line">//end</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>when i change this case, i didnot get the Expected results.but when i input<br>in the bush “setprop sys.cnss_diag.enable 1”,the wlan_logs appears.<br>when i catch the logcat log,i found the problem</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">logcat -vv | grep scontext</span><br><span class="line">cnss_diag_styste: type=1400 audit(0.0:52822): avc: denied&#123; create &#125; for</span><br><span class="line">scontext=u:r:cnss_diag_system:s0 tcontext=u:r:cnss_diag_system:s0</span><br><span class="line">tclass=udp_socket permissive=0</span><br></pre></td></tr></table></figure><blockquote><p>so i need to add cnss_diag_system selinux</p></blockquote><h2 id="fix-selinux"><a href="#fix-selinux" class="headerlink" title="fix selinux"></a>fix selinux</h2><blockquote><p>add cnss_diag_system selinux<br>“device/qcom/sepolicy/vendor/common/file_contexts”</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/(vendor|system)/bin/cnss_diag_system   u:object_r:wcnss_service_exec:s0</span><br></pre></td></tr></table></figure><blockquote><p>“device/qcom/sepolicy/vendor/common/wcnss_service.te”<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># for wlan driver/fw logs</span><br><span class="line">allow wcnss_service diag_device:chr_file &#123; read write &#125;;</span><br></pre></td></tr></table></figure></p></blockquote><h1 id="Root-cause"><a href="#Root-cause" class="headerlink" title="Root cause"></a>Root cause</h1><blockquote><p>the service donot start and selinux </p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> wifi </tag>
            
            <tag> selinux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>freertos任务级临界代码保护</title>
      <link href="/2019/06/22/freertos%E4%BB%BB%E5%8A%A1%E7%BA%A7%E4%B8%B4%E7%95%8C%E4%BB%A3%E7%A0%81%E4%BF%9D%E6%8A%A4/"/>
      <url>/2019/06/22/freertos%E4%BB%BB%E5%8A%A1%E7%BA%A7%E4%B8%B4%E7%95%8C%E4%BB%A3%E7%A0%81%E4%BF%9D%E6%8A%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="ROOT"><a href="#ROOT" class="headerlink" title="ROOT"></a>ROOT</h1><blockquote><p>最近做项目过程中，调用播放tts语音接口播放语音时概率性出现语音播报卡顿问题，下面对此问题解决过程做个简单记录。<br>代码框架是一个语音播报任务，其他任务需要播报语音给此任务发送播报消息，收到播报消息后，播报对应消息的内容即可。</p></blockquote><p><img src="图1.jpg" alt="图1"></p><h1 id="任务优先级"><a href="#任务优先级" class="headerlink" title="任务优先级"></a>任务优先级</h1><blockquote><p>播报时卡顿，可能是因为播报过程中被其他任务打断造成的，所以从提高任务优先级方向考虑一下。<br>查看代码FreeRTOSConfig.h中configMAX_PRIORITIES值为任务优先级最大值（0~configMAX_PRIORITIES-1），查看其他任务的优先级别，将语音播报的优先级提高。<br>修改方法：</p></blockquote><h2 id="创建时增加其优先级"><a href="#创建时增加其优先级" class="headerlink" title="创建时增加其优先级"></a>创建时增加其优先级</h2><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:left">含义</th></tr></thead><tbody><tr><td style="text-align:center">pvTaskCode</td><td style="text-align:left">指向任务的入口函数. 任务必须执行并且永不返回 (即：无限循环，一个句柄).</td></tr><tr><td style="text-align:center">pcName</td><td style="text-align:left">描述任务的名字。主要便于调试。最大长度由configMAX_TASK_NAME_LEN.定义</td></tr><tr><td style="text-align:center">usStackDepth</td><td style="text-align:left">指定任务堆栈的大小 ，堆栈能保护变量的数目- 不是字节数. 例如，如果堆栈为16位宽度，usStackDepth定义为 100, 200</td></tr><tr><td style="text-align:center">pvParameters</td><td style="text-align:left">指针用于作为一个参数传向创建的任务</td></tr><tr><td style="text-align:center">uxPriority</td><td style="text-align:left">任务运行时的优先级( 0 : 优先级最低)</td></tr><tr><td style="text-align:center">pvCreatedTask</td><td style="text-align:left">用于传递一个处理——引用创建的任务</td></tr></tbody></table><h2 id="调用函数接口修改任务优先级"><a href="#调用函数接口修改任务优先级" class="headerlink" title="调用函数接口修改任务优先级"></a>调用函数接口修改任务优先级</h2><blockquote><p>void vTaskPrioritySet( TaskHandle_t pxTask, UBaseType_t uxNewPriority );</p></blockquote><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>pxTask</td><td>任务句柄</td></tr><tr><td>uxNewPriority</td><td>给任务配置的新的优先级</td></tr></tbody></table><blockquote><p>修改任务优先级后，此问题没有根本解决。</p></blockquote><h1 id="freertos调度锁"><a href="#freertos调度锁" class="headerlink" title="freertos调度锁"></a>freertos调度锁</h1><blockquote><p>增加任务优先级后，不能解决问题，现在想通过关闭freertos任务调度，尝试解决。<br>任务调度锁：调度锁就是 RTOS 提供的调度器开关函数，如果某个任务调用了调度锁开关函数，处于调度锁开和调度锁关之间的代码在执行期间是不会被高优先级的任务抢占的，即任务调度被禁止。这一点要跟临界段的作用区分开，调度锁只是禁止了任务调度，并没有关闭任何中断，中断还是正常执行的。而临界段进行了开关中断操作。<br>调度锁开启：void vTaskSuspendAll( void );<br>调度锁关闭：BaseType_t xTaskResumeAll(void)；此函数返回 pdTRUE，否则返回 pdFALSE<br>强制任务切换：taskYIELD() 主动让出cpu,让同优先级的其他task获得cpu,因为没有其他优先级的task,所有调度器不会切换优先级<br><strong>注意</strong>：<br>调度锁函数只是禁止了任务调度，并没有关闭任何中断。<br>调度锁开启函数 vTaskSuspendAll 和调度锁关闭函数 xTaskResumeAll 一定要成对使用。<br>切不可在调度锁开启函数 vTaskSuspendAll 和调度锁关闭函数 xTaskResumeAll 之间调用任何会引起任务切换的 API，比如 vTaskDelayUntil、 vTaskDelay、 xQueueSend 等。<br>代码中做如下修改：</p></blockquote><p><img src="图2.jpg" alt="图2"></p><h1 id="任务临界代码保护机制"><a href="#任务临界代码保护机制" class="headerlink" title="任务临界代码保护机制"></a>任务临界代码保护机制</h1><blockquote><p>临界段代码也叫做临界区，是指那些必须完整运行，不能被打断的代码段，比如本文中tts语音播报就是不能被打断的，否则，就会出现所谓的语音卡顿问题。<br>FreeRTOS 与临界段代码保护有关的函数有4 个： taskENTER_CRITICAL() 、taskEXIT_CRITICAL() 、taskENTER_CRITICAL_FROM_ISR() 和taskEXIT_CRITICAL_FROM_ISR()，这四个函数其实是宏定义，在task.h 文件中有定义。这四个函数的区别是前两个是任务级的临界段代码保护，后两个是中断级的临界段代码保护。<br>本文介绍下任务的临界代码保护。<br>taskENTER_CRITICAL()和taskEXIT_CRITICAL()是任务级的临界代码保护，一个是进入临界段，一个是退出临界段，这两个函数是成对使用的，可自行去tasks.c中查看。<br>使用方法很简单，在临界区代码上下直接调用即可。</p></blockquote><p><img src="图3.jpg" alt="图3"></p><blockquote><p>播报语音卡顿问题就此解决。<br>注意：<br>注意临界区代码需要尽量的精简，因为进入临界区会关闭中断，这样会导致优先级低于configMAX_SYSCALL_INTERRUPT_PRIORITY 的中断得不到及时的响应。<br>至于configMAX_SYSCALL_INTERRUPT_PRIORITY定义在FreeRTOSConfig.h中，可自行配置，此定义应用于RTOS临界区屏蔽，逻辑优先级高于此值的中断不受RTOS影响，逻辑优先级低于此值的中断会被屏蔽。</p><p>中断级的临界段代码保护应用与中断处理函数中，使用方法相同，此处不做介绍。</p></blockquote><p>原文：<a href="https://blog.csdn.net/qq_38240926/article/details/93056534" target="_blank" rel="noopener">https://blog.csdn.net/qq_38240926/article/details/93056534</a> </p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 单片机 </tag>
            
            <tag> freertos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[bug]how-to-close-wifi-powersave-and-autoscan</title>
      <link href="/2019/06/17/bug-how-to-close-wifi-powersave-and-autoscan/"/>
      <url>/2019/06/17/bug-how-to-close-wifi-powersave-and-autoscan/</url>
      
        <content type="html"><![CDATA[<p><img src="20190617_01.jpg" alt="20190617_01.jpg"></p><h1 id="bug-description"><a href="#bug-description" class="headerlink" title="bug description"></a>bug description</h1><blockquote><p>wifi test need to close wifi power save mode and autoscan.</p></blockquote><h1 id="close-power-save-mode"><a href="#close-power-save-mode" class="headerlink" title="close power save mode"></a>close power save mode</h1><blockquote><p>ensure the follow methods in WCNSS_qcom_cfg.ini</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">gEnableImps=0</span><br><span class="line">gEnableBmps=0</span><br><span class="line">FastTransitionEnable=0</span><br><span class="line">FastRomeEnable=0</span><br><span class="line">gEnableDFSchnlScan=0</span><br><span class="line">gEnableRTSProfiles=0(for remove/wcn39x0)</span><br><span class="line">gDualMacFeatureDisable=1(for wcn39x0)</span><br></pre></td></tr></table></figure><h1 id="close-auto-scan"><a href="#close-auto-scan" class="headerlink" title="close auto scan"></a>close auto scan</h1><blockquote><p>connected to CMW500/M8860C,run ADB command to disable auto scan</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iwpriv wlan0 dump 311 1 (remove wcn3680)</span><br><span class="line">adb shell iwpriv wlan0 scan_disable 1(for wcn39x0)</span><br><span class="line">adb shell iwpriv wlan0 setUnitTestCmd 9 2 1 0 (for wcn39x0)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> BUG记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wifi </tag>
            
            <tag> power save mode </tag>
            
            <tag> auto scan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[bug]cts-wifilinkstatus报错</title>
      <link href="/2019/06/16/bug-cts-wifilinkstatus%E6%8A%A5%E9%94%99/"/>
      <url>/2019/06/16/bug-cts-wifilinkstatus%E6%8A%A5%E9%94%99/</url>
      
        <content type="html"><![CDATA[<p><img src="bug_20190616_02.jpg" alt="bug_20190616_02.jpg"></p><h1 id="BUG详情"><a href="#BUG详情" class="headerlink" title="BUG详情"></a>BUG详情</h1><blockquote><p>此bug是在cts测试时遇到的</p><p>看logcat报错显示是wifigetlinklayerstatus报错。</p><p>这个问题遇到很多，cts好几条都是与之相关，还有在设置界面查看电池电量时，切换页面时很慢查看log，也是这个报错</p></blockquote><h2 id="ctsincidenthostTestCases-not-pass"><a href="#ctsincidenthostTestCases-not-pass" class="headerlink" title="ctsincidenthostTestCases not pass"></a>ctsincidenthostTestCases not pass</h2><blockquote><p>log:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.com.android.server.cts.BatteryStatsValicationTest<span class="comment">#testRealtime ERROR:</span></span><br><span class="line">junit.framework.AssertionFailedError.</span><br></pre></td></tr></table></figure></p></blockquote><h2 id="vtshalwifiv1-0Host-not-pass"><a href="#vtshalwifiv1-0Host-not-pass" class="headerlink" title="vtshalwifiv1_0Host not pass"></a>vtshalwifiv1_0Host not pass</h2><blockquote><p>log:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vtshalwifiv1_0Host<span class="comment">#wifistaifacehidltest.linklayerstatscollection(default)_32bit</span></span><br><span class="line">hardware/interfaces/wifi/1.0/vts/functional/wifi_sta_iface_hidl_test.cpp:152:Failure</span><br></pre></td></tr></table></figure></p></blockquote><h2 id="get-wifi-status-timeout-in-setting"><a href="#get-wifi-status-timeout-in-setting" class="headerlink" title="get wifi status timeout in setting"></a>get wifi status timeout in setting</h2><blockquote><p>log:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">WifiHAL:wifi_get_link_stats:requestResponse Error:-7</span><br><span class="line">wifivendorhal:getwifilinklayerstats failed &#123;.code =</span><br><span class="line">ERROR_UNKONWN,.description=.timed out&#125;</span><br></pre></td></tr></table></figure></p></blockquote><h2 id="ctsstatsHostTestCases-not-pass"><a href="#ctsstatsHostTestCases-not-pass" class="headerlink" title="ctsstatsHostTestCases not pass"></a>ctsstatsHostTestCases not pass</h2><blockquote><p>log:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">android.cts.stats.atom.HostAtomTests<span class="comment">#testWifiActivityInfo</span></span><br><span class="line">ERROR:java.lang.indexoutofboundsexception:index:0</span><br></pre></td></tr></table></figure></p></blockquote><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><blockquote><p>patch:<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//core/wma/src/wma_utils.c</span></span><br><span class="line"></span><br><span class="line">tx_power_level_values=(<span class="keyword">uint8_t</span> *)param_tlvs-&gt;tx_time_per_power_level;</span><br><span class="line">-<span class="keyword">if</span>(fixed_param-&gt;total_num_tx_power_levels &gt;)</span><br><span class="line">+<span class="keyword">if</span>(fixed_param-&gt;total_num_tx_power_levels &amp;&amp; </span><br><span class="line">+ fixed_param-&gt;total_num_tx_power_levels &gt;</span><br><span class="line">rs_results-&gt;total_num_tx_power_levels)&#123;</span><br><span class="line"><span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><h1 id="Root-Cause"><a href="#Root-Cause" class="headerlink" title="Root Cause"></a>Root Cause</h1><blockquote><p>Check if rs_results-&gt;total_num_tx_power_levels is allocated, before checking the OOB<br>in wma_unified_radio_tx_power_level_stats_event_handler for new<br>fixed_param-&gt;total_num_tx_power_levels<br>Original code was not present “if (rs_results-&gt;total_num_tx_power_levels”,<br>new code make sure ‘rs_results-&gt;total_num_tx_power_levels’ is allocated firstly. </p></blockquote><blockquote><p>this analysis provided from Qcom R&amp;D team. </p></blockquote>]]></content>
      
      
      <categories>
          
          <category> BUG记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wifi </tag>
            
            <tag> cts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[bug]wifi-p2p认证测试</title>
      <link href="/2019/06/16/bug-wifi-p2p%E8%AE%A4%E8%AF%81%E6%B5%8B%E8%AF%95/"/>
      <url>/2019/06/16/bug-wifi-p2p%E8%AE%A4%E8%AF%81%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p><img src="bug_20190616_01.jpg" alt="bug_20190616_01.jpg"></p><h1 id="BUG详情"><a href="#BUG详情" class="headerlink" title="BUG详情"></a>BUG详情</h1><blockquote><p>此bug在项目wifi认证阶段出现的<br>Direct P2P-6.1.12:it failed at step 11,the more data bit shall be 1 not 0.</p></blockquote><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><h2 id="step1"><a href="#step1" class="headerlink" title="step1"></a>step1</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">adb root</span><br><span class="line">adb pull /vendor/etc/wifi/WCNSS_qcom_cfg.ini .</span><br><span class="line"><span class="meta">#</span><span class="bash"> add/modify below item <span class="keyword">in</span> your WCNSS_qcom_cfg.ini file.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> gApLinkMonitorPeriod = 45</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> gGoLinkMonitorPeriod = 45</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> gGoKeepAlivePeriod = 255</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> gApKeepAlivePeriod = 255</span></span><br><span class="line">adb push WCNSS_qcom_cfg.ini /vendor/etc/wifi/ adb reboot</span><br></pre></td></tr></table></figure><h2 id="step-2"><a href="#step-2" class="headerlink" title="step 2"></a>step 2</h2><blockquote><p>make sure iwpriv tool in test phone.</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">adb root</span><br><span class="line">adb shell</span><br><span class="line">which iwpriv</span><br></pre></td></tr></table></figure><blockquote><p>if output show a path such as ‘/system/bin/iwpriv’ can indicate iwpriv tool in your test phone</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> BUG记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wifi认证 </tag>
            
            <tag> p2p </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[bug]WSC probe request帧错误</title>
      <link href="/2019/06/01/bug-WSC-probe-request%E5%B8%A7%E9%94%99%E8%AF%AF/"/>
      <url>/2019/06/01/bug-WSC-probe-request%E5%B8%A7%E9%94%99%E8%AF%AF/</url>
      
        <content type="html"><![CDATA[<p><img src="bug_20190601.jpg" alt="bug_20190601"></p><h1 id="BUG-详情"><a href="#BUG-详情" class="headerlink" title="BUG 详情"></a>BUG 详情</h1><blockquote><p>此bug是在项目在wifi认证阶段出现的，实验室测试出在WSC（WPS）的时候，发现probe request帧格式出现错误。<br>具体说来有两处错误</p></blockquote><h2 id="config-methods属性错误"><a href="#config-methods属性错误" class="headerlink" title="config methods属性错误"></a>config methods属性错误</h2><blockquote><p>config methods：value长度为2字节，共16位。每一位代表Enrollee或register支持的WSC配置方法。<br>usb, ethernet, label, display, virtual display, physical display, external NFC, internal NFC, NFC interface, push button, virtual push button, physical push button, keypad。<br>按照此项目需要将此属性的 display, virtual display, push button, virtual push button位打开，算出此属性应该为<strong>0x2280</strong>，而此时测试出的结果为<strong>0x3184</strong>。</p></blockquote><h2 id="model-name等属性值为空"><a href="#model-name等属性值为空" class="headerlink" title="model name等属性值为空"></a>model name等属性值为空</h2><blockquote><p>通过抓包发现，model name、manufacturer、model number、serial number 和 device_name 这些属性值为空</p></blockquote><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><blockquote><p>wpa_supplicant 通过解析wpa_supplicant.conf文件，来获取wifi的相关信息，如果需要更改config methods以及model name等属性，则可以在wpa_supplicant.conf文件中添加相关的词缀。<br>故我在wpa_supplicant.conf中添加如下信息：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">device_name=M690</span><br><span class="line">manufacturer=LONGCHEER</span><br><span class="line">model_name=M690</span><br><span class="line">model_number=M690</span><br><span class="line">serial_number=123456</span><br><span class="line">config methods=push_button virtual_push_button dispaly virtual_display</span><br></pre></td></tr></table></figure></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> BUG记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WSC </tag>
            
            <tag> wifi认证 </tag>
            
            <tag> WPS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>无奈的一天_20190529</title>
      <link href="/2019/05/29/%E6%97%A0%E5%A5%88%E7%9A%84%E4%B8%80%E5%A4%A9-20190529/"/>
      <url>/2019/05/29/%E6%97%A0%E5%A5%88%E7%9A%84%E4%B8%80%E5%A4%A9-20190529/</url>
      
        <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="输入密码，查看文章。" />    <label for="pass">输入密码，查看文章。</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 生活点滴 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 徐桔红 </tag>
            
            <tag> longcheer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>江湖再见</title>
      <link href="/2019/05/28/%E6%B1%9F%E6%B9%96%E5%86%8D%E8%A7%81/"/>
      <url>/2019/05/28/%E6%B1%9F%E6%B9%96%E5%86%8D%E8%A7%81/</url>
      
        <content type="html"><![CDATA[<h1 id="离别"><a href="#离别" class="headerlink" title="离别"></a>离别</h1><blockquote><p>上个月，也就是4/28我提出了离职，到现在为止一个月了，今天是我在宽翼的最后一天。和同事进行了交接，办理了离职手续。</p></blockquote><h1 id="思绪"><a href="#思绪" class="headerlink" title="思绪"></a>思绪</h1><blockquote><p>在宽翼不到一年的时间，说真的挺喜欢宽翼的，工作轻松，氛围也好，同事也很nice。如果不是我最近买房了，房贷压力大，我或许还会继续呆下去。当然也有一部分同事的相继离开有关，唉！</p></blockquote><h1 id="江湖再见"><a href="#江湖再见" class="headerlink" title="江湖再见"></a>江湖再见</h1><blockquote><p>不管如何，宽翼这段时光我会很怀念的，诸位，咱们江湖再见</p></blockquote><p><img src="江湖再见.jpg" alt="江湖再见"></p>]]></content>
      
      
      <categories>
          
          <category> 生活点滴 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 时光小记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sysfs和debugfs接口</title>
      <link href="/2019/05/27/sysfs%E5%92%8Cdebugfs%E6%8E%A5%E5%8F%A3/"/>
      <url>/2019/05/27/sysfs%E5%92%8Cdebugfs%E6%8E%A5%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="sysfs"><a href="#sysfs" class="headerlink" title="sysfs"></a>sysfs</h1><p><img src="sysfs设备模型.png" alt="sysfs设备模型"></p><blockquote><p>sysfs虚拟文件系统是使用kset,kobject,ktype组成一个有层次结构的模型，我们可以通过这个虚拟文件系统查看当前平台中的所有设备。内核也可以通过sysfs向上层传递参数。</p></blockquote><h2 id="sysfs接口api"><a href="#sysfs接口api" class="headerlink" title="sysfs接口api"></a>sysfs接口api</h2><h3 id="class-create"><a href="#class-create" class="headerlink" title="class_create"></a>class_create</h3><blockquote><p>在/sys/class目录下创建class类目录,</p><p>parameter：THIS_MODULE ， class_name</p><p>return： struct class 结构体</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">class_create(THIS_MODULE, <span class="string">"class_name"</span>);</span><br></pre></td></tr></table></figure><h3 id="kobject-create-and-add"><a href="#kobject-create-and-add" class="headerlink" title="kobject_create_and_add"></a>kobject_create_and_add</h3><blockquote><p>在/sys目录下创建目录</p><p>parameter：class_name ，struct kobject *parent</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">struct kobject *<span class="title">kobject_create_and_add</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *name, struct kobject *parent)</span></span></span><br></pre></td></tr></table></figure><h3 id="sysfs-create-file"><a href="#sysfs-create-file" class="headerlink" title="sysfs_create_file"></a>sysfs_create_file</h3><blockquote><p>在kobj对应目录下创建attr对应属性文件</p><p>parameter： kobj 在kobj目录下创建， attr属性文件</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">sysfs_create_file</span><span class="params">(struct kobject *kobj, <span class="keyword">const</span> struct attribute *attr)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">attribute</span> &#123;</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>*name;</span><br><span class="line"><span class="keyword">umode_t</span>mode;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> CONFIG_DEBUG_LOCK_ALLOC</span></span><br><span class="line"><span class="keyword">bool</span>ignore_lockdep:<span class="number">1</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">lock_class_key</span>*<span class="title">key</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">lock_class_key</span><span class="title">skey</span>;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="device-create-file"><a href="#device-create-file" class="headerlink" title="device_create_file"></a>device_create_file</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * device_create_file - create sysfs attribute file for device.</span></span><br><span class="line"><span class="comment"> * @dev: device.</span></span><br><span class="line"><span class="comment"> * @attr: device attribute descriptor.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">device_create_file</span><span class="params">(struct device *dev,</span></span></span><br><span class="line"><span class="function"><span class="params">               <span class="keyword">const</span> struct device_attribute *attr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> error = <span class="number">0</span>; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (dev) &#123;</span><br><span class="line">        WARN(((attr-&gt;attr.mode &amp; S_IWUGO) &amp;&amp; !attr-&gt;store),</span><br><span class="line">            <span class="string">"Attribute %s: write permission without 'store'\n"</span>,</span><br><span class="line">            attr-&gt;attr.name);</span><br><span class="line">        WARN(((attr-&gt;attr.mode &amp; S_IRUGO) &amp;&amp; !attr-&gt;show),</span><br><span class="line">            <span class="string">"Attribute %s: read permission without 'show'\n"</span>,                                                   attr-&gt;attr.name);</span><br><span class="line">        error = sysfs_create_file(&amp;dev-&gt;kobj, &amp;attr-&gt;attr);</span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="keyword">return</span> error;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="sysfs-create-group"><a href="#sysfs-create-group" class="headerlink" title="sysfs_create_group"></a>sysfs_create_group</h3><blockquote><p>sysfs_create_group - given a directory kobject, create an attribute group</p><p>kobj:    The kobject to create the group on</p><p>grp:    The attribute group to create</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sysfs_create_group</span><span class="params">(struct kobject *kobj,<span class="keyword">const</span> struct attribute_group *grp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> internal_create_group(kobj, <span class="number">0</span>, grp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="sysfs-create-groups"><a href="#sysfs-create-groups" class="headerlink" title="sysfs_create_groups"></a>sysfs_create_groups</h3><blockquote><p>sysfs_create_groups - given a directory kobject, create a bunch of attribute groups</p><p>kobj:    The kobject to create the group on</p><p>groups:    The attribute groups to create, NULL terminated</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sysfs_create_groups</span><span class="params">(struct kobject *kobj,</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">const</span> struct attribute_group **groups)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> error = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!groups)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; groups[i]; i++) &#123;</span><br><span class="line">error = sysfs_create_group(kobj, groups[i]);</span><br><span class="line"><span class="keyword">if</span> (error) &#123;</span><br><span class="line"><span class="keyword">while</span> (--i &gt;= <span class="number">0</span>)</span><br><span class="line">sysfs_remove_group(kobj, groups[i]);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> error;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="strcut-attribute"><a href="#strcut-attribute" class="headerlink" title="strcut attribute"></a>strcut attribute</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">attribute</span> *<span class="title">demo_attr</span>[] = &#123;</span></span><br><span class="line">&amp;demo_kobj_attr_show.attr,</span><br><span class="line">&amp;demo_kobj_attr_store.attr,</span><br><span class="line"><span class="literal">NULL</span>, <span class="comment">//必须要有</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ssize_t</span> demo_show(struct kobject *kobj,struct kobj_attribute *attr,<span class="keyword">char</span> *ubuf)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">char</span> info[] = <span class="string">"kernel show is called\n"</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">sprintf</span>(ubuf,<span class="string">"%s"</span>,info);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ssize_t</span> demo_store(struct kobject *kobj,struct kobj_attribute *attr,<span class="keyword">const</span> <span class="keyword">char</span> *ubuf,<span class="keyword">size_t</span> count)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">strncpy</span>(kbuf,ubuf,count);</span><br><span class="line"></span><br><span class="line">printk(<span class="string">"recv from user %s\n"</span>,kbuf);</span><br><span class="line"><span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> 0</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">kobj_attribute</span> <span class="title">demo_kobj_attr_show</span> = &#123;</span></span><br><span class="line">.attr = &#123;</span><br><span class="line">.name = <span class="string">"show"</span>,<span class="comment">//shou就是一个属性文件名</span></span><br><span class="line">.mode = S_IRUSR,</span><br><span class="line">&#125;,</span><br><span class="line">.show = demo_show,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">kobj_attribute</span> <span class="title">demo_kobj_attr_store</span> = &#123;</span></span><br><span class="line">.attr = &#123;</span><br><span class="line">.name = <span class="string">"store"</span>,<span class="comment">//也是一个属性文件名</span></span><br><span class="line">.mode = S_IWUSR,</span><br><span class="line">&#125;,</span><br><span class="line">.store = demo_store,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//show和store是属性文件名</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">kobj_attribute</span> <span class="title">demo_kobj_attr_show</span> = __<span class="title">ATTR</span>(<span class="title">show</span>,<span class="title">S_IRUSR</span>,<span class="title">demo_show</span>,<span class="title">NULL</span>);</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">kobj_attribute</span> <span class="title">demo_kobj_attr_store</span> = __<span class="title">ATTR</span>(<span class="title">store</span>,<span class="title">S_IWUSR</span>,<span class="title">NULL</span>,<span class="title">demo_store</span>);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><h3 id="DEVICE-ATTR"><a href="#DEVICE-ATTR" class="headerlink" title="DEVICE_ATTR"></a>DEVICE_ATTR</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DEVICE_ATTR(_name, _mode, _show, _store) \</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">device_attribute</span> <span class="title">dev_attr_</span>##_<span class="title">name</span> = __<span class="title">ATTR</span>(_<span class="title">name</span>, _<span class="title">mode</span>, _<span class="title">show</span>, _<span class="title">store</span>)</span></span><br></pre></td></tr></table></figure><h2 id="代码实例"><a href="#代码实例" class="headerlink" title="代码实例"></a>代码实例</h2><blockquote><p>使用内核提供的实例代码：samples/kobject/kset-example.c</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Sample kset and ktype implementation</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Copyright (C) 2004-2007 Greg Kroah-Hartman &lt;greg@kroah.com&gt;</span></span><br><span class="line"><span class="comment"> * Copyright (C) 2007 Novell Inc.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Released under the GPL version 2 only.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/kobject.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/sysfs.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/slab.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/module.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/init.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * This module shows how to create a kset in sysfs called</span></span><br><span class="line"><span class="comment"> * /sys/kernel/kset-example</span></span><br><span class="line"><span class="comment"> * Then tree kobjects are created and assigned to this kset, "foo", "baz",</span></span><br><span class="line"><span class="comment"> * and "bar".  In those kobjects, attributes of the same name are also</span></span><br><span class="line"><span class="comment"> * created and if an integer is written to these files, it can be later</span></span><br><span class="line"><span class="comment"> * read out of it.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * This is our "object" that we will create a few of and register them with</span></span><br><span class="line"><span class="comment"> * sysfs.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">foo_obj</span> &#123;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">kobject</span> <span class="title">kobj</span>;</span></span><br><span class="line"><span class="keyword">int</span> foo;</span><br><span class="line"><span class="keyword">int</span> baz;</span><br><span class="line"><span class="keyword">int</span> bar;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> to_foo_obj(x) container_of(x, struct foo_obj, kobj)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* a custom attribute that works just for a struct foo_obj. */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">foo_attribute</span> &#123;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">attribute</span> <span class="title">attr</span>;</span></span><br><span class="line"><span class="keyword">ssize_t</span> (*show)(struct foo_obj *foo, struct foo_attribute *attr, <span class="keyword">char</span> *buf);</span><br><span class="line"><span class="keyword">ssize_t</span> (*store)(struct foo_obj *foo, struct foo_attribute *attr, <span class="keyword">const</span> <span class="keyword">char</span> *buf, <span class="keyword">size_t</span> count);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> to_foo_attr(x) container_of(x, struct foo_attribute, attr)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * The default show function that must be passed to sysfs.  This will be</span></span><br><span class="line"><span class="comment"> * called by sysfs for whenever a show function is called by the user on a</span></span><br><span class="line"><span class="comment"> * sysfs file associated with the kobjects we have registered.  We need to</span></span><br><span class="line"><span class="comment"> * transpose back from a "default" kobject to our custom struct foo_obj and</span></span><br><span class="line"><span class="comment"> * then call the show function for that specific object.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> ssize_t <span class="title">foo_attr_show</span><span class="params">(struct kobject *kobj,</span></span></span><br><span class="line"><span class="function"><span class="params">     struct attribute *attr,</span></span></span><br><span class="line"><span class="function"><span class="params">     <span class="keyword">char</span> *buf)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">foo_attribute</span> *<span class="title">attribute</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">foo_obj</span> *<span class="title">foo</span>;</span></span><br><span class="line"></span><br><span class="line">attribute = to_foo_attr(attr);</span><br><span class="line">foo = to_foo_obj(kobj);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!attribute-&gt;show)</span><br><span class="line"><span class="keyword">return</span> -EIO;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> attribute-&gt;show(foo, attribute, buf);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Just like the default show function above, but this one is for when the</span></span><br><span class="line"><span class="comment"> * sysfs "store" is requested (when a value is written to a file.)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> ssize_t <span class="title">foo_attr_store</span><span class="params">(struct kobject *kobj,</span></span></span><br><span class="line"><span class="function"><span class="params">      struct attribute *attr,</span></span></span><br><span class="line"><span class="function"><span class="params">      <span class="keyword">const</span> <span class="keyword">char</span> *buf, <span class="keyword">size_t</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">foo_attribute</span> *<span class="title">attribute</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">foo_obj</span> *<span class="title">foo</span>;</span></span><br><span class="line"></span><br><span class="line">attribute = to_foo_attr(attr);</span><br><span class="line">foo = to_foo_obj(kobj);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!attribute-&gt;store)</span><br><span class="line"><span class="keyword">return</span> -EIO;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> attribute-&gt;store(foo, attribute, buf, len);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Our custom sysfs_ops that we will associate with our ktype later on */</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="class"><span class="keyword">struct</span> <span class="title">sysfs_ops</span> <span class="title">foo_sysfs_ops</span> = &#123;</span></span><br><span class="line">.show = foo_attr_show,</span><br><span class="line">.store = foo_attr_store,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * The release function for our object.  This is REQUIRED by the kernel to</span></span><br><span class="line"><span class="comment"> * have.  We free the memory held in our object here.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * NEVER try to get away with just a "blank" release function to try to be</span></span><br><span class="line"><span class="comment"> * smarter than the kernel.  Turns out, no one ever is...</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">foo_release</span><span class="params">(struct kobject *kobj)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">foo_obj</span> *<span class="title">foo</span>;</span></span><br><span class="line"></span><br><span class="line">foo = to_foo_obj(kobj);</span><br><span class="line">kfree(foo);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * The "foo" file where the .foo variable is read from and written to.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> ssize_t <span class="title">foo_show</span><span class="params">(struct foo_obj *foo_obj, struct foo_attribute *attr,</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">char</span> *buf)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">sprintf</span>(buf, <span class="string">"%d\n"</span>, foo_obj-&gt;foo);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> ssize_t <span class="title">foo_store</span><span class="params">(struct foo_obj *foo_obj, struct foo_attribute *attr,</span></span></span><br><span class="line"><span class="function"><span class="params"> <span class="keyword">const</span> <span class="keyword">char</span> *buf, <span class="keyword">size_t</span> count)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">sscanf</span>(buf, <span class="string">"%du"</span>, &amp;foo_obj-&gt;foo);</span><br><span class="line"><span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Sysfs attributes cannot be world-writable. */</span></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">foo_attribute</span> <span class="title">foo_attribute</span> =</span></span><br><span class="line"><span class="class">__<span class="title">ATTR</span>(<span class="title">foo</span>, 0664, <span class="title">foo_show</span>, <span class="title">foo_store</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * More complex function where we determine which variable is being accessed by</span></span><br><span class="line"><span class="comment"> * looking at the attribute for the "baz" and "bar" files.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> ssize_t <span class="title">b_show</span><span class="params">(struct foo_obj *foo_obj, struct foo_attribute *attr,</span></span></span><br><span class="line"><span class="function"><span class="params">      <span class="keyword">char</span> *buf)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> var;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>(attr-&gt;attr.name, <span class="string">"baz"</span>) == <span class="number">0</span>)</span><br><span class="line">var = foo_obj-&gt;baz;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">var = foo_obj-&gt;bar;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">sprintf</span>(buf, <span class="string">"%d\n"</span>, var);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> ssize_t <span class="title">b_store</span><span class="params">(struct foo_obj *foo_obj, struct foo_attribute *attr,</span></span></span><br><span class="line"><span class="function"><span class="params">       <span class="keyword">const</span> <span class="keyword">char</span> *buf, <span class="keyword">size_t</span> count)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> var;</span><br><span class="line"></span><br><span class="line"><span class="built_in">sscanf</span>(buf, <span class="string">"%du"</span>, &amp;var);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>(attr-&gt;attr.name, <span class="string">"baz"</span>) == <span class="number">0</span>)</span><br><span class="line">foo_obj-&gt;baz = var;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">foo_obj-&gt;bar = var;</span><br><span class="line"><span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">foo_attribute</span> <span class="title">baz_attribute</span> =</span></span><br><span class="line"><span class="class">__<span class="title">ATTR</span>(<span class="title">baz</span>, 0664, <span class="title">b_show</span>, <span class="title">b_store</span>);</span></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">foo_attribute</span> <span class="title">bar_attribute</span> =</span></span><br><span class="line"><span class="class">__<span class="title">ATTR</span>(<span class="title">bar</span>, 0664, <span class="title">b_show</span>, <span class="title">b_store</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Create a group of attributes so that we can create and destroy them all</span></span><br><span class="line"><span class="comment"> * at once.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">attribute</span> *<span class="title">foo_default_attrs</span>[] = &#123;</span></span><br><span class="line">&amp;foo_attribute.attr,</span><br><span class="line">&amp;baz_attribute.attr,</span><br><span class="line">&amp;bar_attribute.attr,</span><br><span class="line"><span class="literal">NULL</span>,<span class="comment">/* need to NULL terminate the list of attributes */</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Our own ktype for our kobjects.  Here we specify our sysfs ops, the</span></span><br><span class="line"><span class="comment"> * release function, and the set of default attributes we want created</span></span><br><span class="line"><span class="comment"> * whenever a kobject of this type is registered with the kernel.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">kobj_type</span> <span class="title">foo_ktype</span> = &#123;</span></span><br><span class="line">.sysfs_ops = &amp;foo_sysfs_ops,</span><br><span class="line">.release = foo_release,</span><br><span class="line">.default_attrs = foo_default_attrs,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">kset</span> *<span class="title">example_kset</span>;</span></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">foo_obj</span> *<span class="title">foo_obj</span>;</span></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">foo_obj</span> *<span class="title">bar_obj</span>;</span></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">foo_obj</span> *<span class="title">baz_obj</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> struct foo_obj *<span class="title">create_foo_obj</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">foo_obj</span> *<span class="title">foo</span>;</span></span><br><span class="line"><span class="keyword">int</span> retval;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* allocate the memory for the whole object */</span></span><br><span class="line">foo = kzalloc(<span class="keyword">sizeof</span>(*foo), GFP_KERNEL);</span><br><span class="line"><span class="keyword">if</span> (!foo)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * As we have a kset for this kobject, we need to set it before calling</span></span><br><span class="line"><span class="comment"> * the kobject core.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="comment">//修改foo上层kset为example_kset目录</span></span><br><span class="line">foo-&gt;kobj.kset = example_kset;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Initialize and add the kobject to the kernel.  All the default files</span></span><br><span class="line"><span class="comment"> * will be created here.  As we have already specified a kset for this</span></span><br><span class="line"><span class="comment"> * kobject, we don't have to set a parent for the kobject, the kobject</span></span><br><span class="line"><span class="comment"> * will be placed beneath that kset automatically.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">retval = kobject_init_and_add(&amp;foo-&gt;kobj, &amp;foo_ktype, <span class="literal">NULL</span>, <span class="string">"%s"</span>, name);</span><br><span class="line"><span class="keyword">if</span> (retval) &#123;</span><br><span class="line">kobject_put(&amp;foo-&gt;kobj);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * We are always responsible for sending the uevent that the kobject</span></span><br><span class="line"><span class="comment"> * was added to the system.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">kobject_uevent(&amp;foo-&gt;kobj, KOBJ_ADD);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> foo;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">destroy_foo_obj</span><span class="params">(struct foo_obj *foo)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">kobject_put(&amp;foo-&gt;kobj);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> __<span class="function">init <span class="title">example_init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Create a kset with the name of "kset_example",</span></span><br><span class="line"><span class="comment"> * located under /sys/kernel/</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="comment">//在/sys/kernel/下创建kset_example目录</span></span><br><span class="line">example_kset = kset_create_and_add(<span class="string">"kset_example"</span>, <span class="literal">NULL</span>, kernel_kobj);</span><br><span class="line"><span class="keyword">if</span> (!example_kset)</span><br><span class="line"><span class="keyword">return</span> -ENOMEM;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Create three objects and register them with our kset</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="comment">//在/sys/kernel/kset_example下创建foo、bar、baz三个文件夹</span></span><br><span class="line">foo_obj = create_foo_obj(<span class="string">"foo"</span>);</span><br><span class="line"><span class="keyword">if</span> (!foo_obj)</span><br><span class="line"><span class="keyword">goto</span> foo_error;</span><br><span class="line"></span><br><span class="line">bar_obj = create_foo_obj(<span class="string">"bar"</span>);</span><br><span class="line"><span class="keyword">if</span> (!bar_obj)</span><br><span class="line"><span class="keyword">goto</span> bar_error;</span><br><span class="line"></span><br><span class="line">baz_obj = create_foo_obj(<span class="string">"baz"</span>);</span><br><span class="line"><span class="keyword">if</span> (!baz_obj)</span><br><span class="line"><span class="keyword">goto</span> baz_error;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">baz_error:</span><br><span class="line">destroy_foo_obj(bar_obj);</span><br><span class="line">bar_error:</span><br><span class="line">destroy_foo_obj(foo_obj);</span><br><span class="line">foo_error:</span><br><span class="line">kset_unregister(example_kset);</span><br><span class="line"><span class="keyword">return</span> -EINVAL;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">void</span> __<span class="function"><span class="built_in">exit</span> <span class="title">example_exit</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">destroy_foo_obj(baz_obj);</span><br><span class="line">destroy_foo_obj(bar_obj);</span><br><span class="line">destroy_foo_obj(foo_obj);</span><br><span class="line">kset_unregister(example_kset);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">module_init(example_init);</span><br><span class="line">module_exit(example_exit);</span><br><span class="line">MODULE_LICENSE(<span class="string">"GPL"</span>);</span><br><span class="line">MODULE_AUTHOR(<span class="string">"Greg Kroah-Hartman &lt;greg@kroah.com&gt;"</span>);</span><br></pre></td></tr></table></figure><h1 id="debugfs"><a href="#debugfs" class="headerlink" title="debugfs"></a>debugfs</h1><blockquote><p>DebugFS，顾名思义，是一种用于内核调试的虚拟文件系统，内核开发者通过debugfs和用户空间交换数据。通常情况下，最常用的内核调试手段是printk。但printk并不是所有情况都好用，比如打印的数据可能过多，我们真正关心的数据在大量的输出里不是那么一目了然；或者我们在调试时可能需要修改某些内核变量，这种情况下printk就无能为力，而如果为了修改某个值重新编译内核或者驱动又过于低效，此时就需要一个临时的文件系统可以把我们需要关心的数据映射到用户空间。</p></blockquote><h2 id="debugfs接口api"><a href="#debugfs接口api" class="headerlink" title="debugfs接口api"></a>debugfs接口api</h2><h3 id="debugfs-create-dir"><a href="#debugfs-create-dir" class="headerlink" title="debugfs_create_dir"></a>debugfs_create_dir</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * debugfs_create_dir - create a directory in the debugfs filesystem</span></span><br><span class="line"><span class="comment"> * @name: a pointer to a string containing the name of the directory to</span></span><br><span class="line"><span class="comment"> *        create.</span></span><br><span class="line"><span class="comment"> * @parent: a pointer to the parent dentry for this file.  This should be a</span></span><br><span class="line"><span class="comment"> *          directory dentry if set.  If this parameter is NULL, then the</span></span><br><span class="line"><span class="comment"> *          directory will be created in the root of the debugfs filesystem.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This function creates a directory in debugfs with the given name.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This function will return a pointer to a dentry if it succeeds.  This</span></span><br><span class="line"><span class="comment"> * pointer must be passed to the debugfs_remove() function when the file is</span></span><br><span class="line"><span class="comment"> * to be removed (no automatic cleanup happens if your module is unloaded,</span></span><br><span class="line"><span class="comment"> * you are responsible here.)  If an error occurs, %NULL will be returned.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * If debugfs is not enabled in the kernel, the value -%ENODEV will be</span></span><br><span class="line"><span class="comment"> * returned.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">struct dentry *<span class="title">debugfs_create_dir</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *name, struct dentry *parent)</span>                                                                                              </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> __create_file(name, S_IFDIR | S_IRWXU | S_IRUGO | S_IXUGO,</span><br><span class="line">                   parent, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br><span class="line">EXPORT_SYMBOL_GPL(debugfs_create_dir);</span><br></pre></td></tr></table></figure><h3 id="debugfs-create-file"><a href="#debugfs-create-file" class="headerlink" title="debugfs_create_file"></a>debugfs_create_file</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**                                                                       </span></span><br><span class="line"><span class="comment"> * debugfs_create_file - create a file in the debugfs filesystem                                  </span></span><br><span class="line"><span class="comment"> * @name: a pointer to a string containing the name of the file to create.</span></span><br><span class="line"><span class="comment"> * @mode: the permission that the file should have.</span></span><br><span class="line"><span class="comment"> * @parent: a pointer to the parent dentry for this file.  This should be a</span></span><br><span class="line"><span class="comment"> *          directory dentry if set.  If this parameter is NULL, then the</span></span><br><span class="line"><span class="comment"> *          file will be created in the root of the debugfs filesystem.</span></span><br><span class="line"><span class="comment"> * @data: a pointer to something that the caller will want to get to later </span></span><br><span class="line"><span class="comment"> *        on.  The inode.i_private pointer will point to this value on     </span></span><br><span class="line"><span class="comment"> *        the open() call. </span></span><br><span class="line"><span class="comment"> * @fops: a pointer to a struct file_operations that should be used for</span></span><br><span class="line"><span class="comment"> *        this file.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This is the basic "create a file" function for debugfs.  It allows for a</span></span><br><span class="line"><span class="comment"> * wide range of flexibility in creating a file, or a directory (if you want</span></span><br><span class="line"><span class="comment"> * to create a directory, the debugfs_create_dir() function is</span></span><br><span class="line"><span class="comment"> * recommended to be used instead.)</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * This function will return a pointer to a dentry if it succeeds.  This</span></span><br><span class="line"><span class="comment"> * pointer must be passed to the debugfs_remove() function when the file is</span></span><br><span class="line"><span class="comment"> * to be removed (no automatic cleanup happens if your module is unloaded,</span></span><br><span class="line"><span class="comment"> * you are responsible here.)  If an error occurs, %NULL will be returned.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * If debugfs is not enabled in the kernel, the value -%ENODEV will be</span></span><br><span class="line"><span class="comment"> * returned.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">struct dentry *<span class="title">debugfs_create_file</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *name, <span class="keyword">umode_t</span> mode, </span></span></span><br><span class="line"><span class="function"><span class="params">struct dentry *parent, <span class="keyword">void</span> *data, <span class="keyword">const</span> struct file_operations *fops)</span>                       </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (mode &amp; S_IFMT) &#123;     </span><br><span class="line"><span class="keyword">case</span> S_IFREG:  </span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:     </span><br><span class="line"><span class="keyword">break</span>;     </span><br><span class="line"><span class="keyword">default</span>:   </span><br><span class="line">BUG();      </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> __create_file(name, mode, parent, data, fops);    </span><br><span class="line">&#125; </span><br><span class="line">EXPORT_SYMBOL_GPL(debugfs_create_file);</span><br></pre></td></tr></table></figure><h2 id="代码实例-1"><a href="#代码实例-1" class="headerlink" title="代码实例"></a>代码实例</h2><blockquote><p>下方代码的效果：在/sys/kernel/debug下创建bm_battery_debug目录，以及在此目录下创建bm_battery_vadc文件，并提供了show接口，用来查询电池的电压adc和温度adc值。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Power supply driver for the aw3215 emulator</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Copyright (C) 2008 Google, Inc.</span></span><br><span class="line"><span class="comment"> * Copyright (C) 2012 Intel, Inc.</span></span><br><span class="line"><span class="comment"> * Copyright (C) 2013 Intel, Inc.</span></span><br><span class="line"><span class="comment"> * Author: Mike Lockwood &lt;lockwood@android.com&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This software is licensed under the terms of the GNU General Public</span></span><br><span class="line"><span class="comment"> * License version 2, as published by the Free Software Foundation, and</span></span><br><span class="line"><span class="comment"> * may be copied, distributed, and modified under those terms.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This program is distributed in the hope that it will be useful,</span></span><br><span class="line"><span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span></span><br><span class="line"><span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></span><br><span class="line"><span class="comment"> * GNU General Public License for more details.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/module.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/err.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/platform_device.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/power_supply.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/pci.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/interrupt.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/io.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/gpio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/of_gpio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/slab.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/qpnp/qpnp-adc.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/delay.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/workqueue.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/notifier.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/export.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/kernel.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/errno.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;asm/delay.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/init.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/timer.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/usb/msm_hsusb.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/reboot.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"../../include/bmtfeatures.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/fs.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/uaccess.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/debugfs.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/seq_file.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CUTOFF_CUR_LEVEL 2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ADC_BUFF_LEN 100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PERCENT_BUFF_LEN 100</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> adc_buff[ADC_BUFF_LEN] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> percent_buff[PERCENT_BUFF_LEN] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">bool</span> charge_full_mask=<span class="literal">false</span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">bat_get_chg_cap_percent</span><span class="params">(<span class="keyword">int64_t</span> bat_vol)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">bat_get_dischg_cap_percent</span><span class="params">(<span class="keyword">int64_t</span> bat_vol)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> int64_t <span class="title">batt_avg_adc</span><span class="params">(<span class="keyword">int64_t</span> bat_voltage)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">batt_avg_percent</span><span class="params">(<span class="keyword">int</span> percent)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">get_bm_ftm</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> retry_cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> init_temperature_config_OK = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> init_bm_ftm_OK = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> bm_ftm_mode = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// r600 battery capacity table </span></span><br><span class="line"><span class="comment">//index is the percent% of battery capacity ,so index 0 is 0, index 101 is +inf</span></span><br><span class="line"><span class="comment">//value is in mV</span></span><br><span class="line"><span class="comment">//this battery's nominal capacity is:2000mAh,step is 20mAh</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> 0</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> r700_chg_bat_voltage[<span class="number">102</span>]=</span><br><span class="line">&#123;</span><br><span class="line"><span class="number">0</span>,</span><br><span class="line"><span class="number">3309</span>,<span class="number">3318</span>,<span class="number">3327</span>,<span class="number">3336</span>,<span class="number">3345</span>,<span class="number">3354</span>,<span class="number">3363</span>,<span class="number">3372</span>,<span class="number">3381</span>,<span class="number">3390</span>,</span><br><span class="line"><span class="number">3399</span>,<span class="number">3408</span>,<span class="number">3417</span>,<span class="number">3426</span>,<span class="number">3435</span>,<span class="number">3444</span>,<span class="number">3453</span>,<span class="number">3462</span>,<span class="number">3471</span>,<span class="number">3480</span>,</span><br><span class="line"><span class="number">3489</span>,<span class="number">3498</span>,<span class="number">3507</span>,<span class="number">3516</span>,<span class="number">3525</span>,<span class="number">3534</span>,<span class="number">3543</span>,<span class="number">3552</span>,<span class="number">3561</span>,<span class="number">3570</span>,</span><br><span class="line"><span class="number">3579</span>,<span class="number">3588</span>,<span class="number">3597</span>,<span class="number">3606</span>,<span class="number">3615</span>,<span class="number">3624</span>,<span class="number">3633</span>,<span class="number">3642</span>,<span class="number">3651</span>,<span class="number">3660</span>,</span><br><span class="line"><span class="number">3669</span>,<span class="number">3678</span>,<span class="number">3687</span>,<span class="number">3696</span>,<span class="number">3705</span>,<span class="number">3714</span>,<span class="number">3723</span>,<span class="number">3732</span>,<span class="number">3741</span>,<span class="number">3750</span>,</span><br><span class="line"><span class="number">3759</span>,<span class="number">3768</span>,<span class="number">3777</span>,<span class="number">3786</span>,<span class="number">3795</span>,<span class="number">3804</span>,<span class="number">3813</span>,<span class="number">3822</span>,<span class="number">3831</span>,<span class="number">3840</span>,</span><br><span class="line"><span class="number">3849</span>,<span class="number">3858</span>,<span class="number">3867</span>,<span class="number">3876</span>,<span class="number">3885</span>,<span class="number">3894</span>,<span class="number">3903</span>,<span class="number">3912</span>,<span class="number">3921</span>,<span class="number">3930</span>,</span><br><span class="line"><span class="number">3939</span>,<span class="number">3948</span>,<span class="number">3957</span>,<span class="number">3966</span>,<span class="number">3975</span>,<span class="number">3984</span>,<span class="number">3993</span>,<span class="number">4002</span>,<span class="number">4011</span>,<span class="number">4020</span>,</span><br><span class="line"><span class="number">4029</span>,<span class="number">4038</span>,<span class="number">4047</span>,<span class="number">4056</span>,<span class="number">4065</span>,<span class="number">4074</span>,<span class="number">4083</span>,<span class="number">4092</span>,<span class="number">4101</span>,<span class="number">4110</span>,</span><br><span class="line"><span class="number">4119</span>,<span class="number">4128</span>,<span class="number">4137</span>,<span class="number">4146</span>,<span class="number">4155</span>,<span class="number">4164</span>,<span class="number">4173</span>,<span class="number">4182</span>,<span class="number">4191</span>,<span class="number">4200</span>,</span><br><span class="line">LONG_MAX</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> r700_dischg_bat_voltage[<span class="number">102</span>]=</span><br><span class="line">&#123;</span><br><span class="line"><span class="number">0</span>,</span><br><span class="line"><span class="number">3259</span>,<span class="number">3268</span>,<span class="number">3277</span>,<span class="number">3286</span>,<span class="number">3295</span>,<span class="number">3304</span>,<span class="number">3313</span>,<span class="number">3322</span>,<span class="number">3331</span>,<span class="number">3340</span>,</span><br><span class="line"><span class="number">3349</span>,<span class="number">3358</span>,<span class="number">3367</span>,<span class="number">3376</span>,<span class="number">3385</span>,<span class="number">3394</span>,<span class="number">3403</span>,<span class="number">3412</span>,<span class="number">3421</span>,<span class="number">3430</span>,</span><br><span class="line"><span class="number">3439</span>,<span class="number">3448</span>,<span class="number">3457</span>,<span class="number">3466</span>,<span class="number">3475</span>,<span class="number">3484</span>,<span class="number">3493</span>,<span class="number">3502</span>,<span class="number">3511</span>,<span class="number">3520</span>,</span><br><span class="line"><span class="number">3529</span>,<span class="number">3538</span>,<span class="number">3547</span>,<span class="number">3556</span>,<span class="number">3565</span>,<span class="number">3574</span>,<span class="number">3583</span>,<span class="number">3592</span>,<span class="number">3601</span>,<span class="number">3610</span>,</span><br><span class="line"><span class="number">3619</span>,<span class="number">3628</span>,<span class="number">3637</span>,<span class="number">3646</span>,<span class="number">3655</span>,<span class="number">3664</span>,<span class="number">3673</span>,<span class="number">3682</span>,<span class="number">3691</span>,<span class="number">3700</span>,</span><br><span class="line"><span class="number">3709</span>,<span class="number">3718</span>,<span class="number">3727</span>,<span class="number">3736</span>,<span class="number">3745</span>,<span class="number">3754</span>,<span class="number">3763</span>,<span class="number">3772</span>,<span class="number">3781</span>,<span class="number">3790</span>,</span><br><span class="line"><span class="number">3799</span>,<span class="number">3808</span>,<span class="number">3817</span>,<span class="number">3826</span>,<span class="number">3835</span>,<span class="number">3844</span>,<span class="number">3853</span>,<span class="number">3862</span>,<span class="number">3871</span>,<span class="number">3880</span>,</span><br><span class="line"><span class="number">3889</span>,<span class="number">3898</span>,<span class="number">3907</span>,<span class="number">3916</span>,<span class="number">3925</span>,<span class="number">3934</span>,<span class="number">3943</span>,<span class="number">3952</span>,<span class="number">3961</span>,<span class="number">3970</span>,</span><br><span class="line"><span class="number">3979</span>,<span class="number">3988</span>,<span class="number">3997</span>,<span class="number">4006</span>,<span class="number">4015</span>,<span class="number">4024</span>,<span class="number">4033</span>,<span class="number">4042</span>,<span class="number">4051</span>,<span class="number">4060</span>,</span><br><span class="line"><span class="number">4069</span>,<span class="number">4078</span>,<span class="number">4087</span>,<span class="number">4096</span>,<span class="number">4105</span>,<span class="number">4114</span>,<span class="number">4123</span>,<span class="number">4132</span>,<span class="number">4141</span>,<span class="number">4150</span>,</span><br><span class="line">LONG_MAX</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> r700_chg_bat_voltage[<span class="number">102</span>]=</span><br><span class="line">&#123;</span><br><span class="line"><span class="number">0</span>,</span><br><span class="line"><span class="number">3300</span>,<span class="number">3320</span>,<span class="number">3340</span>,<span class="number">3360</span>,<span class="number">3380</span>,<span class="number">3400</span>,<span class="number">3420</span>,<span class="number">3440</span>,<span class="number">3460</span>,<span class="number">3480</span>,</span><br><span class="line"><span class="number">3500</span>,<span class="number">3520</span>,<span class="number">3540</span>,<span class="number">3560</span>,<span class="number">3580</span>,<span class="number">3600</span>,<span class="number">3620</span>,<span class="number">3640</span>,<span class="number">3660</span>,<span class="number">3680</span>,</span><br><span class="line"><span class="number">3700</span>,<span class="number">3706</span>,<span class="number">3712</span>,<span class="number">3718</span>,<span class="number">3724</span>,<span class="number">3730</span>,<span class="number">3736</span>,<span class="number">3742</span>,<span class="number">3748</span>,<span class="number">3754</span>,</span><br><span class="line"><span class="number">3760</span>,<span class="number">3766</span>,<span class="number">3772</span>,<span class="number">3778</span>,<span class="number">3784</span>,<span class="number">3790</span>,<span class="number">3796</span>,<span class="number">3802</span>,<span class="number">3808</span>,<span class="number">3814</span>,</span><br><span class="line"><span class="number">3820</span>,<span class="number">3826</span>,<span class="number">3832</span>,<span class="number">3838</span>,<span class="number">3844</span>,<span class="number">3850</span>,<span class="number">3856</span>,<span class="number">3862</span>,<span class="number">3868</span>,<span class="number">3874</span>,</span><br><span class="line"><span class="number">3880</span>,<span class="number">3886</span>,<span class="number">3892</span>,<span class="number">3898</span>,<span class="number">3904</span>,<span class="number">3910</span>,<span class="number">3916</span>,<span class="number">3922</span>,<span class="number">3928</span>,<span class="number">3934</span>,</span><br><span class="line"><span class="number">3940</span>,<span class="number">3946</span>,<span class="number">3952</span>,<span class="number">3958</span>,<span class="number">3964</span>,<span class="number">3970</span>,<span class="number">3976</span>,<span class="number">3982</span>,<span class="number">3988</span>,<span class="number">3994</span>,</span><br><span class="line"><span class="number">4000</span>,<span class="number">4006</span>,<span class="number">4012</span>,<span class="number">4018</span>,<span class="number">4024</span>,<span class="number">4030</span>,<span class="number">4036</span>,<span class="number">4042</span>,<span class="number">4048</span>,<span class="number">4054</span>,</span><br><span class="line"><span class="number">4060</span>,<span class="number">4066</span>,<span class="number">4072</span>,<span class="number">4078</span>,<span class="number">4081</span>,<span class="number">4084</span>,<span class="number">4087</span>,<span class="number">4090</span>,<span class="number">4095</span>,<span class="number">4110</span>,</span><br><span class="line"><span class="number">4119</span>,<span class="number">4128</span>,<span class="number">4137</span>,<span class="number">4146</span>,<span class="number">4155</span>,<span class="number">4164</span>,<span class="number">4173</span>,<span class="number">4182</span>,<span class="number">4191</span>,<span class="number">4200</span>,</span><br><span class="line">LONG_MAX</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> r700_dischg_bat_voltage[<span class="number">102</span>]=</span><br><span class="line">&#123;</span><br><span class="line"><span class="number">0</span>,</span><br><span class="line"><span class="number">3250</span>,<span class="number">3270</span>,<span class="number">3290</span>,<span class="number">3310</span>,<span class="number">3330</span>,<span class="number">3350</span>,<span class="number">3370</span>,<span class="number">3390</span>,<span class="number">3410</span>,<span class="number">3430</span>,</span><br><span class="line"><span class="number">3450</span>,<span class="number">3470</span>,<span class="number">3490</span>,<span class="number">3510</span>,<span class="number">3530</span>,<span class="number">3550</span>,<span class="number">3570</span>,<span class="number">3590</span>,<span class="number">3610</span>,<span class="number">3630</span>,</span><br><span class="line"><span class="number">3650</span>,<span class="number">3656</span>,<span class="number">3662</span>,<span class="number">3668</span>,<span class="number">3674</span>,<span class="number">3680</span>,<span class="number">3686</span>,<span class="number">3692</span>,<span class="number">3698</span>,<span class="number">3704</span>,</span><br><span class="line"><span class="number">3710</span>,<span class="number">3716</span>,<span class="number">3722</span>,<span class="number">3728</span>,<span class="number">3734</span>,<span class="number">3740</span>,<span class="number">3746</span>,<span class="number">3852</span>,<span class="number">3858</span>,<span class="number">3764</span>,</span><br><span class="line"><span class="number">3770</span>,<span class="number">3776</span>,<span class="number">3782</span>,<span class="number">3788</span>,<span class="number">3794</span>,<span class="number">3800</span>,<span class="number">3806</span>,<span class="number">3812</span>,<span class="number">3818</span>,<span class="number">3824</span>,</span><br><span class="line"><span class="number">3830</span>,<span class="number">3836</span>,<span class="number">3842</span>,<span class="number">3848</span>,<span class="number">3854</span>,<span class="number">3860</span>,<span class="number">3866</span>,<span class="number">3872</span>,<span class="number">3878</span>,<span class="number">3884</span>,</span><br><span class="line"><span class="number">3890</span>,<span class="number">3896</span>,<span class="number">3902</span>,<span class="number">3908</span>,<span class="number">3914</span>,<span class="number">3920</span>,<span class="number">3926</span>,<span class="number">3932</span>,<span class="number">3938</span>,<span class="number">3944</span>,</span><br><span class="line"><span class="number">3950</span>,<span class="number">3956</span>,<span class="number">3962</span>,<span class="number">3968</span>,<span class="number">3974</span>,<span class="number">3980</span>,<span class="number">3986</span>,<span class="number">3992</span>,<span class="number">3998</span>,<span class="number">4004</span>,</span><br><span class="line"><span class="number">4010</span>,<span class="number">4016</span>,<span class="number">4022</span>,<span class="number">4028</span>,<span class="number">4031</span>,<span class="number">4034</span>,<span class="number">4037</span>,<span class="number">4040</span>,<span class="number">4045</span>,<span class="number">4060</span>,</span><br><span class="line"><span class="number">4069</span>,<span class="number">4078</span>,<span class="number">4087</span>,<span class="number">4096</span>,<span class="number">4105</span>,<span class="number">4114</span>,<span class="number">4123</span>,<span class="number">4132</span>,<span class="number">4141</span>,<span class="number">4150</span>,</span><br><span class="line">LONG_MAX</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHUT_DOWN_VOLTAGE 3300</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">aw3215_battery_data</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> ctrl_gpio;</span><br><span class="line"><span class="keyword">int</span> stat_gpio;</span><br><span class="line"><span class="keyword">int</span> battery_temperature_vadc;<span class="comment">// battery temperature vadc</span></span><br><span class="line"><span class="keyword">int64_t</span> battery_capacity_vadc; <span class="comment">// battery capacity vadc</span></span><br><span class="line"><span class="keyword">int</span> cur_percent;</span><br><span class="line"><span class="keyword">int</span> old_percent;</span><br><span class="line"><span class="keyword">bool</span> online;</span><br><span class="line"><span class="keyword">bool</span> old_online;</span><br><span class="line"><span class="keyword">bool</span> ac_or_usb;</span><br><span class="line"><span class="keyword">bool</span> old_ac_or_usb;</span><br><span class="line"><span class="keyword">bool</span> full_changed;</span><br><span class="line"><span class="keyword">bool</span> first;</span><br><span class="line"><span class="keyword">int</span> status;</span><br><span class="line"><span class="keyword">int</span> health;</span><br><span class="line"><span class="keyword">int</span> old_health;</span><br><span class="line"><span class="keyword">int</span> present;</span><br><span class="line"><span class="keyword">int</span> old_present;</span><br><span class="line"><span class="keyword">spinlock_t</span> lock;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">qpnp_vadc_chip</span> *<span class="title">vadc</span>;</span></span><br><span class="line"><span class="keyword">enum</span> qpnp_vadc_channelsadc_channel;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">workqueue_struct</span> *<span class="title">volt_adc_queue</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">delayed_work</span> <span class="title">volt_adc_work</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">power_supply</span> <span class="title">battery</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">power_supply</span> <span class="title">ac</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">notifier_block</span> <span class="title">aw_notifier</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">timer_list</span> <span class="title">timer</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">dentry</span> *<span class="title">bm_aw3215_debugfs</span>;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">aw3215_battery_data</span> *<span class="title">battery_data</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">set_cutoff_cur_func</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">long</span> var)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* add emergency hot temperature */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">bm_temperature_me_type</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> te_status;</span><br><span class="line"><span class="keyword">int</span> te_range;</span><br><span class="line"><span class="keyword">void</span> (*bm_temperature_cb)(<span class="keyword">int</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">enum</span>&#123;</span><br><span class="line">BM_BATTERY_TEMP_CLASS_EMERGENCY_HOT,</span><br><span class="line">BM_BATTERY_TEMP_CLASS_HOT,</span><br><span class="line">BM_BATTERY_TEMP_CLASS_GOOD,</span><br><span class="line">BM_BATTERY_TEMP_CLASS_COLD,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bm_temp_emergency_hot_callback</span><span class="params">(<span class="keyword">int</span> result_adc)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bm_temp_hot_callback</span><span class="params">(<span class="keyword">int</span> result_adc)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bm_temp_good_callback</span><span class="params">(<span class="keyword">int</span> result_adc)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bm_temp_cold_callback</span><span class="params">(<span class="keyword">int</span> result_adc)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">bm_temperature_me_type</span> <span class="title">bm_temperature_me</span>[] = &#123;</span></span><br><span class="line">&#123;POWER_SUPPLY_HEALTH_OVERHEAT, TEMP_EMERGENCY_HOT_VOLTAGE, bm_temp_emergency_hot_callback&#125;,</span><br><span class="line">&#123;POWER_SUPPLY_HEALTH_OVERHEAT, TEMP_HOT_VOLTAGE, bm_temp_hot_callback&#125;,</span><br><span class="line">&#123;POWER_SUPPLY_HEALTH_GOOD, TEMP_COLD_VOLTAGE, bm_temp_good_callback&#125;,</span><br><span class="line">&#123;POWER_SUPPLY_HEALTH_COLD, TEMP_OVER_COLD_VOLTAGE, bm_temp_cold_callback&#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BM_BATTERY_TEMPERATURE_CONFIG_FILE <span class="meta-string">"/etc/backup/bm_temp_cfg"</span></span></span><br><span class="line"><span class="comment">/* add end */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">int</span> <span class="title">aw_register_client</span><span class="params">(struct notifier_block *nb)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">int</span> <span class="title">aw_unregister_client</span><span class="params">(struct notifier_block *nb)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* add debugfs support for aw3215_battery */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BM_AW3215_DEBUGFS_DIR <span class="meta-string">"bm_battery_debug"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BM_AW3215_DEBUGFS_BATTERY_FILE <span class="meta-string">"bm_battery_vadc"</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">bm_aw3215_debugfs_open</span><span class="params">(struct inode *node, struct file *file)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">bm_aw3215_debugfs_show</span><span class="params">(struct seq_file *s, <span class="keyword">void</span> *what)</span></span>;</span><br><span class="line"><span class="comment">/* add end */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">get_bm_ftm</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">file</span> *<span class="title">filep</span> = <span class="title">NULL</span>;</span></span><br><span class="line"><span class="keyword">char</span> buf[<span class="number">3</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">loff_t</span> pos = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">mm_segment_t</span> old_fs;</span><br><span class="line">old_fs = get_fs();</span><br><span class="line"><span class="comment">//printk("----enter get bm_ftm\n");</span></span><br><span class="line">filep=filp_open(<span class="string">"/etc/backup/bmftm"</span>,O_CREAT | O_RDWR,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(IS_ERR(filep))&#123;</span><br><span class="line">printk(<span class="string">"error- filp_open /etc/backup/bmftm filed!!!\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">set_fs(KERNEL_DS);</span><br><span class="line"></span><br><span class="line">vfs_read(filep, buf, <span class="keyword">sizeof</span>(buf), &amp;pos);</span><br><span class="line">filp_close(filep, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">init_bm_ftm_OK = <span class="number">1</span>;</span><br><span class="line">set_fs(old_fs);</span><br><span class="line"></span><br><span class="line">ret = <span class="built_in">memcmp</span>(buf,<span class="string">"1"</span>,<span class="number">1</span>);    </span><br><span class="line"><span class="keyword">if</span>(!ret)&#123;</span><br><span class="line">printk(<span class="string">"----enter get bm_ftm 1\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">printk(<span class="string">"----enter get bm_ftm 0\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">init_temperature_config</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">file</span> *<span class="title">filep</span>;</span></span><br><span class="line"><span class="keyword">char</span> buf[<span class="number">100</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">loff_t</span> pos = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">mm_segment_t</span> old_fs;</span><br><span class="line"><span class="keyword">int</span> e_cfg = <span class="number">0</span>, h_cfg = <span class="number">0</span>, g_cfg = <span class="number">0</span>, c_cfg = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">old_fs = get_fs();</span><br><span class="line">filep = filp_open(BM_BATTERY_TEMPERATURE_CONFIG_FILE, O_RDONLY, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(IS_ERR(filep))&#123;</span><br><span class="line"><span class="comment">//printk("aw3215_charger: error- filp_open %s filed!!!maybe do not configed or file system not inited.\n", BM_BATTERY_TEMPERATURE_CONFIG_FILE);</span></span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">set_fs(KERNEL_DS);</span><br><span class="line"></span><br><span class="line">vfs_read(filep, buf, <span class="keyword">sizeof</span>(buf), &amp;pos);</span><br><span class="line">filp_close(filep, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strchr</span>(buf, <span class="string">','</span>))</span><br><span class="line"><span class="built_in">sscanf</span>(buf, <span class="string">"%d,%d,%d,%d"</span>, &amp;e_cfg, &amp;h_cfg, &amp;g_cfg, &amp;c_cfg);</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">pr_err(<span class="string">"aw3215_battery15_charger: %s, error, get config temperture str:%s\n"</span>, __func__, buf);</span><br><span class="line">set_fs(old_fs);</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line">pr_info(<span class="string">"aw3215_charger: %s, config temperature:%d,%d,%d,%d\n"</span>, __func__, e_cfg, h_cfg, g_cfg, c_cfg);</span><br><span class="line"></span><br><span class="line">set_fs(old_fs);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (e_cfg)</span><br><span class="line">bm_temperature_me[BM_BATTERY_TEMP_CLASS_EMERGENCY_HOT].te_range = e_cfg;</span><br><span class="line"><span class="keyword">if</span> (h_cfg)</span><br><span class="line">bm_temperature_me[BM_BATTERY_TEMP_CLASS_HOT].te_range = h_cfg;</span><br><span class="line"><span class="keyword">if</span> (g_cfg)</span><br><span class="line">bm_temperature_me[BM_BATTERY_TEMP_CLASS_GOOD].te_range = g_cfg;</span><br><span class="line"><span class="keyword">if</span> (c_cfg)</span><br><span class="line">bm_temperature_me[BM_BATTERY_TEMP_CLASS_COLD].te_range = c_cfg;</span><br><span class="line"></span><br><span class="line">init_temperature_config_OK = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">init_bm_ftm_mode</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> get_bm_ftm();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BM_TEMPERTURE_HOT_RETRY 50</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bm_temp_emergency_hot_callback</span><span class="params">(<span class="keyword">int</span> result_adc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!bm_ftm_mode) &#123;</span><br><span class="line">pr_emerg(<span class="string">"get_tmp_adc_val result_adc = %d\nemergency battery hot!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n"</span>,result_adc);</span><br><span class="line">kernel_power_off();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">pr_emerg(<span class="string">"get_tmp_adc_val result_adc = %d\nemergency battery hot, but it is now ftm mode 1.!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n"</span>,result_adc);</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bm_temp_hot_callback</span><span class="params">(<span class="keyword">int</span> result_adc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!bm_ftm_mode) &#123;</span><br><span class="line">pr_emerg(<span class="string">"get_tmp_adc_val result_adc = %d\nbattery hot!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n"</span>,result_adc);</span><br><span class="line"><span class="keyword">if</span> (retry_cnt &gt; BM_TEMPERTURE_HOT_RETRY) &#123;</span><br><span class="line">kernel_power_off();</span><br><span class="line">&#125;</span><br><span class="line">retry_cnt++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">pr_emerg(<span class="string">"get_tmp_adc_val result_adc = %d\nbattery hot, but it its now ftm mode 1.!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n"</span>,result_adc);</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bm_temp_good_callback</span><span class="params">(<span class="keyword">int</span> result_adc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">retry_cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bm_temp_cold_callback</span><span class="params">(<span class="keyword">int</span> result_adc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">retry_cnt = <span class="number">0</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> 0</span></span><br><span class="line"><span class="keyword">if</span>(!bm_ftm_mode) &#123;</span><br><span class="line">pr_emerg(<span class="string">"get_tmp_adc_val RESULT_UNSUP_HOST_adc = %d\nbattery cold!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n"</span>,result_adc);</span><br><span class="line">kernel_power_off();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">pr_emerg(<span class="string">"get_tmp_adc_val result_adc = %d\nbattery colde, but it is now ftm mode 1.!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n"</span>,result_adc);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">get_tmp_adc_val</span><span class="params">(struct aw3215_battery_data *data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int32_t</span>  rc;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">qpnp_vadc_result</span> <span class="title">adc_result</span>;</span></span><br><span class="line"><span class="keyword">int</span> result_adc,a;</span><br><span class="line"><span class="keyword">long</span> sum=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> num = <span class="keyword">sizeof</span>(bm_temperature_me) / <span class="keyword">sizeof</span>(struct bm_temperature_me_type);</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//printk("get_tmp_adc_val start...\n");</span></span><br><span class="line"><span class="keyword">if</span>(!data-&gt;vadc)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line"><span class="keyword">for</span>(a=<span class="number">0</span>;a &lt; <span class="number">6</span>;a++)</span><br><span class="line">&#123;</span><br><span class="line">rc = qpnp_vadc_read(data-&gt;vadc,P_MUX6_1_1,&amp;adc_result);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">printk(<span class="string">"error- reading tmp adc channel  rc = %d\n"</span>, rc);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line">sum += (<span class="keyword">int</span>)adc_result.physical;</span><br><span class="line">&#125;</span><br><span class="line">result_adc = (<span class="keyword">int</span>)(sum/<span class="number">6</span>);</span><br><span class="line"><span class="comment">//printk("get_tmp_adc_val battery_temperature_vadc = %d\n",result_adc);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> 0</span></span><br><span class="line"><span class="keyword">switch</span>(result_adc)&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> RAISE_HOT_TMP</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span> ... CPG_TEMP_HOT_VOLTAGE:</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span> ... TEMP_HOT_VOLTAGE:</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">data-&gt;health = POWER_SUPPLY_HEALTH_OVERHEAT; </span><br><span class="line">data-&gt;present = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(get_bm_ftm())</span><br><span class="line">kernel_power_off();</span><br><span class="line"><span class="keyword">break</span> ;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> RAISE_HOT_TMP</span></span><br><span class="line"><span class="keyword">case</span> CPG_TEMP_HOT_VOLTAGE + <span class="number">1</span> ... TEMP_COLD_VOLTAGE:</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="keyword">case</span> TEMP_HOT_VOLTAGE + <span class="number">1</span> ... TEMP_COLD_VOLTAGE:</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">data-&gt;health = POWER_SUPPLY_HEALTH_GOOD ;</span><br><span class="line">data-&gt;present = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span> ;</span><br><span class="line"><span class="keyword">case</span> TEMP_COLD_VOLTAGE + <span class="number">1</span> ... TEMP_OVER_COLD_VOLTAGE:</span><br><span class="line">data-&gt;health = POWER_SUPPLY_HEALTH_COLD;</span><br><span class="line">data-&gt;present = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(get_bm_ftm())</span><br><span class="line">kernel_power_off();</span><br><span class="line"><span class="keyword">break</span> ;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">data-&gt;health = POWER_SUPPLY_HEALTH_UNSPEC_FAILURE ;</span><br><span class="line">data-&gt;present = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(result_adc &lt; bm_temperature_me[i].te_range)&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">printk(<span class="string">"result_adc = %d\n"</span>,result_adc);</span><br><span class="line">printk(<span class="string">"bm_ftm_mode = %d\n"</span>,bm_ftm_mode);</span><br><span class="line"><span class="keyword">if</span>(i != num)&#123;</span><br><span class="line">printk(<span class="string">"bm_temperature_me[%d].te_status = %d\n"</span>, i, bm_temperature_me[i].te_status);</span><br><span class="line">data-&gt;health = bm_temperature_me[i].te_status;</span><br><span class="line">data-&gt;present = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (bm_temperature_me[i].bm_temperature_cb)</span><br><span class="line">bm_temperature_me[i].bm_temperature_cb(result_adc);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">printk(<span class="string">"power supply health unspec failed!\n"</span>);</span><br><span class="line">data-&gt;health = POWER_SUPPLY_HEALTH_UNSPEC_FAILURE;</span><br><span class="line">data-&gt;present = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="comment">//if(data-&gt;old_health != data-&gt;health || data-&gt;old_present != data-&gt;present) </span></span><br><span class="line"><span class="comment">//power_supply_changed(&amp;data-&gt;battery);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">// data-&gt;old_health = data-&gt;health;</span></span><br><span class="line"><span class="comment">//data-&gt;old_present = data-&gt;present;</span></span><br><span class="line"><span class="comment">//printk("get_tmp_adc_val battery_temperature_vadc = %d\n",result_adc);</span></span><br><span class="line"><span class="comment">//printk("get_tmp_adc_val end...\n");</span></span><br><span class="line"><span class="keyword">return</span> result_adc;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">r700_get_battery_voltage</span><span class="params">(struct aw3215_battery_data *data,<span class="keyword">enum</span> qpnp_vadc_channels channel)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int32_t</span>  rc;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">qpnp_vadc_result</span> <span class="title">adc_result</span>;</span></span><br><span class="line"><span class="keyword">int</span>percent,a;</span><br><span class="line"><span class="keyword">int64_t</span> bat_voltage =<span class="number">0</span>;<span class="comment">// in uV</span></span><br><span class="line"><span class="keyword">int64_t</span> r700_bat_voltage =<span class="number">0</span>;</span><br><span class="line"><span class="comment">//printk("r700_get_battery_voltage start...\n");</span></span><br><span class="line"><span class="keyword">if</span>(!data-&gt;vadc)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line"><span class="keyword">for</span>(a=<span class="number">0</span>;a &lt; <span class="number">6</span>;a++)</span><br><span class="line">&#123;</span><br><span class="line">rc = qpnp_vadc_read(data-&gt;vadc,channel,&amp;adc_result);</span><br><span class="line"><span class="keyword">if</span> (rc) </span><br><span class="line">&#123;</span><br><span class="line">printk(<span class="string">"error- reading voltage adc channel =%d,rc = %d\n"</span>,channel, rc);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line">bat_voltage += adc_result.physical;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">do_div(bat_voltage,<span class="number">6000</span>);</span><br><span class="line">r700_bat_voltage = batt_avg_adc(bat_voltage);</span><br><span class="line">battery_data-&gt;battery_capacity_vadc = r700_bat_voltage;</span><br><span class="line"><span class="comment">//printk("get_battery_voltage bat_voltage = %lld\n",r700_bat_voltage);</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> 1</span></span><br><span class="line"><span class="keyword">if</span>(data-&gt;online)</span><br><span class="line">&#123;</span><br><span class="line">data-&gt;full_changed = gpio_get_value(data-&gt;stat_gpio);</span><br><span class="line"><span class="keyword">if</span>(data-&gt;full_changed)&#123;</span><br><span class="line">percent = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">percent = bat_get_chg_cap_percent(r700_bat_voltage);</span><br><span class="line"><span class="comment">//printk("bat_get_chg_cap_percent = %d\n",percent);</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">percent = bat_get_dischg_cap_percent(r700_bat_voltage);</span><br><span class="line"><span class="comment">//printk("bat_get_dischg_cap_percent = %d\n",percent);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="comment">//percent = bat_get_chg_cap_percent(r700_bat_voltage);</span></span><br><span class="line"><span class="comment">//r700_percent = batt_avg_percent(percent);</span></span><br><span class="line"><span class="comment">//if(percent &lt; 2)</span></span><br><span class="line"><span class="keyword">if</span>(r700_bat_voltage &lt; SHUT_DOWN_VOLTAGE)</span><br><span class="line">&#123;</span><br><span class="line">kernel_power_off();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//printk("r700_get_battery_voltage bat_voltage = %lld\n",r700_bat_voltage);</span></span><br><span class="line"><span class="comment">//printk("r700_get_percent = %d\n",percent);</span></span><br><span class="line"><span class="keyword">return</span> percent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">aw3215_ac_get_property</span><span class="params">(struct power_supply *psy,</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">enum</span> power_supply_property psp,</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">union</span> power_supply_propval *val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">aw3215_battery_data</span> *<span class="title">data</span> = <span class="title">container_of</span>(<span class="title">psy</span>,<span class="title">struct</span> <span class="title">aw3215_battery_data</span>, <span class="title">ac</span>);</span></span><br><span class="line"><span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (psp) &#123;</span><br><span class="line"><span class="keyword">case</span> POWER_SUPPLY_PROP_ONLINE:</span><br><span class="line"><span class="keyword">if</span>(data-&gt;online)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(data-&gt;ac_or_usb)</span><br><span class="line">val-&gt;intval = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">val-&gt;intval = <span class="number">1</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">val-&gt;intval = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//charge_full_mask=false;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//printk("ac get----------------------------ONLINE property intval = %d \n",val-&gt;intval);</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> POWER_SUPPLY_PROP_TYPE:</span><br><span class="line"><span class="keyword">if</span>(data-&gt;ac_or_usb)</span><br><span class="line"><span class="comment">//val-&gt;strval = "ac";</span></span><br><span class="line">val-&gt;intval = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="comment">//val-&gt;strval = "usb";</span></span><br><span class="line">val-&gt;intval = <span class="number">4</span>;</span><br><span class="line"><span class="comment">//printk("ac get --------------------------- POWER_SUPPLY_PROP_TYPE %d \n",val-&gt;intval);</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">ret = -EINVAL;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">aw3215_battery_get_property</span><span class="params">(struct power_supply *psy,</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">enum</span> power_supply_property psp,</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">union</span> power_supply_propval *val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">aw3215_battery_data</span> *<span class="title">data</span> = <span class="title">container_of</span>(<span class="title">psy</span>,<span class="title">struct</span> <span class="title">aw3215_battery_data</span>, <span class="title">battery</span>);</span></span><br><span class="line"><span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (psp) &#123;</span><br><span class="line"><span class="keyword">case</span> POWER_SUPPLY_PROP_STATUS:</span><br><span class="line">val-&gt;intval = data-&gt;status;<span class="comment">//aw3215_BATTERY_READ(data, BATTERY_STATUS);</span></span><br><span class="line"><span class="comment">//printk("battery get status property intval = %d \n",data-&gt;status);</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> POWER_SUPPLY_PROP_HEALTH:</span><br><span class="line">val-&gt;intval = data-&gt;health;<span class="comment">//aw3215_BATTERY_READ(data, BATTERY_HEALTH);</span></span><br><span class="line"><span class="comment">//printk("battery get health property intval = %d \n",val-&gt;intval);</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> POWER_SUPPLY_PROP_PRESENT:</span><br><span class="line">val-&gt;intval = data-&gt;present;</span><br><span class="line"><span class="comment">//printk("battery get present property intval = %d \n",val-&gt;intval);</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> POWER_SUPPLY_PROP_TECHNOLOGY:</span><br><span class="line">val-&gt;intval = POWER_SUPPLY_TECHNOLOGY_LION;</span><br><span class="line"><span class="comment">//printk("battery get technology property intval = %d \n",val-&gt;intval);</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> POWER_SUPPLY_PROP_CAPACITY:</span><br><span class="line">val-&gt;intval = data-&gt;cur_percent;</span><br><span class="line"><span class="comment">//printk("battery get capacity property intval = %d \n",val-&gt;intval);</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">ret = -EINVAL;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">enum</span> power_supply_property aw3215_battery_props[] = &#123;</span><br><span class="line">POWER_SUPPLY_PROP_STATUS,</span><br><span class="line">POWER_SUPPLY_PROP_HEALTH,</span><br><span class="line">POWER_SUPPLY_PROP_PRESENT,</span><br><span class="line">POWER_SUPPLY_PROP_TECHNOLOGY,</span><br><span class="line">POWER_SUPPLY_PROP_CAPACITY,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">enum</span> power_supply_property aw3215_ac_props[] = &#123;</span><br><span class="line">POWER_SUPPLY_PROP_ONLINE,</span><br><span class="line">POWER_SUPPLY_PROP_TYPE,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">set_cutoff_using_func</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">long</span> var)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">gpio_set_value(battery_data-&gt;ctrl_gpio, <span class="number">0</span>);</span><br><span class="line">msleep(<span class="number">20</span>);</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;var;i++)&#123;      </span><br><span class="line">gpio_set_value(battery_data-&gt;ctrl_gpio, <span class="number">0</span>);</span><br><span class="line">udelay(<span class="number">2</span>);</span><br><span class="line">gpio_set_value(battery_data-&gt;ctrl_gpio, <span class="number">1</span>);</span><br><span class="line">udelay(<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//printk("set_cutoff_using_func var = %ld\n",var );</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">get_volt_val_func</span><span class="params">(struct work_struct *work)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">aw3215_battery_data</span> *<span class="title">data</span> = <span class="title">container_of</span>(<span class="title">work</span>,</span></span><br><span class="line"><span class="class"><span class="title">struct</span> <span class="title">aw3215_battery_data</span>, <span class="title">volt_adc_work</span>.<span class="title">work</span>);</span></span><br><span class="line"><span class="comment">//printk("get_volt_val_func start...\n");</span></span><br><span class="line">data-&gt;adc_channel = VBAT_SNS;</span><br><span class="line">data-&gt;cur_percent =  r700_get_battery_voltage(data,data-&gt;adc_channel);</span><br><span class="line"><span class="keyword">if</span>(data-&gt;first)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//printk("get_volt_val_func start data-&gt;first...\n");</span></span><br><span class="line">data-&gt;first = <span class="literal">false</span>;</span><br><span class="line">data-&gt;old_percent =  r700_get_battery_voltage(data,data-&gt;adc_channel);</span><br><span class="line"><span class="keyword">if</span>(<span class="number">99</span>&lt;data-&gt;old_percent)</span><br><span class="line">data-&gt;old_percent = data-&gt;cur_percent <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="number">1</span> &gt;data-&gt;old_percent)</span><br><span class="line">data-&gt;old_percent = data-&gt;cur_percent +<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!init_temperature_config_OK)</span><br><span class="line">init_temperature_config();</span><br><span class="line"><span class="keyword">if</span> (!init_bm_ftm_OK)</span><br><span class="line">bm_ftm_mode = init_bm_ftm_mode();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>((charge_full_mask)&amp;&amp;(data-&gt;cur_percent &gt; <span class="number">99</span>))&#123;</span><br><span class="line">data-&gt;cur_percent = <span class="number">100</span>;</span><br><span class="line">data-&gt;old_percent = <span class="number">100</span>;</span><br><span class="line">data-&gt;status =POWER_SUPPLY_STATUS_FULL;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(data-&gt;online)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//printk("get_volt_val_func start data-&gt;online...\n");</span></span><br><span class="line">data-&gt;full_changed = gpio_get_value(data-&gt;stat_gpio);</span><br><span class="line"><span class="keyword">if</span>(data-&gt;full_changed)&#123;</span><br><span class="line">charge_full_mask=<span class="literal">true</span>;</span><br><span class="line"><span class="comment">//printk("-----------get_volt_val_func start data-&gt;online data-&gt;full_changed = ...\n");</span></span><br><span class="line">&#125;</span><br><span class="line">set_cutoff_using_func(CUTOFF_CUR_LEVEL);</span><br><span class="line">data-&gt;status =POWER_SUPPLY_STATUS_CHARGING ;</span><br><span class="line"><span class="keyword">if</span>(data-&gt;cur_percent &gt;= <span class="number">100</span>)&#123;</span><br><span class="line">data-&gt;old_percent = <span class="number">99</span>;</span><br><span class="line">data-&gt;cur_percent = <span class="number">99</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(data-&gt;old_percent &gt; data-&gt;cur_percent)&#123;</span><br><span class="line">data-&gt;cur_percent = data-&gt;old_percent;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">data-&gt;old_percent = data-&gt;cur_percent;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">//printk("get_volt_val_func start data-&gt;offline...\n");</span></span><br><span class="line">data-&gt;status = POWER_SUPPLY_STATUS_DISCHARGING;</span><br><span class="line"><span class="keyword">if</span>(data-&gt;cur_percent &gt; data-&gt;old_percent) </span><br><span class="line">data-&gt;cur_percent = data-&gt;old_percent;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">data-&gt;old_percent = data-&gt;cur_percent;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">power_supply_changed(&amp;data-&gt;battery);</span><br><span class="line">msleep(<span class="number">3000</span>);</span><br><span class="line">data-&gt;battery_temperature_vadc =  get_tmp_adc_val(data);</span><br><span class="line">queue_delayed_work(data-&gt;volt_adc_queue,&amp;data-&gt;volt_adc_work,<span class="number">3</span>*HZ);</span><br><span class="line"><span class="comment">//printk("&gt;&gt;&gt;&gt;&gt;&gt;data-&gt;old_percent = %d\n",data-&gt;old_percent);</span></span><br><span class="line"><span class="comment">//printk("&gt;&gt;&gt;&gt;&gt;&gt;data-&gt;cur_percent = %d\n",data-&gt;cur_percent);</span></span><br><span class="line"><span class="comment">//printk("get_volt_val_func end...\n");</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">aw_notifier_callback</span><span class="params">(struct notifier_block *self,</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">unsigned</span> <span class="keyword">long</span> event, <span class="keyword">void</span> *data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//printk("aw_notifier_callback start ....\n");</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">aw3215_battery_data</span> *<span class="title">pdata</span> =</span></span><br><span class="line"><span class="class"><span class="title">container_of</span>(<span class="title">self</span>, <span class="title">struct</span> <span class="title">aw3215_battery_data</span>, <span class="title">aw_notifier</span>);</span></span><br><span class="line"><span class="keyword">int</span> *blank;</span><br><span class="line"><span class="keyword">if</span>  (event == <span class="number">123</span> ) &#123;</span><br><span class="line">blank =  data;</span><br><span class="line">pdata-&gt;online = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span> (*blank == <span class="number">4</span>)&#123;</span><br><span class="line"><span class="comment">//printk("~~~~~~~~~~data = %ld blank= %d\n",event,*blank);</span></span><br><span class="line">pdata-&gt;ac_or_usb= <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (*blank == <span class="number">5</span>)&#123;</span><br><span class="line">pdata-&gt;ac_or_usb= <span class="literal">false</span>;</span><br><span class="line"><span class="comment">//printk("~~~~~~~~~~data = %ld blank= %d\n",event,*blank);</span></span><br><span class="line">&#125;</span><br><span class="line">power_supply_changed(&amp;pdata-&gt;ac);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(event == <span class="number">456</span>)&#123;</span><br><span class="line"><span class="comment">//printk("~~~~~~~~~~data = %ld *\n",event);</span></span><br><span class="line">pdata-&gt;online = <span class="literal">false</span>;</span><br><span class="line"><span class="comment">//charge_full_mask=false;</span></span><br><span class="line">power_supply_changed(&amp;pdata-&gt;ac);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pdata-&gt;old_online = pdata-&gt;online;</span><br><span class="line">pdata-&gt;old_ac_or_usb = pdata-&gt;ac_or_usb;</span><br><span class="line"><span class="comment">//printk("~~~~~~~~~~data = %ld *\n",event);</span></span><br><span class="line"><span class="comment">//printk("aw_notifier_callback end ....\n");</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">bm_aw3215_debugfs_open</span><span class="params">(struct inode *node, struct file *file)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> single_open(file, bm_aw3215_debugfs_show, <span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">bm_aw3215_debugfs_show</span><span class="params">(struct seq_file *s, <span class="keyword">void</span> *what)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//printk("battery_data-&gt;battery_temperature_vadc = %d\n");</span></span><br><span class="line"><span class="comment">//printk("battery_data-&gt;battery_capacity_vadc = %d\n");</span></span><br><span class="line"><span class="keyword">return</span> seq_printf(s, <span class="string">"%d,%lld\n"</span>, battery_data-&gt;battery_temperature_vadc, battery_data-&gt;battery_capacity_vadc); <span class="comment">// temperature vadc,capacity vadc.</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="class"><span class="keyword">struct</span> <span class="title">file_operations</span> <span class="title">fops_bm_aw3215_debugfs</span> = &#123;</span></span><br><span class="line">.open = bm_aw3215_debugfs_open,</span><br><span class="line">.read = seq_read,</span><br><span class="line">.llseek = seq_lseek,</span><br><span class="line">.release = single_release,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">bm_aw3215_debug_fs_init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">battery_data-&gt;bm_aw3215_debugfs = debugfs_create_dir(BM_AW3215_DEBUGFS_DIR, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!debugfs_create_file(BM_AW3215_DEBUGFS_BATTERY_FILE, S_IFREG | S_IRUGO, battery_data-&gt;bm_aw3215_debugfs, <span class="literal">NULL</span>, &amp;fops_bm_aw3215_debugfs))&#123;</span><br><span class="line">pr_err(<span class="string">"aw3215_charger: %s, init failed.\n"</span>, __func__);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">aw3215_battery_probe</span><span class="params">(struct platform_device *pdev)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ret;</span><br><span class="line"><span class="comment">//struct resource *r;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">aw3215_battery_data</span> *<span class="title">data</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">device_node</span> *<span class="title">np</span> = <span class="title">pdev</span>-&gt;<span class="title">dev</span>.<span class="title">of_node</span>;</span></span><br><span class="line">data = devm_kzalloc(&amp;pdev-&gt;dev, <span class="keyword">sizeof</span>(*data), GFP_KERNEL);</span><br><span class="line"><span class="keyword">if</span> (data == <span class="literal">NULL</span>)</span><br><span class="line"><span class="keyword">return</span> -ENOMEM;</span><br><span class="line">spin_lock_init(&amp;data-&gt;lock);</span><br><span class="line"></span><br><span class="line">data-&gt;battery.properties = aw3215_battery_props;</span><br><span class="line">data-&gt;battery.num_properties = ARRAY_SIZE(aw3215_battery_props);</span><br><span class="line">data-&gt;battery.get_property = aw3215_battery_get_property;</span><br><span class="line">data-&gt;battery.name = <span class="string">"battery"</span>;</span><br><span class="line">data-&gt;battery.type = POWER_SUPPLY_TYPE_BATTERY;</span><br><span class="line"></span><br><span class="line">data-&gt;ac.properties = aw3215_ac_props;</span><br><span class="line">data-&gt;ac.num_properties = ARRAY_SIZE(aw3215_ac_props);</span><br><span class="line">data-&gt;ac.get_property = aw3215_ac_get_property;</span><br><span class="line">data-&gt;ac.name = <span class="string">"ac"</span>;</span><br><span class="line">data-&gt;ac.type = POWER_SUPPLY_TYPE_MAINS;</span><br><span class="line"><span class="keyword">if</span> (of_find_property(np, <span class="string">"qcom,chg-vadc"</span>, <span class="literal">NULL</span>)) &#123;</span><br><span class="line"><span class="comment">/* early for VADC get, defer probe if needed */</span></span><br><span class="line">data-&gt;vadc = qpnp_get_vadc(&amp;pdev-&gt;dev, <span class="string">"chg"</span>);</span><br><span class="line"><span class="keyword">if</span> (IS_ERR(data-&gt;vadc)) &#123;</span><br><span class="line">ret = PTR_ERR(data-&gt;vadc);</span><br><span class="line"><span class="keyword">if</span> (ret != -EPROBE_DEFER)</span><br><span class="line">pr_err(<span class="string">"vadc property configured incorrectly\n"</span>);</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* chg gpio info */</span></span><br><span class="line">data-&gt;ctrl_gpio = of_get_named_gpio(np,<span class="string">"mdm9607,battery-ctrl-gpio"</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (gpio_is_valid(data-&gt;ctrl_gpio)) &#123;</span><br><span class="line">ret = gpio_request(data-&gt;ctrl_gpio, <span class="string">"aw9625_ctrl_gpio"</span>);</span><br><span class="line"><span class="keyword">if</span> (ret &lt; <span class="number">0</span>) &#123;</span><br><span class="line">printk(<span class="string">"failed to request GPIO %d, error %d\n"</span>,data-&gt;ctrl_gpio, ret);</span><br><span class="line"><span class="keyword">goto</span> <span class="built_in">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line">ret = gpio_direction_output(data-&gt;ctrl_gpio, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (ret &lt; <span class="number">0</span>) &#123;</span><br><span class="line">printk(<span class="string">"Failed to configure output direction for ctrlGPIO %d, error %d\n"</span>,data-&gt;ctrl_gpio, ret);</span><br><span class="line"><span class="keyword">goto</span> exit_gpio;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">data-&gt;stat_gpio = of_get_named_gpio(np,<span class="string">"mdm9607,battery-stat-gpio"</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (gpio_is_valid(data-&gt;stat_gpio)) &#123;</span><br><span class="line">ret = gpio_request(data-&gt;stat_gpio, <span class="string">"aw9625_stat_gpio"</span>);</span><br><span class="line"><span class="keyword">if</span> (ret &lt; <span class="number">0</span>) &#123;</span><br><span class="line">printk(<span class="string">"failed to request GPIO %d, error %d\n"</span>,data-&gt;stat_gpio, ret);</span><br><span class="line"><span class="keyword">goto</span> exit_gpio;</span><br><span class="line">&#125;</span><br><span class="line">ret = gpio_direction_input(data-&gt;stat_gpio);</span><br><span class="line"><span class="keyword">if</span> (ret &lt; <span class="number">0</span>) &#123;</span><br><span class="line">printk(<span class="string">"Failed to configure input direction for GPIO %d, error %d\n"</span>,data-&gt;stat_gpio, ret);</span><br><span class="line"><span class="keyword">goto</span> exit_stat_gpio;</span><br><span class="line">&#125;</span><br><span class="line">printk(<span class="string">"-----data-&gt;stat_gpio==%d-------\n"</span>,gpio_get_value(data-&gt;stat_gpio));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ret = power_supply_register(&amp;pdev-&gt;dev, &amp;data-&gt;ac);</span><br><span class="line"><span class="keyword">if</span> (ret)</span><br><span class="line">&#123;</span><br><span class="line">printk(<span class="string">"register power supply ac failed \n"</span>);</span><br><span class="line"><span class="keyword">goto</span> exit_gpio;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//printk("register power supply ac success!!!\n");</span></span><br><span class="line">ret = power_supply_register(&amp;pdev-&gt;dev, &amp;data-&gt;battery);</span><br><span class="line"><span class="keyword">if</span> (ret) &#123;</span><br><span class="line">printk(<span class="string">"register power supply battery failed \n"</span>);</span><br><span class="line"><span class="keyword">goto</span> exit_supply;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//printk("register power supply battery success!!!\n");</span></span><br><span class="line">data-&gt;online = <span class="literal">false</span>;</span><br><span class="line">data-&gt;first = <span class="literal">true</span> ;</span><br><span class="line">platform_set_drvdata(pdev, data);</span><br><span class="line">battery_data = data;</span><br><span class="line">INIT_DELAYED_WORK(&amp;data-&gt;volt_adc_work,get_volt_val_func);</span><br><span class="line">data-&gt;volt_adc_queue = create_singlethread_workqueue(<span class="string">"get_vlotage_value"</span>);</span><br><span class="line">queue_delayed_work(data-&gt;volt_adc_queue,&amp;data-&gt;volt_adc_work,<span class="number">12</span>*HZ);</span><br><span class="line"></span><br><span class="line">data-&gt;aw_notifier.notifier_call = aw_notifier_callback;</span><br><span class="line">ret = aw_register_client(&amp;data-&gt;aw_notifier);</span><br><span class="line"><span class="keyword">if</span> (ret)</span><br><span class="line">dev_err(&amp;pdev-&gt;dev, <span class="string">"Unable to register aw_notifier: %d\n"</span>,ret);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(bm_aw3215_debug_fs_init() &lt; <span class="number">0</span>)</span><br><span class="line">pr_err(<span class="string">"aw3215_charger: init debugfs failed.\n"</span>);</span><br><span class="line"></span><br><span class="line">printk(<span class="string">"aw3215 battery init probe is gone .\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">exit_supply:</span><br><span class="line">power_supply_unregister(&amp;data-&gt;ac);</span><br><span class="line">gpio_free(data-&gt;stat_gpio);</span><br><span class="line">gpio_free(data-&gt;ctrl_gpio);</span><br><span class="line">exit_stat_gpio:</span><br><span class="line"><span class="keyword">if</span> (gpio_is_valid(data-&gt;stat_gpio))</span><br><span class="line">gpio_free(data-&gt;stat_gpio);</span><br><span class="line">exit_gpio:</span><br><span class="line"><span class="keyword">if</span> (gpio_is_valid(data-&gt;ctrl_gpio))</span><br><span class="line">gpio_free(data-&gt;ctrl_gpio);</span><br><span class="line"><span class="built_in">exit</span>:</span><br><span class="line">kfree(data);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> ret ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">aw3215_battery_remove</span><span class="params">(struct platform_device *pdev)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">aw3215_battery_data</span> *<span class="title">data</span> = <span class="title">platform_get_drvdata</span>(<span class="title">pdev</span>);</span></span><br><span class="line"></span><br><span class="line">power_supply_unregister(&amp;data-&gt;battery);</span><br><span class="line">power_supply_unregister(&amp;data-&gt;ac);</span><br><span class="line">aw_unregister_client(&amp;data-&gt;aw_notifier);</span><br><span class="line">del_timer(&amp;data-&gt;timer);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(battery_data-&gt;bm_aw3215_debugfs)</span><br><span class="line">debugfs_remove_recursive(battery_data-&gt;bm_aw3215_debugfs);</span><br><span class="line">battery_data = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">of_device_id</span> <span class="title">aw3215_match_table</span>[] = &#123;</span></span><br><span class="line">&#123; .compatible = <span class="string">"awinic,aw3215"</span>,&#125;,</span><br><span class="line">&#123; &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">platform_driver</span> <span class="title">aw3215_battery_device</span> = &#123;</span></span><br><span class="line">.probe= aw3215_battery_probe,</span><br><span class="line">.remove= aw3215_battery_remove,</span><br><span class="line">.driver = &#123;</span><br><span class="line">.owner = THIS_MODULE,</span><br><span class="line">.name = <span class="string">"aw3215-battery"</span>,</span><br><span class="line">.of_match_table = aw3215_match_table,</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">module_platform_driver(aw3215_battery_device);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">   get battery capacity in percent by battery voltage</span></span><br><span class="line"><span class="comment">   @bat_vol: voltage in mV</span></span><br><span class="line"><span class="comment">   @return val:in percent%</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span>  <span class="keyword">int</span> <span class="title">bat_get_chg_cap_percent</span><span class="params">(<span class="keyword">int64_t</span> bat_vol)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> last_percent = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>( bat_vol &lt; <span class="number">0</span>)</span><br><span class="line">bat_vol = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (bat_vol &gt; r700_chg_bat_voltage[<span class="number">100</span>])</span><br><span class="line">bat_vol = r700_chg_bat_voltage[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//calculate percent</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( bat_vol &lt; r700_chg_bat_voltage[last_percent])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>( bat_vol &lt; r700_chg_bat_voltage[last_percent])</span><br><span class="line">last_percent--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>( bat_vol &gt;= r700_chg_bat_voltage[last_percent+<span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">last_percent++;</span><br><span class="line"><span class="keyword">while</span>( r700_chg_bat_voltage[last_percent+<span class="number">1</span>] &lt;= bat_vol)</span><br><span class="line">&#123;</span><br><span class="line">last_percent++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(last_percent &gt;= <span class="number">100</span>)</span><br><span class="line">last_percent = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//printk("bat_vol = %lld , r700_chg_bat_voltage = %d\n",bat_vol,last_percent);</span></span><br><span class="line"><span class="keyword">return</span> last_percent;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span>  <span class="keyword">int</span> <span class="title">bat_get_dischg_cap_percent</span><span class="params">(<span class="keyword">int64_t</span> bat_vol)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> last_percent = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>( bat_vol &lt; <span class="number">0</span>)</span><br><span class="line">bat_vol = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (bat_vol &gt; r700_dischg_bat_voltage[<span class="number">100</span>])</span><br><span class="line">bat_vol = r700_dischg_bat_voltage[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//calculate percent</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( bat_vol &lt; r700_dischg_bat_voltage[last_percent])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>( bat_vol &lt; r700_dischg_bat_voltage[last_percent])</span><br><span class="line">last_percent--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>( bat_vol &gt;= r700_dischg_bat_voltage[last_percent+<span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">last_percent++;</span><br><span class="line"><span class="keyword">while</span>( r700_dischg_bat_voltage[last_percent+<span class="number">1</span>] &lt;= bat_vol)</span><br><span class="line">&#123;</span><br><span class="line">last_percent++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(last_percent &gt;= <span class="number">100</span>)</span><br><span class="line">last_percent = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//printk("bat_vol = %lld , r700_dischg_bat_voltage = %d\n",bat_vol,last_percent);</span></span><br><span class="line"><span class="keyword">return</span> last_percent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> int64_t <span class="title">batt_avg_adc</span><span class="params">(<span class="keyword">int64_t</span> bat_voltage)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">int</span> stop = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int64_t</span> sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;ADC_BUFF_LEN; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (adc_buff[i] == <span class="number">0</span>) &#123;</span><br><span class="line">adc_buff[i] = bat_voltage;</span><br><span class="line">stop = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">sum += adc_buff[i];</span><br><span class="line"><span class="keyword">if</span> (stop)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (i &gt;= ADC_BUFF_LEN<span class="number">-1</span>) &#123;</span><br><span class="line">memmove(adc_buff, adc_buff+<span class="number">1</span>, (ADC_BUFF_LEN<span class="number">-1</span>)*<span class="keyword">sizeof</span>(adc_buff[<span class="number">0</span>]));</span><br><span class="line">adc_buff[ADC_BUFF_LEN<span class="number">-1</span>] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">do_div(sum,(i+<span class="number">1</span>));</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">batt_avg_percent</span><span class="params">(<span class="keyword">int</span> percent)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">int</span> stop = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;PERCENT_BUFF_LEN; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (percent_buff[i] == <span class="number">0</span>) &#123;</span><br><span class="line">percent_buff[i] = percent;</span><br><span class="line">stop = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">sum += percent_buff[i];</span><br><span class="line"><span class="keyword">if</span> (stop)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (i &gt;= PERCENT_BUFF_LEN<span class="number">-1</span>) &#123;</span><br><span class="line">memmove(percent_buff, percent_buff+<span class="number">1</span>, (PERCENT_BUFF_LEN<span class="number">-1</span>)*<span class="keyword">sizeof</span>(percent_buff[<span class="number">0</span>]));</span><br><span class="line">percent_buff[PERCENT_BUFF_LEN<span class="number">-1</span>] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> (sum/(i+<span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MODULE_AUTHOR(<span class="string">"hanshuailockwood@android.com"</span>);</span><br><span class="line">MODULE_LICENSE(<span class="string">"GPL"</span>);</span><br><span class="line">MODULE_DESCRIPTION(<span class="string">"Battery driver for the aw3215 emulator"</span>);</span><br></pre></td></tr></table></figure></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> linux device driver </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux device driver </tag>
            
            <tag> sysfs </tag>
            
            <tag> debugfs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spi接口的oled显示驱动</title>
      <link href="/2019/05/24/spi%E6%8E%A5%E5%8F%A3%E7%9A%84oled%E6%98%BE%E7%A4%BA%E9%A9%B1%E5%8A%A8/"/>
      <url>/2019/05/24/spi%E6%8E%A5%E5%8F%A3%E7%9A%84oled%E6%98%BE%E7%A4%BA%E9%A9%B1%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="硬件连接图"><a href="#硬件连接图" class="headerlink" title="硬件连接图"></a>硬件连接图</h1><p><img src="sh1106原理图.png" alt="sh1106原理图"></p><h1 id="GPIO配置表"><a href="#GPIO配置表" class="headerlink" title="GPIO配置表"></a>GPIO配置表</h1><table><thead><tr><th style="text-align:center">GPIO</th><th style="text-align:center">FUNCTION</th></tr></thead><tbody><tr><td style="text-align:center">GPIO_0</td><td style="text-align:center">SPI_MOSI</td></tr><tr><td style="text-align:center">GPIO_1</td><td style="text-align:center">SPI_MISO</td></tr><tr><td style="text-align:center">GPIO_2</td><td style="text-align:center">SPI_CS_N</td></tr><tr><td style="text-align:center">GPIO_3</td><td style="text-align:center">SPI_CLK</td></tr><tr><td style="text-align:center">GPIO_71</td><td style="text-align:center">OLED_A0</td></tr><tr><td style="text-align:center">GPIO_93</td><td style="text-align:center">OLED_PWR_CTL</td></tr></tbody></table><h1 id="设备树配置"><a href="#设备树配置" class="headerlink" title="设备树配置"></a>设备树配置</h1><blockquote><p>代码位置： kernel/arch/arm/boot/dts/qcom/mdm9640.dtsi</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"> spi_0: spi@78b5000 &#123; /* BLSP1 QUP1 */</span><br><span class="line">     compatible = &quot;qcom,spi-qup-v2&quot;;</span><br><span class="line">     #address-cells = &lt;1&gt;; </span><br><span class="line">     #size-cells = &lt;0&gt;; </span><br><span class="line">     reg-names = &quot;spi_physical&quot;, &quot;spi_bam_physical&quot;;</span><br><span class="line">     reg = &lt;0x78b5000 0x600&gt;,</span><br><span class="line">           &lt;0x7884000 0x23000&gt;;</span><br><span class="line">     interrupt-names = &quot;spi_irq&quot;, &quot;spi_bam_irq&quot;;</span><br><span class="line">     interrupts = &lt;0 95 0&gt;, &lt;0 238 0&gt;;</span><br><span class="line">     spi-max-frequency = &lt;19200000&gt;;</span><br><span class="line">     pinctrl-names = &quot;spi_default&quot;, &quot;spi_sleep&quot;;</span><br><span class="line">     pinctrl-0 = &lt;&amp;spi0_default &amp;spi0_cs0_active&gt;;</span><br><span class="line">     pinctrl-1 = &lt;&amp;spi0_sleep &amp;spi0_cs0_sleep&gt;;</span><br><span class="line">     clocks = &lt;&amp;clock_gcc clk_gcc_blsp1_ahb_clk&gt;,</span><br><span class="line">          &lt;&amp;clock_gcc clk_gcc_blsp1_qup1_spi_apps_clk&gt;;</span><br><span class="line">     clock-names = &quot;iface_clk&quot;, &quot;core_clk&quot;;</span><br><span class="line">     qcom,infinite-mode = &lt;0&gt;; </span><br><span class="line">     qcom,use-pinctrl;</span><br><span class="line">     qcom,ver-reg-exists;</span><br><span class="line">     qcom,master-id = &lt;86&gt;;</span><br><span class="line">     status = &quot;ok&quot;;</span><br><span class="line">     qcom-spi-lcd@0 &#123;</span><br><span class="line">         compatible = &quot;qcom,spi-oled&quot;;</span><br><span class="line">         reg = &lt;0&gt;;                                                                                         </span><br><span class="line">spi-max-frequency = &lt;10000000&gt;;</span><br><span class="line">        pinctrl-names = &quot;active&quot;, &quot;sleep&quot;;</span><br><span class="line">         pinctrl-0 = &lt;&amp;oled_rst_active&gt;;</span><br><span class="line">         pinctrl-1 = &lt;&amp;oled_rst_sleep&gt;;</span><br><span class="line">         interrupt-parent = &lt;&amp;tlmm_pinmux&gt;;</span><br><span class="line">         interrupts = &lt;0 0&gt;;</span><br><span class="line">         qcom_spi_oled,irq-gpio = &lt;&amp;tlmm_pinmux 94 0x00&gt;; </span><br><span class="line">     &#125;;   </span><br><span class="line"> &#125;;</span><br></pre></td></tr></table></figure><h1 id="驱动流程"><a href="#驱动流程" class="headerlink" title="驱动流程"></a>驱动流程</h1><h2 id="驱动与设备匹配"><a href="#驱动与设备匹配" class="headerlink" title="驱动与设备匹配"></a>驱动与设备匹配</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//SPI Driver Info                                                                                   </span></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">spi_driver</span> <span class="title">spi_oled_driver</span> = &#123;</span>                                                           </span><br><span class="line">.driver = &#123;                                                                                             </span><br><span class="line">.name = <span class="string">"qcom,spi-oled"</span>,                                                                           </span><br><span class="line">.owner = THIS_MODULE,       </span><br><span class="line">.of_match_table = qcom_spi_oled_table,     </span><br><span class="line">&#125;,             </span><br><span class="line">.probe = spi_oled_probe,      </span><br><span class="line">&#125;;          </span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> __<span class="function">init <span class="title">spi_oled_init</span><span class="params">(<span class="keyword">void</span>)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;                  </span><br><span class="line"><span class="keyword">return</span> spi_register_driver(&amp;spi_oled_driver);   </span><br><span class="line">&#125;        </span><br><span class="line"><span class="keyword">static</span> <span class="keyword">void</span> __<span class="function"><span class="built_in">exit</span> <span class="title">spi_oled_exit</span><span class="params">(<span class="keyword">void</span>)</span>       </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    spi_unregister_driver(&amp;spi_oled_driver);         </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="probe函数"><a href="#probe函数" class="headerlink" title="probe函数"></a>probe函数</h2><blockquote><p>probe函数中主要功能就是解析设备树，cs、irq、cpha、cpol等状态，以及对oled的硬件初始化、</p><p>注册framebuffer结构体，设置fb_info的var和fix参数</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">spi_oled_probe</span><span class="params">(struct spi_device *spi)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> irq_gpio = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">int</span> irq;</span><br><span class="line">    <span class="keyword">int</span> cs;</span><br><span class="line">    <span class="keyword">int</span> cpha,cpol,cs_high;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span>  max_speed;</span><br><span class="line">    <span class="keyword">int</span> i,ret;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">page</span> *<span class="title">buffer_page</span>;</span></span><br><span class="line">    <span class="keyword">int</span> page_order;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">fb_info</span> * <span class="title">fbinfo</span>;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*----------------- resource init ---------------------------*/</span></span><br><span class="line">    printk(<span class="string">"start spi_oled_probe!\r\n"</span>);</span><br><span class="line"></span><br><span class="line">    oled.dev = &amp;spi-&gt;dev;</span><br><span class="line">page_order = ffz(~(OLED_BUFFER_SIZE/PAGE_SIZE)) + <span class="number">1</span>;</span><br><span class="line">fb_buf = (<span class="keyword">uint8_t</span> *)__get_free_pages(GFP_KERNEL, page_order);</span><br><span class="line"><span class="keyword">for</span>( i = <span class="number">0</span>;i &lt; (OLED_BUFFER_SIZE/PAGE_SIZE) ; i += PAGE_SIZE)</span><br><span class="line">    &#123;</span><br><span class="line">        buffer_page = virt_to_page(fb_buf+i);</span><br><span class="line">        SetPageReserved(buffer_page);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/** spi work mode **/</span></span><br><span class="line">    <span class="keyword">if</span>(spi-&gt;dev.of_node)&#123;</span><br><span class="line">        irq_gpio = of_get_named_gpio_flags(spi-&gt;dev.of_node,</span><br><span class="line">        <span class="string">"qcom_spi_oled,irq-gpio"</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">    &#125;</span><br><span class="line">irq = spi-&gt;irq;</span><br><span class="line">    cs = spi-&gt;chip_select;</span><br><span class="line">    cpha = ( spi-&gt;mode &amp; SPI_CPHA ) ? <span class="number">1</span>:<span class="number">0</span>;</span><br><span class="line">    cpol = ( spi-&gt;mode &amp; SPI_CPOL ) ? <span class="number">1</span>:<span class="number">0</span>;</span><br><span class="line">    cs_high = ( spi-&gt;mode &amp; SPI_CS_HIGH ) ? <span class="number">1</span>:<span class="number">0</span>;</span><br><span class="line">    max_speed = spi-&gt;max_speed_hz;</span><br><span class="line">    printk(<span class="string">"gpio [%d] irq [%d] gpio_irq [%d] cs [%x] CPHA[%x] CPOL [%x] CS_HIGH [%x]\n"</span>,          </span><br><span class="line">irq_gpio, irq, gpio_to_irq(irq_gpio), cs, cpha, cpol,cs_high);</span><br><span class="line">printk(<span class="string">"Max_speed [%d]\n"</span>, max_speed );</span><br><span class="line"><span class="comment">//Transfer can be done after spi_device structure is created</span></span><br><span class="line">    spi-&gt;bits_per_word = <span class="number">8</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** pin control register remap **/</span></span><br><span class="line">oled.virt_base = devm_ioremap_nocache(&amp;spi-&gt;dev,TLMM_BASE_ADDR,<span class="number">100</span> * <span class="number">0x1000</span>);</span><br><span class="line"><span class="keyword">if</span>( oled.virt_base == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        printk(<span class="string">"%s ioremap error !\n"</span>,__func__);</span><br><span class="line">        <span class="keyword">return</span> -ENOMEM;</span><br><span class="line">    &#125;</span><br><span class="line">init_rwsem(&amp;oled.rg.lock);</span><br><span class="line"><span class="comment">/*----------------------- pin config -----------------------------*/</span></span><br><span class="line">oled.gpio_reset = GPIO_OLED_RESET;</span><br><span class="line">    oled.gpio_switch = GPIO_OLED_CMD_DATA;</span><br><span class="line">oled_reset_pin_config();</span><br><span class="line">    oled_switch_pin_config();</span><br><span class="line">    <span class="comment">/*---------------------- lcd chip init ---------------------------*/</span></span><br><span class="line">    sh1106g_hw_reset();</span><br><span class="line">    sh1106g_disp_init();</span><br><span class="line">    <span class="comment">/*--------------------- data transfer test -----------------------*/</span></span><br><span class="line">    sh1106g_disp_pic(PIC01);</span><br><span class="line">    <span class="comment">/*--------------------- framebuffer register ----------------------*/</span></span><br><span class="line"></span><br><span class="line">    fbinfo = kzalloc(<span class="keyword">sizeof</span>(struct fb_info),GFP_KERNEL);</span><br><span class="line">    <span class="keyword">if</span>( fbinfo == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        printk(<span class="string">"%s fbinfo alloc error !\n"</span>,__func__);</span><br><span class="line">        <span class="keyword">return</span> -ENOMEM;</span><br><span class="line">    &#125;</span><br><span class="line">fbinfo-&gt;fbops = &amp;oled_fb_ops;</span><br><span class="line">fbinfo-&gt;flags = FBINFO_FLAG_DEFAULT;</span><br><span class="line">fbinfo-&gt;fix.visual = FB_VISUAL_MONO10;</span><br><span class="line">    fbinfo-&gt;fix.type = FB_TYPE_PACKED_PIXELS;</span><br><span class="line">    fbinfo-&gt;fix.capabilities = <span class="number">0</span>;</span><br><span class="line">    fbinfo-&gt;fix.smem_start = virt_to_phys(fb_buf);</span><br><span class="line">    fbinfo-&gt;fix.smem_len = <span class="keyword">sizeof</span>(fb_buf);</span><br><span class="line">    fbinfo-&gt;fix.accel = FB_ACCEL_NONE;</span><br><span class="line"></span><br><span class="line">fbinfo-&gt;var.width = <span class="number">128</span>;</span><br><span class="line">    fbinfo-&gt;var.height = <span class="number">64</span>;</span><br><span class="line">fbinfo-&gt;var.xres = <span class="number">128</span>;</span><br><span class="line">    fbinfo-&gt;var.yres = <span class="number">64</span>;</span><br><span class="line">    fbinfo-&gt;var.xres_virtual= <span class="number">128</span>;</span><br><span class="line">    fbinfo-&gt;var.yres_virtual= <span class="number">64</span>;</span><br><span class="line">    <span class="comment">//fbinfo-&gt;var.left_margin = 20;</span></span><br><span class="line">    fbinfo-&gt;var.hsync_len = <span class="number">128</span>;</span><br><span class="line">    fbinfo-&gt;var.vsync_len = <span class="number">64</span>;</span><br><span class="line">fbinfo-&gt;var.grayscale = <span class="number">1</span>;</span><br><span class="line">    fbinfo-&gt;var.bits_per_pixel = <span class="number">8</span>;</span><br><span class="line">    fbinfo-&gt;var.activate = FB_ACTIVATE_NOW;</span><br><span class="line">    fbinfo-&gt;var.pixclock = <span class="number">500000</span>;</span><br><span class="line">    <span class="comment">//fbinfo-&gt;var.rotate = FB_ROTATE_CW;</span></span><br><span class="line">fbinfo-&gt;fix.mmio_start = virt_to_phys(fb_buf);</span><br><span class="line">    fbinfo-&gt;fix.mmio_len = <span class="keyword">sizeof</span>(fb_buf);</span><br><span class="line">    fbinfo-&gt;var.red.offset = <span class="number">0</span>;</span><br><span class="line">    fbinfo-&gt;var.red.length = fbinfo-&gt;var.bits_per_pixel;</span><br><span class="line">    fbinfo-&gt;var.green = fbinfo-&gt;var.red;</span><br><span class="line">    fbinfo-&gt;var.blue = fbinfo-&gt;var.red;</span><br><span class="line">    fbinfo-&gt;var.vmode = FB_VMODE_NONINTERLACED;</span><br><span class="line">fbinfo-&gt;screen_base = fb_buf;</span><br><span class="line">    fbinfo-&gt;screen_size = <span class="keyword">sizeof</span>(fb_buf);</span><br><span class="line"></span><br><span class="line">    ret = register_framebuffer(fbinfo);</span><br><span class="line"><span class="keyword">if</span>( ret )</span><br><span class="line">    &#123;</span><br><span class="line">       printk(<span class="string">"oled register framebuffer !\r\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//dev_err(&amp;spi-&gt;dev, "SPI sync returned [%d]\n",spi_oled_transfer(spi));</span></span><br><span class="line"><span class="comment">/*--------------------- lcd refresh thread ---------------------*/</span></span><br><span class="line"><span class="keyword">for</span>( i = <span class="number">0</span>; i &lt; <span class="number">8192</span> ;i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">       fb_buf[i] = PIC01[i%<span class="number">128</span>+(i/<span class="number">1024</span>*<span class="number">128</span>)]&amp;(<span class="number">1</span>&lt;&lt;(<span class="number">7</span>-((i/<span class="number">128</span>)&amp;<span class="number">7</span>)));</span><br><span class="line">    &#125;</span><br><span class="line">    sh1106g_disp_refresh();</span><br><span class="line">oled.disp_status = OLED_DISP_ON;;</span><br><span class="line">kthread_run(oled_refresh,<span class="literal">NULL</span>,<span class="string">"oled"</span>);</span><br><span class="line">printk(<span class="string">"oled write ok!\r\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="oled-reset-pin-config"><a href="#oled-reset-pin-config" class="headerlink" title="oled_reset_pin_config"></a>oled_reset_pin_config</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">oled_reset_pin_config</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> result;</span><br><span class="line"><span class="comment">/** active state **/</span></span><br><span class="line">    oled.pinctrl = devm_pinctrl_get(oled.dev);         </span><br><span class="line"><span class="keyword">if</span> (IS_ERR_OR_NULL(oled.pinctrl)) &#123;</span><br><span class="line">        dev_err(oled.dev, <span class="string">"Failed to get pin ctrl\n"</span>);</span><br><span class="line">        <span class="keyword">return</span> PTR_ERR(oled.pinctrl);</span><br><span class="line">    &#125;</span><br><span class="line">    oled.pins_active = pinctrl_lookup_state(oled.pinctrl,<span class="string">"active"</span>);</span><br><span class="line"><span class="keyword">if</span> (IS_ERR_OR_NULL(oled.pins_active)) &#123;</span><br><span class="line">        dev_err(oled.dev, <span class="string">"Failed to lookup pinctrl active state\n"</span>);</span><br><span class="line">        <span class="keyword">return</span> PTR_ERR(oled.pins_active);</span><br><span class="line">    &#125;</span><br><span class="line">oled.pins_sleep = pinctrl_lookup_state(oled.pinctrl,<span class="string">"sleep"</span>);</span><br><span class="line"><span class="keyword">if</span> (IS_ERR_OR_NULL(oled.pins_sleep)) &#123;</span><br><span class="line">        dev_err(oled.dev, <span class="string">"Failed to lookup pinctrl sleep state\n"</span>);</span><br><span class="line">        <span class="keyword">return</span> PTR_ERR(oled.pins_sleep);</span><br><span class="line">    &#125;</span><br><span class="line">result = pinctrl_select_state(oled.pinctrl, oled.pins_active);</span><br><span class="line"><span class="keyword">if</span> (result) &#123;</span><br><span class="line">dev_err(oled.dev, <span class="string">"%s: Can not set %s pins\n"</span>,</span><br><span class="line">        __func__, <span class="string">"active"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/** output high,no pull,12mA  **/</span></span><br><span class="line">    gpio_tlmm_config(oled.gpio_reset,<span class="number">0</span>,GPIO_OUTPUT,GPIO_NO_PULL,GPIO_8MA);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这是利用pinctrl子系统来进行状态选择的，</p></blockquote><h3 id="sh1106g-hw-reset"><a href="#sh1106g-hw-reset" class="headerlink" title="sh1106g_hw_reset"></a>sh1106g_hw_reset</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*--------------------------------   lcd operation -------------------------------*/</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sh1106g_hw_reset</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/** drive high **/</span></span><br><span class="line">    oled_reset_pin_high();</span><br><span class="line"><span class="comment">/** delay **/</span></span><br><span class="line">    udelay(<span class="number">100</span>);</span><br><span class="line"><span class="comment">/** drive low **/</span></span><br><span class="line">    oled_reset_pin_low();</span><br><span class="line"><span class="comment">/** delay **/</span></span><br><span class="line">    udelay(<span class="number">100</span>);</span><br><span class="line"><span class="comment">/** drive high **/</span></span><br><span class="line">    oled_reset_pin_high();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这是一个硬件复位，先把reset脚拉低再拉高</p></blockquote><h3 id="sh1106g-disp-init"><a href="#sh1106g-disp-init" class="headerlink" title="sh1106g_disp_init"></a>sh1106g_disp_init</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** init oled output mode **/</span>  </span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sh1106g_disp_init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    sh1106g_write_cmd(<span class="number">0xAE</span>); <span class="comment">//Set Display Off</span></span><br><span class="line">sh1106g_write_cmd(<span class="number">0xD5</span>); <span class="comment">//display divide ratio/osc. freq. mode</span></span><br><span class="line">    sh1106g_write_cmd(<span class="number">0x80</span>);</span><br><span class="line">sh1106g_write_cmd(<span class="number">0xA8</span>); <span class="comment">//multiplex ration mode:63</span></span><br><span class="line">    sh1106g_write_cmd(<span class="number">0x3F</span>);</span><br><span class="line">sh1106g_write_cmd(<span class="number">0xD3</span>); <span class="comment">//Set Display Offset</span></span><br><span class="line">    sh1106g_write_cmd(<span class="number">0x00</span>);</span><br><span class="line">sh1106g_write_cmd(<span class="number">0x40</span>); <span class="comment">//Set Display Start Line</span></span><br><span class="line">sh1106g_write_cmd(<span class="number">0xAD</span>); <span class="comment">//DC-DC Control Mode Set</span></span><br><span class="line">    sh1106g_write_cmd(<span class="number">0x8B</span>); <span class="comment">//DC-DC ON/OFF Mode Set 0x8A: external dc-dc 0x8b: internal dc-dc</span></span><br><span class="line">sh1106g_write_cmd(<span class="number">0x32</span>);<span class="comment">//Set Pump voltage value</span></span><br><span class="line">sh1106g_write_cmd(<span class="number">0xA1</span>);<span class="comment">//Segment Remap</span></span><br><span class="line">sh1106g_write_cmd(<span class="number">0xC8</span>); <span class="comment">//Sst COM Output Scan Direction</span></span><br><span class="line">sh1106g_write_cmd(<span class="number">0xDA</span>); <span class="comment">//common pads hardware: alternative</span></span><br><span class="line">    sh1106g_write_cmd(<span class="number">0x12</span>);</span><br><span class="line">sh1106g_write_cmd(<span class="number">0x81</span>);<span class="comment">//contrast control</span></span><br><span class="line">    sh1106g_write_cmd(CONTRAST);</span><br><span class="line">sh1106g_write_cmd(<span class="number">0xD9</span>);<span class="comment">//set pre-charge period</span></span><br><span class="line">    sh1106g_write_cmd(<span class="number">0x1F</span>);</span><br><span class="line">sh1106g_write_cmd(<span class="number">0xDB</span>);<span class="comment">//VCOM deselect level mode</span></span><br><span class="line">    sh1106g_write_cmd(<span class="number">0x40</span>);</span><br><span class="line">sh1106g_write_cmd(<span class="number">0xA4</span>);<span class="comment">//Set Entire Display On/Off</span></span><br><span class="line">    sh1106g_write_cmd(<span class="number">0xA6</span>);<span class="comment">//Set Normal Display </span></span><br><span class="line">    sh1106g_write_cmd(<span class="number">0x8D</span>);<span class="comment">//Set Charge Pump 0x8D, 0x14</span></span><br><span class="line">    sh1106g_write_cmd(<span class="number">0x14</span>);<span class="comment">//</span></span><br><span class="line">sh1106g_write_cmd(<span class="number">0xAF</span>);<span class="comment">//Set Display On</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="fb-ops"><a href="#fb-ops" class="headerlink" title="fb_ops"></a>fb_ops</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">fb_ops</span> <span class="title">oled_fb_ops</span> =</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    .owner = THIS_MODULE,</span><br><span class="line">    .fb_open = oled_fb_open,</span><br><span class="line">    .fb_release = oled_fb_release,</span><br><span class="line">    .fb_read = oled_fb_read,</span><br><span class="line">    .fb_write = oled_fb_write,  </span><br><span class="line">.fb_mmap = oled_fb_mmap,</span><br><span class="line">    .fb_set_par = oled_set_par,   </span><br><span class="line">    .fb_blank   = oled_blank,   </span><br><span class="line">    .fb_setcolreg = oled_setcolreg,   </span><br><span class="line">    .fb_fillrect    = oled_fillrect,   </span><br><span class="line">    .fb_copyarea    = oled_copyarea, </span><br><span class="line">    .fb_check_var  = oled_check_var,</span><br><span class="line">    .fb_imageblit   = oled_imageblit, </span><br><span class="line">    .fb_ioctl = oled_fb_ioctl,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>fb_ops 是对framebuffer的操作接口函数</p></blockquote><h3 id="oled-fb-mmap"><a href="#oled-fb-mmap" class="headerlink" title="oled_fb_mmap"></a>oled_fb_mmap</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* perform fb specific mmap */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">oled_fb_mmap</span><span class="params">(struct fb_info *fbi, struct vm_area_struct *vma)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">fb_fix_screeninfo</span> *<span class="title">fix</span> = &amp;<span class="title">fbi</span>-&gt;<span class="title">fix</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">oled_mem_region</span> *<span class="title">rg</span> = &amp;<span class="title">oled</span>.<span class="title">rg</span>;</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> start;</span><br><span class="line">    u32 len;</span><br><span class="line">    <span class="keyword">int</span> r;</span><br><span class="line"></span><br><span class="line">    oled_get_mem_region(rg);</span><br><span class="line">start = fix-&gt;smem_start;</span><br><span class="line">    len = fix-&gt;smem_len;</span><br><span class="line"><span class="keyword">if</span>( vma-&gt;vm_end - vma-&gt;vm_start &gt; OLED_BUFFER_SIZE)</span><br><span class="line">    &#123;</span><br><span class="line">        r = -EINVAL;</span><br><span class="line">        <span class="keyword">goto</span> error;</span><br><span class="line">    &#125;</span><br><span class="line">r = remap_pfn_range(vma,vma-&gt;vm_start,</span><br><span class="line">           virt_to_phys((<span class="keyword">void</span>*)((<span class="keyword">unsigned</span> <span class="keyword">long</span>)fb_buf)) &gt;&gt; PAGE_SHIFT,  </span><br><span class="line">   vma-&gt;vm_end-vma-&gt;vm_start,vma-&gt;vm_flags | PAGE_SHARED);</span><br><span class="line">    <span class="keyword">if</span>(r != <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">goto</span> error;</span><br><span class="line"><span class="comment">/* vm_ops.open won't be called for mmap itself. */</span></span><br><span class="line">    atomic_inc(&amp;rg-&gt;map_count);</span><br><span class="line">oled_put_mem_region(rg);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">error:</span><br><span class="line">    oled_put_mem_region(rg);</span><br><span class="line"><span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="oled-fb-ioctl"><a href="#oled-fb-ioctl" class="headerlink" title="oled_fb_ioctl"></a>oled_fb_ioctl</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">oled_fb_ioctl</span><span class="params">(struct fb_info *info, <span class="keyword">unsigned</span> <span class="keyword">int</span> cmd, <span class="keyword">unsigned</span> <span class="keyword">long</span> arg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">switch</span> (cmd) &#123;</span><br><span class="line">    <span class="keyword">case</span> FBIO_IOCTL_ON:</span><br><span class="line">        oled.disp_status = OLED_DISP_ON;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> FBIO_IOCTL_OFF:</span><br><span class="line">        oled.disp_status = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        ret = -ENOTTY;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><blockquote><p>提供了ioctl接口来点亮以及关闭oled,上层可以调用响应的ioctl函数。图片的显示利用framebuffer的mmap接口直接映射。避免的数据从用户空间到内核的拷贝。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> linux device driver </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux device driver </tag>
            
            <tag> spi </tag>
            
            <tag> oled </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iperf工具测试指导</title>
      <link href="/2019/05/23/iperf%E5%B7%A5%E5%85%B7%E6%B5%8B%E8%AF%95%E6%8C%87%E5%AF%BC/"/>
      <url>/2019/05/23/iperf%E5%B7%A5%E5%85%B7%E6%B5%8B%E8%AF%95%E6%8C%87%E5%AF%BC/</url>
      
        <content type="html"><![CDATA[<p><img src="iperf.jpg" alt="iperf原理"></p><h1 id="安装iperf"><a href="#安装iperf" class="headerlink" title="安装iperf"></a>安装iperf</h1><h2 id="下载iperf"><a href="#下载iperf" class="headerlink" title="下载iperf"></a>下载iperf</h2><blockquote><p>在官网根据系统下载响应的版本  <a href="https://iperf.fr/iperf-download.php" target="_blank" rel="noopener">https://iperf.fr/iperf-download.php</a></p></blockquote><h2 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h2><blockquote><p>将下载的压缩包解压到C:/根目录 ，也可以自己指定目录</p></blockquote><h2 id="测试是否安装成功"><a href="#测试是否安装成功" class="headerlink" title="测试是否安装成功"></a>测试是否安装成功</h2><blockquote><p>进入cmd，输入”cd \”，进入C盘根目录</p><p>命令行模式下输入“dir”，查看iperf文件夹是否存在，存在则输入“cd iperf”,进入iperf文件夹。</p></blockquote><p><img src="iperf文件夹.png" alt="iperf路径"></p><h1 id="iperf指令参数介绍"><a href="#iperf指令参数介绍" class="headerlink" title="iperf指令参数介绍"></a>iperf指令参数介绍</h1><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">-c</td><td style="text-align:center">iperf -c ip_addr:客户端模式，ip_addr为服务器地址</td></tr><tr><td style="text-align:center">-i</td><td style="text-align:center">以秒为单位显示报告间隔，比如：iperf -c 222.35.11.23 -i 2</td></tr><tr><td style="text-align:center">-u</td><td style="text-align:center">使用UDP协议，发送UDP数据包，默认使用TCP连接</td></tr><tr><td style="text-align:center">-w</td><td style="text-align:center">指定TCP窗口大小，默认是8KB(<strong>此参数比较重要，需要针对不同的带宽和时延进行调整</strong>)</td></tr><tr><td style="text-align:center">-t</td><td style="text-align:center">测试时间长，默认10秒，比如：iperf -c 222.35.11.23 -t 5</td></tr><tr><td style="text-align:center">-n</td><td style="text-align:center">(一般配合UDP协议时使用)指定传输的字节数，比如：iperf -c 222.35.11.23 -n 100000</td></tr><tr><td style="text-align:center">-P</td><td style="text-align:center">指定同时进行的TCP/UDP连接数(<strong>对于高带宽测速，需要该参数建立多条TCP/UDP连接以测得更准确的速率</strong>)</td></tr><tr><td style="text-align:center">-p</td><td style="text-align:center">指定端口号，比如：iperf -c 222.35.11.23 -p 5555</td></tr><tr><td style="text-align:center">-b</td><td style="text-align:center">使用的带宽，用于udp测试中</td></tr><tr><td style="text-align:center">-s</td><td style="text-align:center">iperf -s :服务器模式</td></tr></tbody></table><h1 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h1><blockquote><p>测试一个路由器lan口到wifi的一个吞吐量。</p></blockquote><h2 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h2><blockquote><p>两台PC,待测路由器。</p><p>PC-A通过网线与待测路由相连得到ip地址：192.168.0.25，</p><p>PC-B通过待测路由发出的wifi进行连接得到ip地址：192.168.0.35</p></blockquote><h2 id="TCP测试"><a href="#TCP测试" class="headerlink" title="TCP测试"></a>TCP测试</h2><h3 id="lan-gt-wifi"><a href="#lan-gt-wifi" class="headerlink" title="lan -&gt; wifi"></a>lan -&gt; wifi</h3><blockquote><p>PC-B(跑服务端)：iperf -s -w2m -i 1</p><p>PC-A(跑客户端)：iperf -c 192.168.0.35 -i 1 -t 1200</p></blockquote><h3 id="wifi-gt-lan"><a href="#wifi-gt-lan" class="headerlink" title="wifi -&gt;lan"></a>wifi -&gt;lan</h3><blockquote><p>PC-A(跑服务器端)：iperf -s -w2m -i 1</p><p>PC-B(跑客户端)：iperf -c 192.168.0.25 -i 1 -t 1200</p></blockquote><h2 id="UDP测试"><a href="#UDP测试" class="headerlink" title="UDP测试"></a>UDP测试</h2><h3 id="lan-gt-wifi-1"><a href="#lan-gt-wifi-1" class="headerlink" title="lan -&gt; wifi"></a>lan -&gt; wifi</h3><blockquote><p>PC-B(跑服务端)：iperf -s -u -i 1</p><p>PC-A(跑客户端)：iperf -c 192.168.0.35 -i 1 -t 1200 -b300M</p></blockquote><h3 id="wifi-gt-lan-1"><a href="#wifi-gt-lan-1" class="headerlink" title="wifi -&gt;lan"></a>wifi -&gt;lan</h3><blockquote><p>PC-A(跑服务器端)：iperf -s -u -i 1</p><p>PC-B(跑客户端)：iperf -c 192.168.0.25 -i 1 -t 1200 -b300M</p></blockquote><blockquote><p>这个测试的是udp wifi在300M速率下的吞吐量情况。我手上的这台mifi产品在300M速率下</p><p>tcp：wifi的tx能到150 rx 150</p><p>udp：wifi的tx能到156 rx 156</p></blockquote><blockquote><p><strong>数据仅供参考</strong></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 工具和软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iperf </tag>
            
            <tag> network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>按摩椅项目</title>
      <link href="/2019/05/14/%E6%8C%89%E6%91%A9%E6%A4%85%E9%A1%B9%E7%9B%AE/"/>
      <url>/2019/05/14/%E6%8C%89%E6%91%A9%E6%A4%85%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><blockquote><p>此按摩椅由四部分组成：</p></blockquote><ol><li>按摩椅硬件</li><li>单片机（后续文章中以U表示）</li><li>4G模块（后续文章中以M表示）</li><li>阿里云服务器（后续文章中以S表示）</li></ol><blockquote><p>单片机的功能主要是控制按摩椅操作，比如力度，手法等。使用串口与4G模块通讯。</p><p>4G模块的功能主要是与服务器进行通讯，接收服务器指令，通过串口下发指令到下位机</p></blockquote><h2 id="硬件接口"><a href="#硬件接口" class="headerlink" title="硬件接口"></a>硬件接口</h2><p><img src="4G模块实物图.png" alt="4G模块实物图"></p><p><img src="单片机实物图.png" alt="单片机实物图"></p><h2 id="数据通信格式"><a href="#数据通信格式" class="headerlink" title="数据通信格式"></a>数据通信格式</h2><h3 id="单片机-gt-4G模块"><a href="#单片机-gt-4G模块" class="headerlink" title="单片机-&gt;4G模块"></a>单片机-&gt;4G模块</h3><h4 id="指令概括"><a href="#指令概括" class="headerlink" title="指令概括"></a>指令概括</h4><blockquote><p>SOI(1)+ACK/CMD(1)+PARAMETER(10)+EOI(1)</p></blockquote><blockquote><p>解析：</p><p> SOI:开始字节，固定为0X7E</p><p>CMD:(0x00：获取设备运行状态，0x01:零重力，0x02:升降调节，0x03:气压档位调节)，0x04:背部按摩力度</p><p>PARAMETER   参数</p><p>EOI:结束字节，  固定为0X5A</p><p>ACK:应答最高2位表示用户单片机对命令的执行结果：00：执行成功 01：命令错误 10：参数错误 11：其它错误低6位的值与接收到的CMD值相等。</p></blockquote><h4 id="具体通信协议"><a href="#具体通信协议" class="headerlink" title="具体通信协议"></a>具体通信协议</h4><table><thead><tr><th style="text-align:center">功能</th><th style="text-align:center">方向</th><th style="text-align:center">SOI</th><th style="text-align:center">CMD</th><th style="text-align:center">P1</th><th style="text-align:center">P2</th><th style="text-align:center">P3</th><th style="text-align:center">P4</th><th style="text-align:center">P5</th><th style="text-align:center">P6</th><th style="text-align:center">P7</th><th style="text-align:center">P8</th><th style="text-align:center">P9</th><th style="text-align:center">P10</th><th style="text-align:center">EOI</th></tr></thead><tbody><tr><td style="text-align:center">获取设备运行状态</td><td style="text-align:center">M-&gt;U</td><td style="text-align:center">7E</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">5A</td></tr><tr><td style="text-align:center">设备运行状态响应</td><td style="text-align:center">U-&gt;M</td><td style="text-align:center">7E</td><td style="text-align:center">0</td><td style="text-align:center">TI</td><td style="text-align:center">T2</td><td style="text-align:center">气压（1-10）</td><td style="text-align:center">按摩力度（1-10）</td><td style="text-align:center">零重力（0-3）</td><td style="text-align:center">背部升降（0-2）</td><td style="text-align:center">腿部升降（0-2）</td><td style="text-align:center">按摩状态（0-2）</td><td style="text-align:center">有人检测（0-1）</td><td style="text-align:center">设备音量（0-10）</td><td style="text-align:center">5A</td></tr><tr><td style="text-align:center">零重力</td><td style="text-align:center">M-&gt;U</td><td style="text-align:center">7E</td><td style="text-align:center">01</td><td style="text-align:center">0-3</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">5A</td></tr><tr><td style="text-align:center">升降调节</td><td style="text-align:center">M-&gt;U</td><td style="text-align:center">7E</td><td style="text-align:center">02</td><td style="text-align:center">0-3</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">5A</td></tr><tr><td style="text-align:center">气压</td><td style="text-align:center">M-&gt;U</td><td style="text-align:center">7E</td><td style="text-align:center">03</td><td style="text-align:center">1-10</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">5A</td></tr><tr><td style="text-align:center">按摩力度</td><td style="text-align:center">M-&gt;U</td><td style="text-align:center">7E</td><td style="text-align:center">04</td><td style="text-align:center">1-10</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">5A</td></tr></tbody></table><h3 id="4G模块-gt-服务器"><a href="#4G模块-gt-服务器" class="headerlink" title="4G模块-&gt;服务器"></a>4G模块-&gt;服务器</h3><h4 id="指令概括-1"><a href="#指令概括-1" class="headerlink" title="指令概括"></a>指令概括</h4><blockquote><p>代码中封装了一个结构体，作为一个MSG在两者之间传输。</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">uart_msg</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> type; <span class="comment">//类型</span></span><br><span class="line">    <span class="keyword">int</span> hex_no; <span class="comment">//指令编号</span></span><br><span class="line">    <span class="keyword">int</span> value; <span class="comment">// 指令数值</span></span><br><span class="line">    <span class="keyword">int</span> data; <span class="comment">//每条指令的调节，比如按摩力度的各种档位</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="具体通信协议-1"><a href="#具体通信协议-1" class="headerlink" title="具体通信协议"></a>具体通信协议</h4><table><thead><tr><th style="text-align:center">指令</th><th style="text-align:center">type</th><th style="text-align:center">no</th><th style="text-align:center">value</th><th style="text-align:center">data</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">授权指令</td><td style="text-align:center">1</td><td style="text-align:center">100</td><td style="text-align:center">100</td><td style="text-align:center">\</td><td style="text-align:center">指令1为授权指令，时间为value</td></tr><tr><td style="text-align:center">重启指令</td><td style="text-align:center">2</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">\</td><td style="text-align:center">指令2为重启指令，no和value无效</td></tr><tr><td style="text-align:center">暂停/启动</td><td style="text-align:center">3</td><td style="text-align:center">0</td><td style="text-align:center">0/1</td><td style="text-align:center">\</td><td style="text-align:center">指令3为暂停启动指令，value为1时暂停，为0时启动</td></tr><tr><td style="text-align:center">心跳包</td><td style="text-align:center">102</td><td style="text-align:center">0</td><td style="text-align:center">xx</td><td style="text-align:center">\</td><td style="text-align:center">第一个x表示椅子是否在动，第二个x表示椅子上是否有人</td></tr><tr><td style="text-align:center">零重力指令</td><td style="text-align:center">999</td><td style="text-align:center">0</td><td style="text-align:center">2</td><td style="text-align:center">0-3</td><td style="text-align:center">零重力角度0-3</td></tr><tr><td style="text-align:center">升降调节</td><td style="text-align:center">999</td><td style="text-align:center">0</td><td style="text-align:center">3</td><td style="text-align:center">0-3</td><td style="text-align:center">背部以及腿部调节0-3</td></tr><tr><td style="text-align:center">气压调节</td><td style="text-align:center">999</td><td style="text-align:center">0</td><td style="text-align:center">4</td><td style="text-align:center">1-10</td><td style="text-align:center">数值越大，力度越强</td></tr><tr><td style="text-align:center">背部摩擦</td><td style="text-align:center">999</td><td style="text-align:center">0</td><td style="text-align:center">5</td><td style="text-align:center">1-10</td><td style="text-align:center">数值越大，力度越强</td></tr><tr><td style="text-align:center">音量调节</td><td style="text-align:center">999</td><td style="text-align:center">0</td><td style="text-align:center">6</td><td style="text-align:center">0-10</td><td style="text-align:center">数值越大，音量越大</td></tr><tr><td style="text-align:center">按摩手法</td><td style="text-align:center">999</td><td style="text-align:center">0</td><td style="text-align:center">7</td><td style="text-align:center">1-10</td><td style="text-align:center">表示不同手法</td></tr></tbody></table><h1 id="代码简述"><a href="#代码简述" class="headerlink" title="代码简述"></a>代码简述</h1><blockquote><p>代码从阿里云sdk/examples/linux/mqtt/demo.c开始</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span> &#123;</span><br><span class="line">    TYPE_SERVER_CTL             = <span class="number">1</span>,    <span class="comment">//请求授权</span></span><br><span class="line">    TYPE_SERVER_CMD_REBOOT      = <span class="number">2</span>,    <span class="comment">//重启</span></span><br><span class="line">    TYPE_SERVER_START_OR_PAUSE  = <span class="number">3</span>,    <span class="comment">//开启或暂停</span></span><br><span class="line"></span><br><span class="line">    TYPE_CLIENT_CTL_RESPONED    = <span class="number">101</span>,</span><br><span class="line">    TYPE_CLIENT_HEARTBEAT       = <span class="number">102</span>,</span><br><span class="line">    TYPE_CLIENT_READY           = <span class="number">103</span>,</span><br><span class="line"></span><br><span class="line">    TYPE_SERVER_OPERATE         = <span class="number">999</span>,  <span class="comment">//新增第三方指令集</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//第三方功能集（服务器-&gt;模块）ser_msg.value</span></span><br><span class="line"><span class="keyword">enum</span> &#123;</span><br><span class="line">    ZERO_GRAVITY                = <span class="number">2</span>,    <span class="comment">//零重力</span></span><br><span class="line">    ELEVATING_REGULATION        = <span class="number">3</span>,    <span class="comment">//升降调节</span></span><br><span class="line">    BAROMETRIC_GEAR_REGULATION  = <span class="number">4</span>,    <span class="comment">//气压档位调节</span></span><br><span class="line">    BACK_MASSAGE_STRENRTH       = <span class="number">5</span>,    <span class="comment">//背部按摩调节</span></span><br><span class="line">    REMOTE_VOLUME_CONTROL       = <span class="number">6</span>,    <span class="comment">//音量调节</span></span><br><span class="line">    MASSAGE_TECHNIQUE           = <span class="number">7</span>,    <span class="comment">//按摩手法</span></span><br><span class="line"><span class="comment">//  REMOTE_VOICE_SWITCH         = 8,    //远程语音播放内容</span></span><br></pre></td></tr></table></figure><blockquote><p>上述为定义的指令集</p></blockquote><h2 id="messageArrived函数"><a href="#messageArrived函数" class="headerlink" title="messageArrived函数"></a>messageArrived函数</h2><blockquote><p>服务器与4G模块的通讯函数是massageArived函数</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**********************************************************************</span></span><br><span class="line"><span class="comment"> *            接收消息的回调函数</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 说明：当其它设备的消息到达时，此函数将被执行。</span></span><br><span class="line"><span class="comment"> * 注意：此回调函数中用户在做业务处理时不要使用耗时操作，否则会阻塞接收通道</span></span><br><span class="line"><span class="comment"> **********************************************************************/</span> </span><br><span class="line"><span class="comment">//Server -&gt; Client包 ,服务器下发的控制报(重启包/授权包...) </span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">messageArrived</span><span class="params">(MessageData *md)</span>                               </span></span><br><span class="line"><span class="function"></span>&#123;                                                                          </span><br><span class="line">    <span class="comment">//接收消息缓存                                                        </span></span><br><span class="line"> <span class="keyword">char</span> msg[MSG_LEN_MAX] = &#123;<span class="number">0</span>&#125;;                                             </span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">uart_msg</span> <span class="title">ser_msg</span>;</span>                                             </span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">uart_msg</span> <span class="title">respond_msg</span>;</span>                                        </span><br><span class="line">    <span class="comment">//发送第三方操作指令调用</span></span><br><span class="line">    <span class="keyword">char</span> cmd[<span class="number">11</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">char</span> parm[AMY_PARM_LEN] = &#123;<span class="number">0</span>&#125;; </span><br><span class="line"><span class="keyword">int</span> status = <span class="number">-1</span>;   </span><br><span class="line">MQTTMessage *message = md-&gt;message;      </span><br><span class="line"><span class="keyword">if</span>(message-&gt;payloadlen &gt; MSG_LEN_MAX - <span class="number">1</span>)    </span><br><span class="line">&#123;               </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"process part of receive message\n"</span>);         </span><br><span class="line">message-&gt;payloadlen = MSG_LEN_MAX - <span class="number">1</span>;   </span><br><span class="line">&#125;                   </span><br><span class="line"><span class="comment">//复制接收消息到本地缓存 </span></span><br><span class="line">    <span class="built_in">memcpy</span>(msg,message-&gt;payload,message-&gt;payloadlen);     </span><br><span class="line"><span class="comment">//to-do此处可以增加用户自己业务逻辑，例如：开关灯等操作   </span></span><br><span class="line">    <span class="comment">//打印接收消息   </span></span><br><span class="line">    IOT_LOG(<span class="string">"###################################\n"</span>);          </span><br><span class="line">IOT_LOG(<span class="string">"subscribe Message: [%s]\n"</span>, msg);       </span><br><span class="line">IOT_LOG(<span class="string">"###################################\n"</span>);      </span><br><span class="line"><span class="keyword">if</span> (parse_server_message(msg, &amp;ser_msg) != TRUE_IOT)     </span><br><span class="line">&#123;      </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"subscribe Message: not a valied uart cmd or data messages, ignore this\n"</span>);   </span><br><span class="line"><span class="keyword">return</span>;       </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//授权指令，value有效，data无效</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (ser_msg.type == TYPE_SERVER_CTL)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"subscribe Message: authorization or not\n"</span>);</span><br><span class="line">        respond_msg.type = TYPE_CLIENT_CTL_RESPONED;</span><br><span class="line">        <span class="comment">//respond_msg.hex_no = 0x100;</span></span><br><span class="line">        respond_msg.hex_no = ser_msg.hex_no;</span><br><span class="line">        respond_msg.value = <span class="number">0</span>; <span class="comment">//1: process successful, 0:process failed.</span></span><br><span class="line">        <span class="keyword">if</span> (uart_ctl_trans(uart_fd, ser_msg.value) &gt;= <span class="number">0</span>)</span><br><span class="line">        &#123;                                                                                                       respond_msg.value = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        pub_uart_msg(&amp;client, &amp;respond_msg);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//暂停与继续指令</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(ser_msg.type == TYPE_SERVER_START_OR_PAUSE)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"subscribe Message: start or pause!\n"</span>);</span><br><span class="line">        cmd[<span class="number">0</span>] = <span class="number">0x07</span>;</span><br><span class="line">        cmd[<span class="number">1</span>] = ser_msg.value;</span><br><span class="line">        status = uart_data_trans(uart_fd, cmd, parm);</span><br><span class="line">        <span class="keyword">if</span> (status &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            IOT_LOG(<span class="string">"Third-party directives send error: please check!\n"</span>);</span><br><span class="line">            <span class="keyword">return</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//第三方指令</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(ser_msg.type == TYPE_SERVER_OPERATE)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Operate Message: ser_msg.value = %d,ser_msg.hex_no = %d,ser_msg.data = %d\n"</span>,</span><br><span class="line">                                            ser_msg.value,ser_msg.hex_no,ser_msg.data);</span><br><span class="line">        <span class="comment">//模块到单片机的指令值比服务器到模块的指令少1</span></span><br><span class="line">        <span class="comment">//第三方指令2,3,4,5,6,7对应于C-&gt;U:1,2,3,4,5,6</span></span><br><span class="line">        <span class="comment">//ZERO_GRAVITY                  = 2,    //零重力</span></span><br><span class="line">        <span class="comment">//ELEVATING_REGULATION          = 3,    //升降调节</span></span><br><span class="line">        <span class="comment">//BAROMETRIC_GEAR_REGULATION    = 4,    //气压档位调节</span></span><br><span class="line">        <span class="comment">//BACK_MASSAGE_STRENRTH         = 5,    //背部按摩调节</span></span><br><span class="line">        <span class="comment">//REMOTE_VOLUME_CONTROL         = 6,    //音量调节</span></span><br><span class="line">        <span class="comment">//MASSAGE_TECHNIQUE             = 7,    //按摩手法</span></span><br><span class="line">        <span class="keyword">if</span>(ser_msg.value == ZERO_GRAVITY || ser_msg.value == ELEVATING_REGULATION || ser_msg.value == BAROMETRIC_GEAR_REGULATION</span><br><span class="line">                        || ser_msg.value == BACK_MASSAGE_STRENRTH || ser_msg.value == REMOTE_VOLUME_CONTROL || ser_msg.value == MASSAGE_TECHNIQUE)</span><br><span class="line">        &#123;</span><br><span class="line">            cmd[<span class="number">0</span>] = ser_msg.value - <span class="number">1</span>;</span><br><span class="line">            cmd[<span class="number">1</span>] = ser_msg.data;</span><br><span class="line">            status = uart_data_trans(uart_fd, cmd, parm);</span><br><span class="line">            <span class="keyword">if</span> (status &lt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                IOT_LOG(<span class="string">"Third-party directives send error: please check!\n"</span>);</span><br><span class="line">                <span class="keyword">return</span> ;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;                              </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="uart-data-trans函数"><a href="#uart-data-trans函数" class="headerlink" title="uart_data_trans函数"></a>uart_data_trans函数</h2><blockquote><p>这里面涉及的就是将服务器发送过来的数据重新封装从串口发送给下位单片机！<br>uart_data_trans()函数: 将数据包发送到单片机</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/************************</span></span><br><span class="line"><span class="comment">send to uart len is 24Bytes. = 1+ 22 + 1</span></span><br><span class="line"><span class="comment">but parse format like: 0x7E(1)+CMD|ACK(1)+PARM(10)+0x5A(1) = 13Bytes</span></span><br><span class="line"><span class="comment">**************************/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">uart_data_trans</span><span class="params">(<span class="keyword">int</span> fd, <span class="keyword">char</span> *cmd, <span class="keyword">char</span>* out)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> command = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> ack = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> buf[UART_DATA_SIZE] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    buf[<span class="number">0</span>] = <span class="number">0x7E</span>; <span class="comment">//SOI</span></span><br><span class="line">    buf[UART_DATA_SIZE<span class="number">-1</span>] = <span class="number">0x5A</span>; <span class="comment">//EOI</span></span><br><span class="line"><span class="keyword">if</span> (fd &lt; <span class="number">0</span> || !cmd)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>; </span><br><span class="line">    command = cmd[<span class="number">0</span>];</span><br><span class="line">    <span class="comment">//memcpy(buf+1, cmd, UART_DATA_SIZE-2);//CMD(1Byte) + PARM(10Bytes)</span></span><br><span class="line">    <span class="keyword">for</span> (i =<span class="number">0</span>; i &lt; (UART_DATA_SIZE<span class="number">-2</span>)/<span class="number">2</span>; i++)</span><br><span class="line">    &#123;   </span><br><span class="line">        buf[<span class="number">1</span>+i*<span class="number">2</span>] = cmd[i] &gt;&gt; <span class="number">4</span>;</span><br><span class="line">        buf[<span class="number">1</span>+i*<span class="number">2</span>+<span class="number">1</span>] = cmd[i]&amp;<span class="number">0xf</span>;</span><br><span class="line">    &#125;   </span><br><span class="line"></span><br><span class="line">    ret = uart_send(fd, buf, UART_DATA_SIZE);</span><br><span class="line">    <span class="keyword">if</span> (ret &lt; <span class="number">0</span>)</span><br><span class="line">    &#123;   </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s(): uart_send() failed\n"</span> ,__FUNCTION__);</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="built_in">memset</span>(buf, <span class="number">0</span> , UART_DATA_SIZE);</span><br><span class="line">    ret = uart_recv(fd, buf, UART_DATA_SIZE);        </span><br><span class="line"><span class="keyword">if</span> (ret &lt; <span class="number">0</span>)</span><br><span class="line">    &#123;   </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s(): uart_recv() failed\n"</span>,__FUNCTION__);</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;   </span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (buf[<span class="number">0</span>] != <span class="number">0x7E</span> || buf[UART_DATA_SIZE<span class="number">-1</span>] != <span class="number">0x5A</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"uart data recv format error: first bytes=0x%02x, end byte=[0x%02x]"</span>, buf[<span class="number">0</span>],buf[UART_DATA_SIZE<span class="number">-1</span>]);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">   ack = (buf[<span class="number">1</span>]&lt;&lt;<span class="number">4</span>) | (buf[<span class="number">2</span>]&amp;<span class="number">0xf</span>);                                                                                                                                                                      <span class="keyword">if</span> ((ack &amp; ACK_CMD_MASK) != command)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"uart data ack format error: command =0x%02x, ack cmd =[0x%02x]"</span>, command, (ack &amp; ACK_CMD_MASK));</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">if</span> ((ack&gt;&gt;<span class="number">6</span>) != ACK_AMY_SUCCESS)</span><br><span class="line">     &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"uart data ack error: [%d(1:cmd err, 2:parm err, 3:other err)]"</span>, (ack&gt;&gt;<span class="number">6</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     ret = <span class="number">0</span>;</span><br><span class="line">     <span class="keyword">for</span> (i =<span class="number">0</span>; i &lt; AMY_PARM_LEN; i++)</span><br><span class="line">     &#123;</span><br><span class="line">         out[i] = (buf[<span class="number">3</span>+i*<span class="number">2</span>] &lt;&lt; <span class="number">4</span>) | (buf[<span class="number">3</span>+i*<span class="number">2</span>+<span class="number">1</span>]&amp;<span class="number">0xf</span>);</span><br><span class="line">         <span class="keyword">if</span> (debug)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"(%02x%02x)[%02x] "</span>,buf[<span class="number">3</span>+i*<span class="number">2</span>], buf[<span class="number">3</span>+i*<span class="number">2</span>+<span class="number">1</span>], out[i]);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">if</span> (debug)</span><br><span class="line">     &#123;</span><br><span class="line">         <span class="built_in">printf</span>(<span class="string">"\n#########parse parms 20Bytes to 10Byte\n"</span>);</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     IOT_LOG(<span class="string">"%s(): successful, ret=[%d]\n"</span> ,__FUNCTION__, ret);</span><br><span class="line">     <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这上面的函数就是发送数据包到单片机</p></blockquote><h2 id="parse-server-message函数"><a href="#parse-server-message函数" class="headerlink" title="parse_server_message函数"></a>parse_server_message函数</h2><blockquote><p>parse_server_message()函数：解析服务器发送过来的原始数据填充到struct uart_msg结构体</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">parse_server_message</span><span class="params">(<span class="keyword">char</span>* msg_buf, struct uart_msg *msg)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!msg_buf || !msg)</span><br><span class="line">        <span class="keyword">return</span> FALSE_IOT; </span><br><span class="line"><span class="comment">//"&#123;\"type\":1, \"no\":10, \"value\":\"0\", \"data\":10,  \"code\":null&#125;"</span></span><br><span class="line">    <span class="keyword">char</span> *p = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">char</span> *dilem = <span class="string">","</span>;  </span><br><span class="line">    <span class="keyword">char</span> *remain = <span class="literal">NULL</span>;  </span><br><span class="line">    <span class="keyword">char</span> *src = msg_buf;</span><br><span class="line">    <span class="keyword">char</span> *tmp = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">char</span> *p2 = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">NULL</span> != ( p = strtok_r(src, dilem, &amp;remain) ))   </span><br><span class="line">    &#123;    </span><br><span class="line">        <span class="comment">//printf("p[%s],remain[%s]\n",p, remain);</span></span><br><span class="line">        src = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">if</span> ((tmp = <span class="built_in">strchr</span>(p, <span class="string">':'</span>)) != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;    </span><br><span class="line">            i++; </span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">strstr</span>(p, <span class="string">"type"</span>))</span><br><span class="line">            &#123;    </span><br><span class="line">                msg-&gt;type = atoi(tmp+<span class="number">1</span>);</span><br><span class="line">            &#125;    </span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strstr</span>(p, <span class="string">"no"</span>))</span><br><span class="line">            &#123;    </span><br><span class="line">                msg-&gt;hex_no = strtol(tmp+<span class="number">1</span>, <span class="literal">NULL</span>, <span class="number">16</span>);<span class="comment">//hex type</span></span><br><span class="line">            &#125;    </span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strstr</span>(p, <span class="string">"value"</span>))</span><br><span class="line">            &#123;    </span><br><span class="line">                <span class="keyword">if</span> ((p2 = <span class="built_in">strchr</span>(tmp+<span class="number">1</span>, <span class="string">'\"'</span>)) != <span class="literal">NULL</span> || (p2 = <span class="built_in">strchr</span>(tmp+<span class="number">1</span>, <span class="string">'\''</span>)) != <span class="literal">NULL</span>)</span><br><span class="line">                &#123;<span class="comment">//value parsed type string.</span></span><br><span class="line">                    msg-&gt;value = atoi(p2+<span class="number">1</span>);</span><br><span class="line">                &#125;    </span><br><span class="line">                <span class="keyword">else</span> </span><br><span class="line">                &#123;<span class="comment">//value parsed type int.</span></span><br><span class="line">                    msg-&gt;value = atoi(tmp+<span class="number">1</span>);</span><br><span class="line">                &#125;    </span><br><span class="line">            &#125;    </span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">strstr</span>(p, <span class="string">"data"</span>)) </span><br><span class="line">            &#123;    </span><br><span class="line">                msg-&gt;data = atoi(tmp+<span class="number">1</span>); </span><br><span class="line">            &#125; </span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123; </span><br><span class="line">                <span class="comment">//invalid json key </span></span><br><span class="line">                i--; </span><br><span class="line">            &#125; </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (i &lt; <span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s(): Error:lose parameter, i=[%d] less than 3!\n"</span>, __FUNCTION__, i);</span><br><span class="line">        <span class="keyword">return</span> FALSE_IOT;</span><br><span class="line">    &#125;</span><br><span class="line">    IOT_LOG(<span class="string">"%s(): parse end:type=[%d], no=[%x], value:[\"%d\"], data:[%x]\n"</span>, __FUNCTION__, msg-&gt;type, msg-&gt;hex_no, msg-&gt;value, msg-&gt;data);</span><br><span class="line">    <span class="keyword">return</span> TRUE_IOT;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>原始数据是 type:1, no:10, value:0, data:10,  code:null</p><p>所以以“，”作为分隔，“：”再次分隔可得到相应的数据</p></blockquote><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><blockquote><p>本次修改是基于阿里云iot-sdk下运行的，所以关于mqtt代码都是现成的，有兴趣可以查看相关的源码</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> linux应用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mqtt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wlan firmware log</title>
      <link href="/2019/05/14/wlan-firmware-log/"/>
      <url>/2019/05/14/wlan-firmware-log/</url>
      
        <content type="html"><![CDATA[<h1 id="修改WCNSS-qcom-cfg-ini"><a href="#修改WCNSS-qcom-cfg-ini" class="headerlink" title="修改WCNSS_qcom_cfg.ini"></a>修改WCNSS_qcom_cfg.ini</h1><blockquote><p>将下面两条词缀全置为1</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#Enable firmware log</span><br><span class="line">gEnablefwlog=1</span><br><span class="line"># Enable broadcast logging to the userspace entities</span><br><span class="line">gMulticastHostFwMsgs=1</span><br></pre></td></tr></table></figure><h1 id="确认Data-msc"><a href="#确认Data-msc" class="headerlink" title="确认Data.msc"></a>确认Data.msc</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//检测</span><br><span class="line">ls -al /firmware/image/</span><br><span class="line">//若没有Data.msc执行以下命令</span><br><span class="line">adb push Data.msc /firmware/image/</span><br></pre></td></tr></table></figure><h1 id="更改Data-msc权限"><a href="#更改Data-msc权限" class="headerlink" title="更改Data.msc权限"></a>更改Data.msc权限</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 Data.msc</span><br></pre></td></tr></table></figure><h1 id="更改linux内核日志级别"><a href="#更改linux内核日志级别" class="headerlink" title="更改linux内核日志级别"></a>更改linux内核日志级别</h1><h2 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/sys/kernel/printk</span><br></pre></td></tr></table></figure><p><img src="printk1.png" alt="printk1.png"></p><h2 id="更改"><a href="#更改" class="headerlink" title="更改"></a>更改</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> 4 &gt; /proc/sys/kernel/printk</span><br></pre></td></tr></table></figure><h2 id="确认"><a href="#确认" class="headerlink" title="确认"></a>确认</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/sys/kernel/printk</span><br></pre></td></tr></table></figure><p><img src="printk2.png" alt="printk2.png"></p><h1 id="打开fw-log"><a href="#打开fw-log" class="headerlink" title="打开fw log"></a>打开fw log</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iwpriv wlan0 dl_report 1</span><br><span class="line">iwpriv wlan0 dl_type 1</span><br><span class="line">iwpriv wlan0 dl_loglevel 0</span><br></pre></td></tr></table></figure><h1 id="抓取log"><a href="#抓取log" class="headerlink" title="抓取log"></a>抓取log</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnss_diag -c &gt; /data/fw_log.txt</span><br></pre></td></tr></table></figure><p><img src="FWMSG.png" alt="FWMSG.png"></p><blockquote><p>如果生成的fw_log.txt文件出现如上图所示，说明firmware log已经正常抓取！！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> linux调试技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wifi </tag>
            
            <tag> firmware log </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>aw9523芯片驱动</title>
      <link href="/2019/05/11/aw9523%E8%8A%AF%E7%89%87%E9%A9%B1%E5%8A%A8/"/>
      <url>/2019/05/11/aw9523%E8%8A%AF%E7%89%87%E9%A9%B1%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="硬件连接图"><a href="#硬件连接图" class="headerlink" title="硬件连接图"></a>硬件连接图</h1><blockquote><p>AW9523 是一款 IIC 串口转 16 路 GPIO 并口控制器，8 路 PUSH-PULL 驱动，8 路OPEN-DRAIN 或 PUSH-PULL 驱动可选。芯片上电后，GPIO 口为输出状态，中断使能有效。输出电平状态取决于两位 IIC 地址引脚。AW9523 支持引脚关断功能(PDN)，低有效。重新使能后，内部电路处于默认状态。对每一个输入信号作 8us 去抖动处理，当中断使能时，输入状态变化产生中断请求(INTN)。中断为开漏输出，低有效。通过接口读输入状态寄存器清除中断</p></blockquote><p><img src="aw9523原理图.png" alt="aw9523原理图"></p><h1 id="芯片介绍"><a href="#芯片介绍" class="headerlink" title="芯片介绍"></a>芯片介绍</h1><h2 id="寄存器列表"><a href="#寄存器列表" class="headerlink" title="寄存器列表"></a>寄存器列表</h2><table><thead><tr><th style="text-align:center">ADDR</th><th style="text-align:center">W/R</th><th style="text-align:center">Default Value(HEX)</th><th style="text-align:center">Function</th><th style="text-align:center">Description</th></tr></thead><tbody><tr><td style="text-align:center">00H</td><td style="text-align:center">R</td><td style="text-align:center">xxH</td><td style="text-align:center">INPUT_PORT0</td><td style="text-align:center">P0x口输入状态</td></tr><tr><td style="text-align:center">01H</td><td style="text-align:center">R</td><td style="text-align:center">xxH</td><td style="text-align:center">INPUT_PORT1</td><td style="text-align:center">P1x 口输入状态</td></tr><tr><td style="text-align:center">02H</td><td style="text-align:center">W/R</td><td style="text-align:center">xxH</td><td style="text-align:center">OUTPUT_PORT0</td><td style="text-align:center">P0x口输出驱动逻辑，默认值与i2c地址引脚相关</td></tr><tr><td style="text-align:center">03H</td><td style="text-align:center">W/R</td><td style="text-align:center">xxH</td><td style="text-align:center">OUTPUT_PORT0</td><td style="text-align:center">P1x口输出驱动逻辑，默认值与i2c地址引脚相关</td></tr><tr><td style="text-align:center">04H</td><td style="text-align:center">W/R</td><td style="text-align:center">00H</td><td style="text-align:center">CFG_PORT0</td><td style="text-align:center">P0x 口输入或输出选择</td></tr><tr><td style="text-align:center">05H</td><td style="text-align:center">W/R</td><td style="text-align:center">00H</td><td style="text-align:center">CFG_PORT1</td><td style="text-align:center">P1x 口输入或输出选择</td></tr><tr><td style="text-align:center">06H</td><td style="text-align:center">W/R</td><td style="text-align:center">00H</td><td style="text-align:center">INTN_PORT0</td><td style="text-align:center">P0x 口中断使能</td></tr><tr><td style="text-align:center">07H</td><td style="text-align:center">W/R</td><td style="text-align:center">00H</td><td style="text-align:center">INTN_PORT1</td><td style="text-align:center">P1x 口中断使能</td></tr><tr><td style="text-align:center">08H-10H</td><td style="text-align:center">-</td><td style="text-align:center">-</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">11H</td><td style="text-align:center">W/R</td><td style="text-align:center">00H</td><td style="text-align:center">GPOMD</td><td style="text-align:center">P0x口选择OPEN-DRAIN驱动或 PUSH-PULL驱动</td></tr><tr><td style="text-align:center">12H-7EH</td><td style="text-align:center">-</td><td style="text-align:center">-</td><td style="text-align:center">-</td><td style="text-align:center">-</td></tr><tr><td style="text-align:center">7FH</td><td style="text-align:center">W</td><td style="text-align:center">00H</td><td style="text-align:center">RESET</td><td style="text-align:center">写00H复位</td></tr></tbody></table><h2 id="GPIO输入输出方向选择"><a href="#GPIO输入输出方向选择" class="headerlink" title="GPIO输入输出方向选择"></a>GPIO输入输出方向选择</h2><blockquote><p>CFG_PORT0 和 CFG_PORT1 设定端口为输入、输出状态。寄存器每一比特对应某个 GPIO端口，该位置’1’代表输入状态，置’0’代表输出状态。AW9523 上电后，默认为输出状态。</p></blockquote><h2 id="GPIO输出驱动"><a href="#GPIO输出驱动" class="headerlink" title="GPIO输出驱动"></a>GPIO输出驱动</h2><blockquote><p>P0x 端口默认为 OPEN-DRAIN 驱动，可通过配置 GPOMD 寄存器设定为 PUSH-PULL 驱动。P1x 端口为 PUSH-PULL 驱动。开漏输出时，通过外部电阻上拉驱动高电平。</p><p>GPIO 口默认驱动逻辑取决于 AD0/AD1 两个引脚</p></blockquote><table><thead><tr><th style="text-align:center">AD1</th><th style="text-align:center">AD0</th><th style="text-align:center">P17</th><th style="text-align:center">P16</th><th style="text-align:center">P15</th><th style="text-align:center">P14</th><th style="text-align:center">P13</th><th style="text-align:center">P12</th><th style="text-align:center">P11</th><th style="text-align:center">P10</th><th style="text-align:center">P07</th><th style="text-align:center">P06</th><th style="text-align:center">P05</th><th style="text-align:center">P04</th><th style="text-align:center">P03</th><th style="text-align:center">P02</th><th style="text-align:center">P01</th><th style="text-align:center">P00</th></tr></thead><tbody><tr><td style="text-align:center">GND</td><td style="text-align:center">GND</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">GND</td><td style="text-align:center">VCC</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td></tr><tr><td style="text-align:center">VCC</td><td style="text-align:center">GND</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">VCC</td><td style="text-align:center">VCC</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td></tr></tbody></table><h2 id="GPIO输入状态查询"><a href="#GPIO输入状态查询" class="headerlink" title="GPIO输入状态查询"></a>GPIO输入状态查询</h2><blockquote><p>通过 IIC 接口读 INPUT_PORT0 和 INPUT_PORT1 可获得当前 GPIO 端口逻辑状态。AW9523 GPIO 口支持 1.8V 高电平输入。</p></blockquote><h2 id="中断功能"><a href="#中断功能" class="headerlink" title="中断功能"></a>中断功能</h2><blockquote><p>当 GPIO 口配置成输入状态，且使能中断功能后，该 IO 口的输入状态变化将产生中断请求。默认情况下，16 路 GPIO 口中断使能。AW9523 时刻监测输入状态，当检测到 IO 口逻辑电平变化，内部电路进行 8us 去抖动处理。若 8us 后，确认该状态变化，则中断引脚上电平拉低。</p></blockquote><blockquote><p> 通过读 INPUT_PORT0 和 INPUT_PORT1 寄存器清除中断。由 P0x 变化产生的中断，必须读INPUT_PORT0 寄存器清除；由 P1x 变化产生的中断，必须读 INPUT_PORT1 寄存器清除。不可<br>跨组清除中断。</p></blockquote><h2 id="复位功能"><a href="#复位功能" class="headerlink" title="复位功能"></a>复位功能</h2><blockquote><p>AW9523 支持引脚复位和软复位。拉低 PDN 引脚，AW9523 内部电路处于复位状态直至 PDN引脚拉高。或通过 IIC 接口对 RESET 寄存器写入数据 00H，内部电路也将完成一次复位。</p></blockquote><h2 id="寄存器详细描述"><a href="#寄存器详细描述" class="headerlink" title="寄存器详细描述"></a>寄存器详细描述</h2><h3 id="INPUT-PORT0-00H-，输入状态寄存器"><a href="#INPUT-PORT0-00H-，输入状态寄存器" class="headerlink" title="INPUT_PORT0(00H) ，输入状态寄存器"></a>INPUT_PORT0(00H) ，输入状态寄存器</h3><table><thead><tr><th style="text-align:center">位</th><th style="text-align:center">名称</th><th style="text-align:center">描述</th><th style="text-align:center">默认值</th></tr></thead><tbody><tr><td style="text-align:center">D7</td><td style="text-align:center">INPUT_P07</td><td style="text-align:center">P07 引脚当前逻辑状态，0-低电平，1-高电平</td><td style="text-align:center">X</td></tr><tr><td style="text-align:center">D6</td><td style="text-align:center">INPUT_P06</td><td style="text-align:center">P06 引脚当前逻辑状态，0-低电平，1-高电平</td><td style="text-align:center">X</td></tr><tr><td style="text-align:center">D5</td><td style="text-align:center">INPUT_P05</td><td style="text-align:center">P05 引脚当前逻辑状态，0-低电平，1-高电平</td><td style="text-align:center">X</td></tr><tr><td style="text-align:center">D4</td><td style="text-align:center">INPUT_P04</td><td style="text-align:center">P04 引脚当前逻辑状态，0-低电平，1-高电平</td><td style="text-align:center">X</td></tr><tr><td style="text-align:center">D3</td><td style="text-align:center">INPUT_P03</td><td style="text-align:center">P03 引脚当前逻辑状态，0-低电平，1-高电平</td><td style="text-align:center">X</td></tr><tr><td style="text-align:center">D2</td><td style="text-align:center">INPUT_P02</td><td style="text-align:center">P02 引脚当前逻辑状态，0-低电平，1-高电平</td><td style="text-align:center">X</td></tr><tr><td style="text-align:center">D1</td><td style="text-align:center">INPUT_P01</td><td style="text-align:center">P01 引脚当前逻辑状态，0-低电平，1-高电平</td><td style="text-align:center">X</td></tr><tr><td style="text-align:center">D0</td><td style="text-align:center">INPUT_P00</td><td style="text-align:center">P00 引脚当前逻辑状态，0-低电平，1-高电平</td><td style="text-align:center">X</td></tr></tbody></table><h3 id="INPUT-PORT1-01H-，输入状态寄存器"><a href="#INPUT-PORT1-01H-，输入状态寄存器" class="headerlink" title="INPUT_PORT1(01H)，输入状态寄存器"></a>INPUT_PORT1(01H)，输入状态寄存器</h3><table><thead><tr><th style="text-align:center">位</th><th style="text-align:center">名称</th><th style="text-align:center">描述</th><th style="text-align:center">默认值</th></tr></thead><tbody><tr><td style="text-align:center">D7</td><td style="text-align:center">INPUT_P17</td><td style="text-align:center">P17 引脚当前逻辑状态，0-低电平，1-高电平</td><td style="text-align:center">X</td></tr><tr><td style="text-align:center">D6</td><td style="text-align:center">INPUT_P16</td><td style="text-align:center">P16 引脚当前逻辑状态，0-低电平，1-高电平</td><td style="text-align:center">X</td></tr><tr><td style="text-align:center">D5</td><td style="text-align:center">INPUT_P15</td><td style="text-align:center">P15 引脚当前逻辑状态，0-低电平，1-高电平</td><td style="text-align:center">X</td></tr><tr><td style="text-align:center">D4</td><td style="text-align:center">INPUT_P14</td><td style="text-align:center">P14 引脚当前逻辑状态，0-低电平，1-高电平</td><td style="text-align:center">X</td></tr><tr><td style="text-align:center">D3</td><td style="text-align:center">INPUT_P13</td><td style="text-align:center">P13 引脚当前逻辑状态，0-低电平，1-高电平</td><td style="text-align:center">X</td></tr><tr><td style="text-align:center">D2</td><td style="text-align:center">INPUT_P12</td><td style="text-align:center">P12 引脚当前逻辑状态，0-低电平，1-高电平</td><td style="text-align:center">X</td></tr><tr><td style="text-align:center">D1</td><td style="text-align:center">INPUT_P11</td><td style="text-align:center">P11 引脚当前逻辑状态，0-低电平，1-高电平</td><td style="text-align:center">X</td></tr><tr><td style="text-align:center">D0</td><td style="text-align:center">INPUT_P10</td><td style="text-align:center">P10 引脚当前逻辑状态，0-低电平，1-高电平</td><td style="text-align:center">X</td></tr></tbody></table><h3 id="OUTPUT-PORT0-02H-，输出状态寄存器"><a href="#OUTPUT-PORT0-02H-，输出状态寄存器" class="headerlink" title="OUTPUT_PORT0(02H)，输出状态寄存器"></a>OUTPUT_PORT0(02H)，输出状态寄存器</h3><blockquote><p>AD1/AD0外接GND/GND时，输出默认值</p></blockquote><table><thead><tr><th style="text-align:center">位</th><th style="text-align:center">名称</th><th style="text-align:center">描述</th><th style="text-align:center">默认值</th></tr></thead><tbody><tr><td style="text-align:center">D7</td><td style="text-align:center">OUTPUT_P07</td><td style="text-align:center">P07 引脚输出状态，0-低电平，1-高电平</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">D6</td><td style="text-align:center">OUTPUT_P06</td><td style="text-align:center">P06 引脚输出状态，0-低电平，1-高电平</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">D5</td><td style="text-align:center">OUTPUT_P05</td><td style="text-align:center">P05 引脚输出状态，0-低电平，1-高电平</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">D4</td><td style="text-align:center">OUTPUT_P04</td><td style="text-align:center">P04 引脚输出状态，0-低电平，1-高电平</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">D3</td><td style="text-align:center">OUTPUT_P03</td><td style="text-align:center">P03 引脚输出状态，0-低电平，1-高电平</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">D2</td><td style="text-align:center">OUTPUT_P02</td><td style="text-align:center">P02 引脚输出状态，0-低电平，1-高电平</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">D1</td><td style="text-align:center">OUTPUT_P01</td><td style="text-align:center">P01 引脚输出状态，0-低电平，1-高电平</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">D0</td><td style="text-align:center">OUTPUT_P00</td><td style="text-align:center">P00 引脚输出状态，0-低电平，1-高电平</td><td style="text-align:center">0</td></tr></tbody></table><h3 id="OUTPUT-PORT1-03H-，输出状态寄存器"><a href="#OUTPUT-PORT1-03H-，输出状态寄存器" class="headerlink" title="OUTPUT_PORT1(03H)，输出状态寄存器"></a>OUTPUT_PORT1(03H)，输出状态寄存器</h3><blockquote><p>AD1/AD0外接GND/GND时，输出默认值</p></blockquote><table><thead><tr><th style="text-align:center">位</th><th style="text-align:center">名称</th><th style="text-align:center">描述</th><th style="text-align:center">默认值</th></tr></thead><tbody><tr><td style="text-align:center">D7</td><td style="text-align:center">OUTPUT_P17</td><td style="text-align:center">P17 引脚输出状态，0-低电平，1-高电平</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">D6</td><td style="text-align:center">OUTPUT_P16</td><td style="text-align:center">P16 引脚输出状态，0-低电平，1-高电平</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">D5</td><td style="text-align:center">OUTPUT_P15</td><td style="text-align:center">P15 引脚输出状态，0-低电平，1-高电平</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">D4</td><td style="text-align:center">OUTPUT_P14</td><td style="text-align:center">P14 引脚输出状态，0-低电平，1-高电平</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">D3</td><td style="text-align:center">OUTPUT_P13</td><td style="text-align:center">P13 引脚输出状态，0-低电平，1-高电平</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">D2</td><td style="text-align:center">OUTPUT_P12</td><td style="text-align:center">P12 引脚输出状态，0-低电平，1-高电平</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">D1</td><td style="text-align:center">INPUT_P11</td><td style="text-align:center">P11 引脚输出状态，0-低电平，1-高电平</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">D0</td><td style="text-align:center">OUTPUT_P10</td><td style="text-align:center">P10 引脚输出状态，0-低电平，1-高电平</td><td style="text-align:center">0</td></tr></tbody></table><h3 id="INTN-PORT0-06H-，中断使能寄存器"><a href="#INTN-PORT0-06H-，中断使能寄存器" class="headerlink" title="INTN_PORT0(06H)，中断使能寄存器"></a>INTN_PORT0(06H)，中断使能寄存器</h3><table><thead><tr><th style="text-align:center">位</th><th style="text-align:center">名称</th><th style="text-align:center">描述</th><th style="text-align:center">默认值</th></tr></thead><tbody><tr><td style="text-align:center">D7</td><td style="text-align:center">INTN_P07</td><td style="text-align:center">P07 引脚中断使能控制，0-使能，1-关断</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">D6</td><td style="text-align:center">INTN_P06</td><td style="text-align:center">P06 引脚中断使能控制，0-使能，1-关断</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">D5</td><td style="text-align:center">INTN_P05</td><td style="text-align:center">P05 引脚中断使能控制，0-使能，1-关断</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">D4</td><td style="text-align:center">INTN_P04</td><td style="text-align:center">P04 引脚中断使能控制，0-使能，1-关断</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">D3</td><td style="text-align:center">INTN_P03</td><td style="text-align:center">P03 引脚中断使能控制，0-使能，1-关断</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">D2</td><td style="text-align:center">INTN_P02</td><td style="text-align:center">P02 引脚中断使能控制，0-使能，1-关断</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">D1</td><td style="text-align:center">INTN_P01</td><td style="text-align:center">P01 引脚中断使能控制，0-使能，1-关断</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">D0</td><td style="text-align:center">INTN_P00</td><td style="text-align:center">P00 引脚中断使能控制，0-使能，1-关断</td><td style="text-align:center">0</td></tr></tbody></table><h3 id="INTN-PORT1-07H-，中断使能寄存器"><a href="#INTN-PORT1-07H-，中断使能寄存器" class="headerlink" title="INTN_PORT1(07H)，中断使能寄存器"></a>INTN_PORT1(07H)，中断使能寄存器</h3><table><thead><tr><th style="text-align:center">位</th><th style="text-align:center">名称</th><th style="text-align:center">描述</th><th style="text-align:center">默认值</th></tr></thead><tbody><tr><td style="text-align:center">D7</td><td style="text-align:center">INTN_P17</td><td style="text-align:center">P17 引脚中断使能控制，0-使能，1-关断</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">D6</td><td style="text-align:center">INTN_P16</td><td style="text-align:center">P16 引脚中断使能控制，0-使能，1-关断</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">D5</td><td style="text-align:center">INTN_P15</td><td style="text-align:center">P15 引脚中断使能控制，0-使能，1-关断</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">D4</td><td style="text-align:center">INTN_P14</td><td style="text-align:center">P14 引脚中断使能控制，0-使能，1-关断</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">D3</td><td style="text-align:center">INTN_P13</td><td style="text-align:center">P13 引脚中断使能控制，0-使能，1-关断</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">D2</td><td style="text-align:center">INTN_P12</td><td style="text-align:center">P12 引脚中断使能控制，0-使能，1-关断</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">D1</td><td style="text-align:center">INTN_P11</td><td style="text-align:center">P11 引脚中断使能控制，0-使能，1-关断</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">D0</td><td style="text-align:center">INTN_P10</td><td style="text-align:center">P10 引脚中断使能控制，0-使能，1-关断</td><td style="text-align:center">0</td></tr></tbody></table><h1 id="GPIO配置表"><a href="#GPIO配置表" class="headerlink" title="GPIO配置表"></a>GPIO配置表</h1><blockquote><p>AW9523(0x58)主要是用来连接各种灯的</p></blockquote><table><thead><tr><th style="text-align:center">AW9523(0X58)</th><th style="text-align:center">引脚连接</th></tr></thead><tbody><tr><td style="text-align:center">P00</td><td style="text-align:center">3G_SIGNAL_LED_B</td></tr><tr><td style="text-align:center">P01</td><td style="text-align:center">3G_SIGNAL_LED_R</td></tr><tr><td style="text-align:center">P02</td><td style="text-align:center">3G_SIGNAL_LED_G</td></tr><tr><td style="text-align:center">P03</td><td style="text-align:center">LED2G4</td></tr><tr><td style="text-align:center">P04</td><td style="text-align:center">5GLED</td></tr><tr><td style="text-align:center">P05</td><td style="text-align:center">LAN LED</td></tr><tr><td style="text-align:center">P06</td><td style="text-align:center">SIGNAL_LED_1</td></tr><tr><td style="text-align:center">P07</td><td style="text-align:center">SIGNAL_LED_2</td></tr><tr><td style="text-align:center">P14</td><td style="text-align:center">SIGNAL_LED_3</td></tr><tr><td style="text-align:center">P15</td><td style="text-align:center">SIGNAL_LED_4</td></tr><tr><td style="text-align:center">SCL</td><td style="text-align:center">GPIO11(mdm9x40 i2c_3)</td></tr><tr><td style="text-align:center">SDA</td><td style="text-align:center">GPIO10(mdm9x40 i2c_3)</td></tr><tr><td style="text-align:center">PDN</td><td style="text-align:center">GPIO99(mdm9x40)</td></tr></tbody></table><blockquote><p>AW9523(0x5A)主要是用来连接按键的</p></blockquote><table><thead><tr><th style="text-align:center">AW9523(0X5A)</th><th style="text-align:center">引脚连接</th></tr></thead><tbody><tr><td style="text-align:center">P00</td><td style="text-align:center">WPS_KEY</td></tr><tr><td style="text-align:center">P01</td><td style="text-align:center">RESET_KEY</td></tr><tr><td style="text-align:center">SCL</td><td style="text-align:center">GPIO11(mdm9x40 i2c_3)</td></tr><tr><td style="text-align:center">SDA</td><td style="text-align:center">GPIO10(mdm9x40 i2c_3)</td></tr><tr><td style="text-align:center">INTN</td><td style="text-align:center">GPIO94(mdm9x40)</td></tr><tr><td style="text-align:center">PDN</td><td style="text-align:center">GPIO99(mdm9x40)</td></tr></tbody></table><h1 id="设备树配置"><a href="#设备树配置" class="headerlink" title="设备树配置"></a>设备树配置</h1><blockquote><p>相关的文件：</p></blockquote><ol><li>kernel/arch/arm/boot/dts/qcom/mdm9640.dtsi</li><li>kernel/arch/arm/boot/dts/qcom/mdm9640-pinctrl.dtsi</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">aw9523_pins_rst0: aw9523_pins_rst0 &#123;                                                   </span><br><span class="line">     mux &#123;</span><br><span class="line">             pins = &quot;gpio99&quot;;</span><br><span class="line">             function = &quot;gpio&quot;;</span><br><span class="line">         &#125;;</span><br><span class="line">     config &#123;</span><br><span class="line">             pins = &quot;gpio99&quot;;</span><br><span class="line">             drive-strength = &lt;12&gt;;</span><br><span class="line">             bias-disable = &lt;0&gt;;</span><br><span class="line">             output-low;</span><br><span class="line">           &#125;;</span><br><span class="line">   &#125;;</span><br><span class="line">   aw9523_pins_rst1: aw9523_pins_rst1 &#123;</span><br><span class="line">           mux &#123;</span><br><span class="line">                   pins = &quot;gpio99&quot;;</span><br><span class="line">                   function = &quot;gpio&quot;;</span><br><span class="line">           &#125;;</span><br><span class="line">           config &#123;</span><br><span class="line">                   pins = &quot;gpio99&quot;;</span><br><span class="line">                   drive-strength = &lt;12&gt;;</span><br><span class="line">                   bias-disable = &lt;0&gt;;</span><br><span class="line">                   output-high;</span><br><span class="line">           &#125;;</span><br><span class="line">   &#125;;</span><br><span class="line">   aw9523_pins_eint_as_int: aw9523_pins_eint_as_int &#123;</span><br><span class="line">           mux &#123;</span><br><span class="line">                   pins = &quot;gpio94&quot;;</span><br><span class="line">                   function = &quot;gpio&quot;;</span><br><span class="line">           &#125;;</span><br><span class="line">           config &#123;</span><br><span class="line">                   pins = &quot;gpio94&quot;;</span><br><span class="line">                   drive-strength = &lt;10&gt;;</span><br><span class="line">                   input-enable;</span><br><span class="line">                   bias-pull-up;</span><br><span class="line"></span><br><span class="line">           &#125;;</span><br><span class="line">   &#125;;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&amp;i2c_3 &#123;</span><br><span class="line">        aw9523_led: aw9523_led@58 &#123;</span><br><span class="line">            compatible = &quot;awinic,aw9523_led&quot;;</span><br><span class="line">            reg = &lt;0x58&gt;;</span><br><span class="line">            reset-gpio = &lt;&amp;tlmm_pinmux 99 0&gt;;</span><br><span class="line">            status = &quot;okay&quot;;</span><br><span class="line">            aw9523,led &#123;</span><br><span class="line">                aw9523,name = &quot;aw9523_led&quot;;</span><br><span class="line">                aw9523,imax = &lt;3&gt;; </span><br><span class="line">                aw9523,brightness = &lt;32&gt;;</span><br><span class="line">                aw9523,max_brightness = &lt;255&gt;;</span><br><span class="line">            &#125;;   </span><br><span class="line">        &#125;;   </span><br><span class="line">     </span><br><span class="line">        aw9523_key: aw9523_key@5A &#123;</span><br><span class="line">            compatible = &quot;awinic,aw9523_key&quot;;                                                   </span><br><span class="line">            reg = &lt;0x5a&gt;;</span><br><span class="line">            awinic,reset-gpio = &lt;&amp;tlmm_pinmux 99 0&gt;;</span><br><span class="line">            awinic,irq-gpio = &lt;&amp;tlmm_pinmux 94 0&gt;;</span><br><span class="line">            pinctrl-names = &quot;aw9523_reset_low&quot;, &quot;aw9523_reset_high&quot;, &quot;aw9523_eint&quot;;</span><br><span class="line">            pinctrl-0 = &lt;&amp;aw9523_pins_rst0&gt;;</span><br><span class="line">            pinctrl-1 = &lt;&amp;aw9523_pins_rst1&gt;;</span><br><span class="line">            pinctrl-2 = &lt;&amp;aw9523_pins_eint_as_int&gt;;</span><br><span class="line">            status = &quot;okay&quot;;</span><br><span class="line">        &#125;;   </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="AW9523驱动流程"><a href="#AW9523驱动流程" class="headerlink" title="AW9523驱动流程"></a>AW9523驱动流程</h1><blockquote><p>相关文件：</p></blockquote><ol><li>/kernel/driver/i2c/aw9523/aw9523_key.c</li><li>/kernel/driver/i2c/aw9523/aw9523_led.c</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment">/* seset &amp; int Pins  */</span>                                                                       </span><br><span class="line">pdata-&gt;pinctrl = devm_pinctrl_get(&amp;client-&gt;dev);</span><br><span class="line">   <span class="keyword">if</span> (IS_ERR(pdata-&gt;pinctrl)) &#123;                                                          </span><br><span class="line">       pr_err(<span class="string">"%s:failed to get pinctrl\n"</span>, __func__);  </span><br><span class="line"><span class="keyword">goto</span> err; </span><br><span class="line">   &#125;                                                                   </span><br><span class="line">   pdata-&gt;rst_state_low = pinctrl_lookup_state(pdata-&gt;pinctrl, <span class="string">"aw9523_reset_low"</span>); </span><br><span class="line"><span class="keyword">if</span> (IS_ERR(pdata-&gt;rst_state_low)) &#123;    </span><br><span class="line">pr_err(<span class="string">"%s:can not get reset pinstate\n"</span>, __func__);     </span><br><span class="line"><span class="keyword">goto</span> err;                                                                 </span><br><span class="line">   &#125;                                                                  </span><br><span class="line">   pdata-&gt;rst_state_high = pinctrl_lookup_state(pdata-&gt;pinctrl, <span class="string">"aw9523_reset_high"</span>);   </span><br><span class="line"><span class="keyword">if</span> (IS_ERR(pdata-&gt;rst_state_high)) &#123;         </span><br><span class="line">pr_err(<span class="string">"%s:can not get reset pinstate\n"</span>, __func__);     </span><br><span class="line"><span class="keyword">goto</span> err;        </span><br><span class="line">&#125;                                                                  </span><br><span class="line">   pdata-&gt;irq_state = pinctrl_lookup_state(pdata-&gt;pinctrl, <span class="string">"aw9523_eint"</span>);   </span><br><span class="line"><span class="keyword">if</span> (IS_ERR(pdata-&gt;irq_state)) &#123;    </span><br><span class="line">pr_err(<span class="string">"%s:can not get irq pinstate\n"</span>, __func__);</span><br><span class="line">       <span class="keyword">goto</span> err;</span><br><span class="line">   &#125;</span><br><span class="line">ret= pinctrl_select_state(pdata-&gt;pinctrl, pdata-&gt;rst_state_high);</span><br><span class="line">   <span class="keyword">if</span> (ret)&#123;</span><br><span class="line">       pr_err(<span class="string">"%s:set reset pin state failed!\n"</span>, __func__);</span><br><span class="line">   &#125;</span><br><span class="line">ret = pinctrl_select_state(pdata-&gt;pinctrl, pdata-&gt;irq_state);</span><br><span class="line">   <span class="keyword">if</span> (ret)&#123;</span><br><span class="line">       pr_err(<span class="string">"%s:set irq pin state failed!\n"</span>, __func__);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><blockquote><p>pinctrl子系统，选择rst引脚状态</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment">/* key report */</span>        </span><br><span class="line">pdata-&gt;input = input_allocate_device();</span><br><span class="line">   <span class="keyword">if</span> (!pdata-&gt;input) &#123;</span><br><span class="line">       dev_err(&amp;client-&gt;dev, <span class="string">"%s: failed to allocate input device\n"</span>, __func__);</span><br><span class="line">       <span class="keyword">goto</span> err_rst_gpio;</span><br><span class="line">   &#125;</span><br><span class="line">pdata-&gt;input-&gt;name = <span class="string">"aw9523-key"</span>;</span><br><span class="line">   pdata-&gt;input-&gt;phys = <span class="string">"aw9523-keys/input0"</span>;</span><br><span class="line">   pdata-&gt;input-&gt;dev.parent = &amp;client-&gt;dev;</span><br><span class="line">   pdata-&gt;keymap_len = <span class="keyword">sizeof</span>(key_map)/<span class="keyword">sizeof</span>(struct keymap);</span><br><span class="line">   pdata-&gt;keymap = (struct keymap *)&amp;key_map;</span><br><span class="line">input_set_drvdata(pdata-&gt;input, pdata);</span><br><span class="line">__set_bit(EV_KEY, pdata-&gt;input-&gt;evbit);</span><br><span class="line">   __set_bit(EV_SYN, pdata-&gt;input-&gt;evbit);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; pdata-&gt;keymap_len; i++)&#123;</span><br><span class="line">       <span class="keyword">if</span>(pdata-&gt;keymap[i].name[<span class="number">0</span>]==<span class="string">'\0'</span>) <span class="keyword">continue</span>;</span><br><span class="line">       __set_bit(pdata-&gt;keymap[i].key_code, pdata-&gt;input-&gt;keybit);</span><br><span class="line">   &#125;</span><br><span class="line">ret = input_register_device(pdata-&gt;input);</span><br></pre></td></tr></table></figure><blockquote><p>注册input子系统</p></blockquote><h1 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * aw9523.c   aw9523 martix key</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Version: v1.0.1</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Copyright (c) 2017 AWINIC Technology CO., LTD</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  Author: Nick Li &lt;liweilei@awinic.com.cn&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This program is free software; you can redistribute  it and/or modify it</span></span><br><span class="line"><span class="comment"> * under  the terms of  the GNU General  Public License as published by the</span></span><br><span class="line"><span class="comment"> * Free Software Foundation;  either version 2 of the  License, or (at your</span></span><br><span class="line"><span class="comment"> * option) any later version.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/module.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/init.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/interrupt.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/irq.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/workqueue.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/errno.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/pm.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/platform_device.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/input.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/i2c.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/gpio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/slab.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/wait.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/delay.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/of_gpio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/pinctrl/consumer.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/regulator/consumer.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/dma-mapping.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/hrtimer.h&gt;  </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/input/aw9523_key.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/uaccess.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> HRTIMER_FRAME20</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DISABLE_PO_IRQ 0xff</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DISABLE_P1_IRQ 0xff</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ENABLE_PO_IRQ 0xfc</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ENABLE_P1_IRQ 0xff</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> P0_IRQ_INPUT_MODE 0x03</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> P1_IRQ_INPUT_MODE 0x00</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*register list */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> P0_INPUT0x00</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> P1_INPUT0x01</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> P0_OUTPUT0x02</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> P1_OUTPUT0x03</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> P0_CONFIG0x04</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> P1_CONFIG 0x05</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> P0_INT0x06</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> P1_INT0x07</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ID_REG0x10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CTL_REG0x11</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> P0_LED_MODE0x12</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> P1_LED_MODE0x13</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> P1_0_DIM00x20</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> P1_1_DIM00x21</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> P1_2_DIM00x22</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> P1_3_DIM00x23</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> P0_0_DIM00x24</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> P0_1_DIM00x25</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> P0_2_DIM00x26</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> P0_3_DIM00x27</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> P0_4_DIM00x28</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> P0_5_DIM00x29</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> P0_6_DIM00x2A</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> P0_7_DIM00x2B</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> P1_4_DIM00x2C</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> P1_5_DIM00x2D</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> P1_6_DIM00x2E</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> P1_7_DIM00x2F</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SW_RSTN0x7F</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KROW_P0_00</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KROW_P0_11</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KROW_P0_22</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KROW_P0_33</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KROW_P0_44</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KROW_P0_55</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KROW_P0_66</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KROW_P0_77</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KROW_P1_08</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KROW_P1_19</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KROW_P1_210</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KROW_P1_311</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KROW_P1_412</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KROW_P1_513</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KROW_P1_614</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KROW_P1_715</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SPI_DEV_NAME <span class="meta-string">"si3217x"</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WPSKEY_CODE 293</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RESETKEY_CODE 294</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">keymap</span> <span class="title">key_map</span>[16]=&#123;</span></span><br><span class="line">[KROW_P0_0] = &#123;<span class="string">"WPS_KEY"</span>,WPSKEY_CODE&#125;,</span><br><span class="line">[KROW_P0_1] = &#123;<span class="string">"RESET_KEY"</span>,RESETKEY_CODE&#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> keyst_old[<span class="number">2</span>];</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> keyst_def[<span class="number">2</span>] = &#123;<span class="number">0x00</span>, <span class="number">0x81</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">aw9523_kpad_platform_data</span> *<span class="title">aw9523_data</span> = <span class="title">NULL</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*********************************************************</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * aw9523 i2c write/read</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> ********************************************************/</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> __aw9523_read_reg(struct i2c_client *client, <span class="keyword">int</span> reg, <span class="keyword">unsigned</span> <span class="keyword">char</span> *val)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> ret;</span><br><span class="line"></span><br><span class="line">ret = i2c_smbus_read_byte_data(client, reg);</span><br><span class="line"><span class="keyword">if</span> (ret &lt; <span class="number">0</span>) &#123;</span><br><span class="line">dev_err(&amp;client-&gt;dev, <span class="string">"i2c read fail: can't read from %02x: %d\n"</span>, reg, ret);</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">*val = ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> __aw9523_write_reg(struct i2c_client *client, <span class="keyword">int</span> reg, <span class="keyword">int</span> val)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> ret;</span><br><span class="line"></span><br><span class="line">ret = i2c_smbus_write_byte_data(client, reg, val);</span><br><span class="line"><span class="keyword">if</span> (ret &lt; <span class="number">0</span>) &#123;</span><br><span class="line">dev_err(&amp;client-&gt;dev, <span class="string">"i2c write fail: can't write %02x to %02x: %d\n"</span>,</span><br><span class="line">val, reg, ret);</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">aw9523_read_reg</span><span class="params">(struct i2c_client *client, <span class="keyword">int</span> reg,</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">unsigned</span> <span class="keyword">char</span> *val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rc;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">aw9523_kpad_platform_data</span> *<span class="title">pdata</span> = <span class="title">NULL</span>;</span></span><br><span class="line"></span><br><span class="line">pdata = i2c_get_clientdata(client);</span><br><span class="line"><span class="keyword">if</span> (pdata) &#123;</span><br><span class="line">mutex_lock(&amp;pdata-&gt;read_write_lock);</span><br><span class="line">rc = __aw9523_read_reg(client, reg, val);</span><br><span class="line">mutex_unlock(&amp;pdata-&gt;read_write_lock);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">aw9523_write_reg</span><span class="params">(struct i2c_client *client, <span class="keyword">int</span> reg,</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">unsigned</span> <span class="keyword">char</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rc;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">aw9523_kpad_platform_data</span> *<span class="title">pdata</span>;</span></span><br><span class="line"></span><br><span class="line">pdata = i2c_get_clientdata(client);</span><br><span class="line">mutex_lock(&amp;pdata-&gt;read_write_lock);</span><br><span class="line">rc = __aw9523_write_reg(client, reg, val);</span><br><span class="line">mutex_unlock(&amp;pdata-&gt;read_write_lock);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*********************************************************</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * hrtimer work</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> ********************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">aw9523_key_work</span><span class="params">(struct work_struct *work)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">aw9523_kpad_platform_data</span> *<span class="title">pdata</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">i2c_client</span> *<span class="title">client</span>;</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> val;</span><br><span class="line"><span class="keyword">int</span> i; <span class="keyword">bool</span> key_val;</span><br><span class="line">pdata = aw9523_data;</span><br><span class="line">client = pdata-&gt;client;</span><br><span class="line"></span><br><span class="line">aw9523_read_reg(client, P0_INPUT, &amp;val);</span><br><span class="line"><span class="keyword">if</span>(val != keyst_old[<span class="number">0</span>])&#123;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i&lt;<span class="number">8</span>; i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(pdata-&gt;keymap[i].name[<span class="number">0</span>]==<span class="string">'\0'</span>) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>((val&amp; <span class="number">1</span>&lt;&lt;i) != (keyst_old[<span class="number">0</span>] &amp; <span class="number">1</span>&lt;&lt;i))&#123;</span><br><span class="line">key_val = ((val&amp; <span class="number">1</span>&lt;&lt;i) == (keyst_def[<span class="number">0</span>] &amp; <span class="number">1</span>&lt;&lt;i));</span><br><span class="line">input_report_key(pdata-&gt;input, pdata-&gt;keymap[i].key_code, key_val);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">keyst_old[<span class="number">0</span>] = val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">aw9523_read_reg(client, P1_INPUT, &amp;val);</span><br><span class="line"><span class="keyword">if</span>(val != keyst_old[<span class="number">1</span>])&#123;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i&lt;<span class="number">8</span>; i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(pdata-&gt;keymap[i+<span class="number">8</span>].name[<span class="number">0</span>]==<span class="string">'\0'</span>) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>((val&amp; <span class="number">1</span>&lt;&lt;i) != (keyst_old[<span class="number">1</span>] &amp; <span class="number">1</span>&lt;&lt;i))&#123;</span><br><span class="line">key_val = ((val&amp; <span class="number">1</span>&lt;&lt;i) == (keyst_def[<span class="number">1</span>] &amp; <span class="number">1</span>&lt;&lt;i));</span><br><span class="line">input_report_key(pdata-&gt;input, pdata-&gt;keymap[i+<span class="number">8</span>].key_code, key_val);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">keyst_old[<span class="number">1</span>] = val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">aw9523_write_reg(client, P0_INT, ENABLE_PO_IRQ); <span class="comment">//enable p0 port irq</span></span><br><span class="line">aw9523_write_reg(client, P1_INT, ENABLE_P1_IRQ); <span class="comment">//enable p1 port irq</span></span><br><span class="line">input_sync(pdata-&gt;input);</span><br><span class="line">enable_irq(client-&gt;irq);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">enum</span> hrtimer_restart <span class="title">aw9523_key_timer_func</span><span class="params">(struct hrtimer *timer)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">schedule_work(&amp;aw9523_data-&gt;key_work);</span><br><span class="line"><span class="keyword">return</span> HRTIMER_NORESTART; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*********************************************************</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * int work</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> ********************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">aw9523_int_work</span><span class="params">(struct work_struct *work)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">aw9523_kpad_platform_data</span> *<span class="title">pdata</span> = <span class="title">container_of</span>(<span class="title">work</span>,</span></span><br><span class="line"><span class="class"><span class="title">struct</span> <span class="title">aw9523_kpad_platform_data</span>, <span class="title">work</span>.<span class="title">work</span>);</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">i2c_client</span> *<span class="title">client</span> = <span class="title">pdata</span>-&gt;<span class="title">client</span>;</span></span><br><span class="line">aw9523_write_reg(client, P0_INT, DISABLE_PO_IRQ); <span class="comment">//disable p0 port irq</span></span><br><span class="line">aw9523_write_reg(client, P1_INT, DISABLE_P1_IRQ); <span class="comment">//disable p1 port irq</span></span><br><span class="line">hrtimer_start(&amp;pdata-&gt;key_timer, ktime_set(<span class="number">0</span>,(<span class="number">1000</span>/HRTIMER_FRAME)*<span class="number">1000000</span>), HRTIMER_MODE_REL);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> irqreturn_t <span class="title">aw9523_irq</span><span class="params">(<span class="keyword">int</span> irq, <span class="keyword">void</span> *handle)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">i2c_client</span> *<span class="title">client</span> = <span class="title">handle</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">aw9523_kpad_platform_data</span> *<span class="title">pdata</span>;</span></span><br><span class="line"><span class="keyword">int</span> bm_irq_status = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">bm_mdm9640_i2c_gpio_read_irq_status(BM_MDM9640_PCIE_WAKE_SET, &amp;bm_irq_status);</span><br><span class="line"><span class="keyword">if</span> (!bm_irq_status) &#123;</span><br><span class="line">printk(<span class="string">"%s, it is pcie wake irq.\n"</span>, __func__);</span><br><span class="line"><span class="keyword">return</span> IRQ_HANDLED;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pdata = i2c_get_clientdata(client);</span><br><span class="line">disable_irq_nosync(client-&gt;irq);</span><br><span class="line">schedule_delayed_work(&amp;pdata-&gt;work, msecs_to_jiffies(pdata-&gt;delay));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> IRQ_HANDLED;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*********************************************************</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * aw9523 reg</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> ********************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> ssize_t <span class="title">aw9523_get_reg</span><span class="params">(struct device* cd,struct device_attribute *attr, <span class="keyword">char</span>* buf)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> val = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">ssize_t</span> len = <span class="number">0</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">i2c_client</span> *<span class="title">client</span> = <span class="title">aw9523_data</span>-&gt;<span class="title">client</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">0x30</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">aw9523_read_reg(client, i, &amp;val);</span><br><span class="line">len += <span class="built_in">snprintf</span>(buf+len, PAGE_SIZE-len, <span class="string">"reg%2x = 0x%2x, "</span>, i, val);</span><br><span class="line">&#125;</span><br><span class="line">len += <span class="built_in">snprintf</span>(buf+len, PAGE_SIZE-len, <span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> len;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> ssize_t <span class="title">aw9523_set_reg</span><span class="params">(struct device* cd, struct device_attribute *attr, <span class="keyword">const</span> <span class="keyword">char</span>* buf, <span class="keyword">size_t</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> databuf[<span class="number">2</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">i2c_client</span> *<span class="title">client</span> = <span class="title">aw9523_data</span>-&gt;<span class="title">client</span>;</span></span><br><span class="line"><span class="keyword">if</span>(<span class="number">2</span> == <span class="built_in">sscanf</span>(buf,<span class="string">"%x %x"</span>,&amp;databuf[<span class="number">0</span>], &amp;databuf[<span class="number">1</span>]))</span><br><span class="line">&#123;</span><br><span class="line">aw9523_write_reg(client,databuf[<span class="number">0</span>], databuf[<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> len;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="title">DEVICE_ATTR</span><span class="params">(reg, <span class="number">0660</span>, aw9523_get_reg,  aw9523_set_reg)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">aw9523_create_sysfs</span><span class="params">(struct i2c_client *client)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> err;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">device</span> *<span class="title">dev</span> = &amp;(<span class="title">client</span>-&gt;<span class="title">dev</span>);</span></span><br><span class="line">err = device_create_file(dev, &amp;dev_attr_reg);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> err;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">aw9523_read_chipid</span><span class="params">(struct i2c_client *client)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> val;</span><br><span class="line"><span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line">ret = aw9523_read_reg(client, ID_REG, &amp;val);</span><br><span class="line"><span class="keyword">if</span>(!ret &amp;&amp; val != <span class="number">0x23</span>)</span><br><span class="line">ret = -EINVAL;</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*********************************************************</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * aw9523 init</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> ********************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">aw9523_key_init</span><span class="params">(struct i2c_client *client)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> val;</span><br><span class="line">aw9523_write_reg(client, P0_INT, DISABLE_PO_IRQ); <span class="comment">//disable p0 port irq 0x06</span></span><br><span class="line">aw9523_write_reg(client, P1_INT, DISABLE_P1_IRQ); <span class="comment">//disable p1 port irq 0x07</span></span><br><span class="line"></span><br><span class="line">aw9523_write_reg(client, P0_CONFIG, P0_IRQ_INPUT_MODE);<span class="comment">//set p0 port input mode 0x04</span></span><br><span class="line">aw9523_write_reg(client, P1_CONFIG, P1_IRQ_INPUT_MODE);<span class="comment">//set p1 port input mode 0x05</span></span><br><span class="line"></span><br><span class="line">aw9523_write_reg(client,P0_LED_MODE, <span class="number">0xff</span>);</span><br><span class="line">aw9523_write_reg(client,P0_LED_MODE, <span class="number">0xff</span>); </span><br><span class="line"></span><br><span class="line">aw9523_write_reg(client,CTL_REG, <span class="number">0x10</span>);</span><br><span class="line"></span><br><span class="line">aw9523_write_reg(client,P0_OUTPUT, <span class="number">0x00</span>);</span><br><span class="line">aw9523_write_reg(client,P1_OUTPUT, <span class="number">0x3c</span>);</span><br><span class="line"></span><br><span class="line">aw9523_read_reg(client, P0_INPUT, &amp;val);</span><br><span class="line">keyst_old[<span class="number">0</span>] = val;</span><br><span class="line">aw9523_read_reg(client, P1_INPUT, &amp;val);</span><br><span class="line">keyst_old[<span class="number">1</span>]= val;</span><br><span class="line">aw9523_write_reg(client, P0_INT, ENABLE_PO_IRQ); <span class="comment">//enable p0 port irq 0x06</span></span><br><span class="line">aw9523_write_reg(client, P1_INT, ENABLE_P1_IRQ); <span class="comment">//enable p1 port irq 0x07</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bm_mdm9640_i2c_gpio_set</span><span class="params">(<span class="keyword">int</span> reg, <span class="keyword">unsigned</span> <span class="keyword">char</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">i2c_client</span> *<span class="title">client</span> = <span class="title">NULL</span>;</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> oldval = <span class="number">0</span>, setval = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> raw_output_port = <span class="number">0</span>, c_reg;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!aw9523_data)</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line"></span><br><span class="line">client = aw9523_data-&gt;client;</span><br><span class="line"></span><br><span class="line">val = (val &gt; <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (reg &gt;= <span class="number">10</span>) &#123;</span><br><span class="line">c_reg = reg - <span class="number">10</span>;</span><br><span class="line">raw_output_port = P1_OUTPUT;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">c_reg = reg;</span><br><span class="line">raw_output_port = P0_OUTPUT;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">aw9523_read_reg(client, raw_output_port, &amp;oldval);</span><br><span class="line"></span><br><span class="line"><span class="comment">//printk("%s, read oldval: %02hhx\n", __func__, oldval);</span></span><br><span class="line"></span><br><span class="line">setval = oldval;</span><br><span class="line">setval &amp;= (~(<span class="number">0x1</span> &lt;&lt; c_reg)); </span><br><span class="line">setval |= (val &lt;&lt; c_reg);</span><br><span class="line"></span><br><span class="line"><span class="comment">//printk("%s, set val: %02hhx, reg:%d, val:%d\n", __func__, setval, reg, val);</span></span><br><span class="line">aw9523_write_reg(client, raw_output_port, setval);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line">EXPORT_SYMBOL(bm_mdm9640_i2c_gpio_set);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bm_mdm9640_i2c_gpio_irq_set</span><span class="params">(<span class="keyword">int</span> reg, <span class="keyword">unsigned</span> <span class="keyword">char</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">i2c_client</span> *<span class="title">client</span> = <span class="title">NULL</span>;</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> oldval = <span class="number">0</span>, setval = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> raw_config_port = <span class="number">0</span>, raw_int_port = <span class="number">0</span>, c_reg;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!aw9523_data)</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line"></span><br><span class="line">client = aw9523_data-&gt;client;</span><br><span class="line"></span><br><span class="line">val = (val &gt; <span class="number">0</span> ? <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (reg &gt;= <span class="number">10</span>) &#123;</span><br><span class="line">c_reg = reg - <span class="number">10</span>;</span><br><span class="line">raw_config_port = P1_CONFIG;</span><br><span class="line">raw_int_port = P1_INT;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">c_reg = reg;</span><br><span class="line">raw_config_port = P0_CONFIG;</span><br><span class="line">raw_int_port = P0_INT;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// config input</span></span><br><span class="line">aw9523_read_reg(client, raw_config_port, &amp;oldval);</span><br><span class="line"></span><br><span class="line">printk(<span class="string">"%s, read oldval: %02hhx\n"</span>, __func__, oldval);</span><br><span class="line"></span><br><span class="line">setval = oldval;</span><br><span class="line">setval |= (<span class="number">0x1</span> &lt;&lt; c_reg); </span><br><span class="line"></span><br><span class="line">printk(<span class="string">"%s, set val: %02hhx, reg:%d, val:%d\n"</span>, __func__, setval, reg, val);</span><br><span class="line">aw9523_write_reg(client, raw_config_port, setval);</span><br><span class="line"></span><br><span class="line"><span class="comment">// config input</span></span><br><span class="line">aw9523_read_reg(client, raw_int_port, &amp;oldval);</span><br><span class="line"></span><br><span class="line">printk(<span class="string">"%s, read int oldval: %02hhx\n"</span>, __func__, oldval);</span><br><span class="line"></span><br><span class="line">setval = oldval;</span><br><span class="line">setval &amp;= ~(<span class="number">0x1</span> &lt;&lt; c_reg); </span><br><span class="line"></span><br><span class="line">printk(<span class="string">"%s, set val: %02hhx, reg:%d, val:%d\n"</span>, __func__, setval, reg, val);</span><br><span class="line">aw9523_write_reg(client, raw_int_port, setval);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line">EXPORT_SYMBOL(bm_mdm9640_i2c_gpio_irq_set);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bm_mdm9640_i2c_gpio_read_irq_status</span><span class="params">(<span class="keyword">int</span> reg, <span class="keyword">int</span> *irq_st)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">i2c_client</span> *<span class="title">client</span> = <span class="title">NULL</span>;</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> rval = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> raw_input_port = <span class="number">0</span>, c_reg;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!aw9523_data)</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line"></span><br><span class="line">client = aw9523_data-&gt;client;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (reg &gt;= <span class="number">10</span>) &#123;</span><br><span class="line">c_reg = reg - <span class="number">10</span>;</span><br><span class="line">raw_input_port = P1_INPUT;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">c_reg = reg ;</span><br><span class="line">raw_input_port = P0_INPUT;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">aw9523_read_reg(client, raw_input_port, &amp;rval);</span><br><span class="line"></span><br><span class="line">printk(<span class="string">"%s, read oldval: %02hhx\n"</span>, __func__, rval);</span><br><span class="line"></span><br><span class="line">*irq_st = ((rval &gt;&gt; c_reg) &amp; <span class="number">0x01</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line">EXPORT_SYMBOL(bm_mdm9640_i2c_gpio_read_irq_status);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bm_mdm9640_check_aw9523_ready</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (aw9523_data)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">EXPORT_SYMBOL(bm_mdm9640_check_aw9523_ready);</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PANEL_GPIO 8</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">get_panel_state</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">void</span> __iomem * gpio_panel_addr = ioremap_nocache(<span class="number">0x1000000</span> + PANEL_GPIO * <span class="number">0x1000</span>, <span class="number">8</span>);</span><br><span class="line">writel(<span class="number">0x01</span>,gpio_panel_addr);</span><br><span class="line"><span class="keyword">return</span> readl(gpio_panel_addr+<span class="number">0x04</span>)&amp;<span class="number">0x01</span>? <span class="number">1</span>:<span class="number">0</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">/*********************************************************</span></span><br><span class="line"><span class="commentspan></span><br><span class="line"><span class="comment"> * aw9523 driver</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> ********************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">aw9523_i2c_probe</span><span class="params">(struct i2c_client *client,</span></span></span><br><span class="line"><span class="function"><span class="params"> <span class="keyword">const</span> struct i2c_device_id *id)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">aw9523_kpad_platform_data</span> *<span class="title">pdata</span> = <span class="title">client</span>-&gt;<span class="title">dev</span>.<span class="title">platform_data</span>;</span></span><br><span class="line"><span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> i =<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!i2c_check_functionality(client-&gt;adapter,</span><br><span class="line">I2C_FUNC_SMBUS_BYTE_DATA)) &#123;</span><br><span class="line">dev_err(&amp;client-&gt;dev, <span class="string">"SMBUS Byte Data not Supported\n"</span>);</span><br><span class="line"><span class="keyword">return</span> -EIO;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!get_panel_state())&#123;</span><br><span class="line">dev_err(&amp;client-&gt;dev, <span class="string">"the panel can not use i2c\n"</span>);</span><br><span class="line"><span class="keyword">return</span> -ENOMEM;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pdata = devm_kzalloc(&amp;client-&gt;dev,<span class="keyword">sizeof</span>(struct aw9523_kpad_platform_data), GFP_KERNEL);</span><br><span class="line"><span class="keyword">if</span> (!pdata) </span><br><span class="line">&#123;</span><br><span class="line">dev_err(&amp;client-&gt;dev, <span class="string">"Failed to allocate memory\n"</span>);</span><br><span class="line"><span class="keyword">return</span> -ENOMEM;</span><br><span class="line">&#125;</span><br><span class="line">aw9523_data = pdata;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* seset &amp; int Pins  */</span></span><br><span class="line">pdata-&gt;pinctrl = devm_pinctrl_get(&amp;client-&gt;dev);</span><br><span class="line"><span class="keyword">if</span> (IS_ERR(pdata-&gt;pinctrl)) &#123;</span><br><span class="line">pr_err(<span class="string">"%s:failed to get pinctrl\n"</span>, __func__);</span><br><span class="line"><span class="keyword">goto</span> err;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pdata-&gt;rst_state_low = pinctrl_lookup_state(pdata-&gt;pinctrl, <span class="string">"aw9523_reset_low"</span>);</span><br><span class="line"><span class="keyword">if</span> (IS_ERR(pdata-&gt;rst_state_low)) &#123;</span><br><span class="line">pr_err(<span class="string">"%s:can not get reset pinstate\n"</span>, __func__);</span><br><span class="line"><span class="keyword">goto</span> err;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pdata-&gt;rst_state_high = pinctrl_lookup_state(pdata-&gt;pinctrl, <span class="string">"aw9523_reset_high"</span>);</span><br><span class="line"><span class="keyword">if</span> (IS_ERR(pdata-&gt;rst_state_high)) &#123;</span><br><span class="line">pr_err(<span class="string">"%s:can not get reset pinstate\n"</span>, __func__);</span><br><span class="line"><span class="keyword">goto</span> err;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pdata-&gt;irq_state = pinctrl_lookup_state(pdata-&gt;pinctrl, <span class="string">"aw9523_eint"</span>);</span><br><span class="line"><span class="keyword">if</span> (IS_ERR(pdata-&gt;irq_state)) &#123;</span><br><span class="line">pr_err(<span class="string">"%s:can not get irq pinstate\n"</span>, __func__);</span><br><span class="line"><span class="keyword">goto</span> err;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ret= pinctrl_select_state(pdata-&gt;pinctrl, pdata-&gt;rst_state_high);</span><br><span class="line"><span class="keyword">if</span> (ret)&#123;</span><br><span class="line">pr_err(<span class="string">"%s:set reset pin state failed!\n"</span>, __func__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ret = pinctrl_select_state(pdata-&gt;pinctrl, pdata-&gt;irq_state);</span><br><span class="line"><span class="keyword">if</span> (ret)&#123;</span><br><span class="line">pr_err(<span class="string">"%s:set irq pin state failed!\n"</span>, __func__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pdata-&gt;rst_gpio = of_get_named_gpio(client-&gt;dev.of_node, <span class="string">"awinic,reset-gpio"</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((!gpio_is_valid(pdata-&gt;rst_gpio)))&#123;</span><br><span class="line"><span class="keyword">goto</span> err;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ret = gpio_request(pdata-&gt;rst_gpio, <span class="string">"aw9523-reset-keys"</span>);</span><br><span class="line"><span class="keyword">if</span> (ret == <span class="number">0</span>) &#123;</span><br><span class="line">gpio_set_value(pdata-&gt;rst_gpio, <span class="number">0</span>);</span><br><span class="line">msleep(<span class="number">1</span>);</span><br><span class="line">gpio_set_value(pdata-&gt;rst_gpio, <span class="number">1</span>);</span><br><span class="line">msleep(<span class="number">1</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(ret !=- <span class="number">16</span>)&#123;</span><br><span class="line">dev_err(&amp;client-&gt;dev, <span class="string">"%s: unable to request gpio [%d]\n"</span>,</span><br><span class="line">__func__, pdata-&gt;rst_gpio);</span><br><span class="line"><span class="keyword">goto</span> err;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* reset &amp; int Pins  end*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* hardware reset */</span></span><br><span class="line">pdata-&gt;client = client;</span><br><span class="line">mutex_init(&amp;pdata-&gt;read_write_lock);</span><br><span class="line">i2c_set_clientdata(client, pdata);</span><br><span class="line"><span class="keyword">if</span>(aw9523_read_chipid(client)) &#123;</span><br><span class="line">dev_err(&amp;client-&gt;dev, <span class="string">"%s: read_chipid error\n"</span>, __func__);</span><br><span class="line"><span class="keyword">goto</span> err_rst_gpio;</span><br><span class="line">&#125;</span><br><span class="line">INIT_DELAYED_WORK(&amp;pdata-&gt;work, aw9523_int_work);</span><br><span class="line">pdata-&gt;delay = <span class="number">10</span>;</span><br><span class="line"><span class="comment">/* hardware reset end */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* key report */</span></span><br><span class="line">pdata-&gt;input = input_allocate_device();</span><br><span class="line"><span class="keyword">if</span> (!pdata-&gt;input) &#123;</span><br><span class="line">dev_err(&amp;client-&gt;dev, <span class="string">"%s: failed to allocate input device\n"</span>, __func__);</span><br><span class="line"><span class="keyword">goto</span> err_rst_gpio;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pdata-&gt;input-&gt;name = <span class="string">"aw9523-key"</span>;</span><br><span class="line">pdata-&gt;input-&gt;phys = <span class="string">"aw9523-keys/input0"</span>;</span><br><span class="line">pdata-&gt;input-&gt;dev.parent = &amp;client-&gt;dev;</span><br><span class="line">pdata-&gt;keymap_len = <span class="keyword">sizeof</span>(key_map)/<span class="keyword">sizeof</span>(struct keymap);</span><br><span class="line">pdata-&gt;keymap = (struct keymap *)&amp;key_map;</span><br><span class="line"></span><br><span class="line">input_set_drvdata(pdata-&gt;input, pdata);</span><br><span class="line"></span><br><span class="line">__set_bit(EV_KEY, pdata-&gt;input-&gt;evbit);</span><br><span class="line">__set_bit(EV_SYN, pdata-&gt;input-&gt;evbit);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; pdata-&gt;keymap_len; i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(pdata-&gt;keymap[i].name[<span class="number">0</span>]==<span class="string">'\0'</span>) <span class="keyword">continue</span>;</span><br><span class="line">__set_bit(pdata-&gt;keymap[i].key_code, pdata-&gt;input-&gt;keybit);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ret = input_register_device(pdata-&gt;input);</span><br><span class="line"><span class="keyword">if</span> (ret) &#123;</span><br><span class="line">dev_err(&amp;client-&gt;dev, <span class="string">"unable to register input device\n"</span>);</span><br><span class="line"><span class="keyword">goto</span> err_free_input;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* key report end */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* interrupt work */</span></span><br><span class="line">pdata-&gt;irq_gpio = of_get_named_gpio(client-&gt;dev.of_node, <span class="string">"awinic,irq-gpio"</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> ((!gpio_is_valid(pdata-&gt;irq_gpio)))&#123;</span><br><span class="line"><span class="keyword">goto</span> err_free_dev;</span><br><span class="line">&#125;</span><br><span class="line">ret = gpio_request(pdata-&gt;irq_gpio, <span class="string">"aw9523-keys"</span>);</span><br><span class="line"><span class="keyword">if</span> (ret) &#123;</span><br><span class="line">dev_err(&amp;client-&gt;dev, <span class="string">"%s: unable to request gpio [%d]\n"</span>,</span><br><span class="line">__func__, pdata-&gt;irq_gpio);</span><br><span class="line"><span class="keyword">goto</span> err_free_dev;</span><br><span class="line">&#125;</span><br><span class="line">ret = gpio_direction_input(pdata-&gt;irq_gpio);</span><br><span class="line"><span class="keyword">if</span> (ret) &#123;</span><br><span class="line">dev_err(&amp;client-&gt;dev, <span class="string">"%s: unable to set direction for gpio [%d]\n"</span>,</span><br><span class="line">__func__, pdata-&gt;irq_gpio);</span><br><span class="line"><span class="keyword">goto</span> err_irq_gpio;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">client-&gt;irq = gpio_to_irq(pdata-&gt;irq_gpio);</span><br><span class="line"><span class="keyword">if</span> (client-&gt;irq &lt; <span class="number">0</span>) &#123;</span><br><span class="line">ret = client-&gt;irq;</span><br><span class="line"><span class="keyword">goto</span> err_irq_gpio;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* hrtimer */</span></span><br><span class="line">INIT_WORK(&amp;pdata-&gt;key_work, aw9523_key_work);</span><br><span class="line">hrtimer_init(&amp;pdata-&gt;key_timer, CLOCK_MONOTONIC, HRTIMER_MODE_REL);</span><br><span class="line">pdata-&gt;key_timer.function = aw9523_key_timer_func;</span><br><span class="line"><span class="comment">/* hrtimer end */</span></span><br><span class="line"></span><br><span class="line">ret = devm_request_threaded_irq(&amp;client-&gt;dev, client-&gt;irq, <span class="literal">NULL</span>,</span><br><span class="line">aw9523_irq, IRQF_TRIGGER_LOW | IRQF_ONESHOT | IRQF_SHARED,</span><br><span class="line"><span class="string">"aw9523_irq"</span>, client);</span><br><span class="line"><span class="keyword">if</span> (ret) &#123;</span><br><span class="line">dev_err(&amp;client-&gt;dev, <span class="string">"%s: failed aw9523 irq=%d request ret = %d\n"</span>,</span><br><span class="line">__func__, client-&gt;irq, ret);</span><br><span class="line"><span class="keyword">goto</span> err_irq_gpio;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">disable_irq_nosync(client-&gt;irq);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">device_init_wakeup(&amp;client-&gt;dev, <span class="number">1</span>);</span><br><span class="line">aw9523_create_sysfs(client);</span><br><span class="line">aw9523_key_init(client);</span><br><span class="line">enable_irq(client-&gt;irq);</span><br><span class="line">pr_err(<span class="string">"%s:%d key success\n"</span>, __func__,__LINE__);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">err_irq_gpio:</span><br><span class="line">cancel_work_sync(&amp;pdata-&gt;key_work);</span><br><span class="line">gpio_free(pdata-&gt;irq_gpio);</span><br><span class="line">err_free_dev:</span><br><span class="line">input_unregister_device(pdata-&gt;input);</span><br><span class="line">err_free_input:</span><br><span class="line">input_free_device(pdata-&gt;input);</span><br><span class="line">err_rst_gpio:</span><br><span class="line">gpio_free(pdata-&gt;rst_gpio);</span><br><span class="line">mutex_destroy(&amp;pdata-&gt;read_write_lock);</span><br><span class="line">err:</span><br><span class="line">kfree(pdata);</span><br><span class="line">aw9523_data = <span class="literal">NULL</span>;</span><br><span class="line">pr_err(<span class="string">"%s:%d key failed\n"</span>, __func__,__LINE__);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">aw9523_i2c_remove</span><span class="params">(struct i2c_client *client)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">aw9523_kpad_platform_data</span> *<span class="title">pdata</span> = <span class="title">i2c_get_clientdata</span>(<span class="title">client</span>);</span></span><br><span class="line"><span class="keyword">if</span>(!pdata)</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">aw9523_write_reg(client, <span class="number">0x00</span>, <span class="number">0</span>);</span><br><span class="line">free_irq(client-&gt;irq, pdata);</span><br><span class="line">cancel_delayed_work_sync(&amp;pdata-&gt;work);</span><br><span class="line">cancel_work_sync(&amp;pdata-&gt;key_work);</span><br><span class="line">gpio_free(pdata-&gt;irq_gpio);</span><br><span class="line">input_unregister_device(pdata-&gt;input);</span><br><span class="line">input_free_device(pdata-&gt;input);</span><br><span class="line">gpio_free(pdata-&gt;rst_gpio);</span><br><span class="line">mutex_destroy(&amp;pdata-&gt;read_write_lock);</span><br><span class="line">kfree(pdata);</span><br><span class="line">aw9523_data = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="class"><span class="keyword">struct</span> <span class="title">of_device_id</span> <span class="title">aw9523_keypad_of_match</span>[] = &#123;</span></span><br><span class="line">&#123; .compatible = <span class="string">"awinic,aw9523_key"</span>,&#125;,</span><br><span class="line">&#123;&#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="class"><span class="keyword">struct</span> <span class="title">i2c_device_id</span> <span class="title">aw9523_i2c_id</span>[] = &#123;</span></span><br><span class="line">&#123;<span class="string">"aw9523_key"</span>, <span class="number">0</span>&#125;,</span><br><span class="line">&#123;&#125;,</span><br><span class="line">&#125;;</span><br><span class="line">MODULE_DEVICE_TABLE(i2c, aw9523_i2c_id);</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">i2c_driver</span> <span class="title">aw9523_i2c_driver</span> = &#123;</span></span><br><span class="line">.driver = &#123;</span><br><span class="line">.name = <span class="string">"aw9523_key"</span>,</span><br><span class="line">.owner = THIS_MODULE,</span><br><span class="line">.of_match_table = aw9523_keypad_of_match,</span><br><span class="line">&#125;,</span><br><span class="line">.probe = aw9523_i2c_probe,</span><br><span class="line">.remove = aw9523_i2c_remove,</span><br><span class="line">.id_table = aw9523_i2c_id,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> __<span class="function">init <span class="title">aw9523_i2c_init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line">ret = i2c_add_driver(&amp;aw9523_i2c_driver);</span><br><span class="line"><span class="keyword">if</span> (ret) &#123;</span><br><span class="line">pr_err(<span class="string">"fail to add aw9523 device into i2c\n"</span>);</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">subsys_initcall(aw9523_i2c_init);</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">void</span> __<span class="function"><span class="built_in">exit</span> <span class="title">aw9523_i2c_exit</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">i2c_del_driver(&amp;aw9523_i2c_driver);</span><br><span class="line">&#125;</span><br><span class="line">module_exit(aw9523_i2c_exit);</span><br><span class="line"></span><br><span class="line">MODULE_AUTHOR(<span class="string">"liweilei@awinic.com.cn"</span>);</span><br><span class="line">MODULE_DESCRIPTION(<span class="string">"AW9523B Keypad driver"</span>);</span><br><span class="line">MODULE_LICENSE(<span class="string">"GPL"</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux device driver </category>
          
      </categories>
      
      
        <tags>
            
            <tag> i2c driver </tag>
            
            <tag> linux device driver </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>smb358_charger驱动</title>
      <link href="/2019/05/11/smb358-charger%E9%A9%B1%E5%8A%A8/"/>
      <url>/2019/05/11/smb358-charger%E9%A9%B1%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="硬件连接图"><a href="#硬件连接图" class="headerlink" title="硬件连接图"></a>硬件连接图</h1><blockquote><p>下面是该项目所使用的充电芯片smb358的硬件连接图</p></blockquote><p><img src="smb358原理图.png" alt="smb原理图"></p><h1 id="GPIO引脚配置表"><a href="#GPIO引脚配置表" class="headerlink" title="GPIO引脚配置表"></a>GPIO引脚配置表</h1><table><thead><tr><th style="text-align:center">smb引脚</th><th style="text-align:center">配置说明</th></tr></thead><tbody><tr><td style="text-align:center">SCL</td><td style="text-align:center">GPIO19</td></tr><tr><td style="text-align:center">SDA</td><td style="text-align:center">GPIO18</td></tr><tr><td style="text-align:center">EN</td><td style="text-align:center">高电平使能</td></tr><tr><td style="text-align:center">STAT</td><td style="text-align:center">MPP02(PMD9607)</td></tr><tr><td style="text-align:center">THERM</td><td style="text-align:center">MPP06(PMD9607)</td></tr><tr><td style="text-align:center">D+</td><td style="text-align:center">USB D+</td></tr><tr><td style="text-align:center">D-</td><td style="text-align:center">USB D-</td></tr><tr><td style="text-align:center">USBIN</td><td style="text-align:center">USB_VBUS</td></tr></tbody></table><blockquote><p>cpu是通过i2c的通信方式与smb358进行通信。</p><p>正常工作时EN上拉成高电平使能。</p><p>PMIC通过读取STAT的状态来判断目前的充电状态。</p><p>通过读取THERM的ADC值读取温度。</p></blockquote><h1 id="设备树配置"><a href="#设备树配置" class="headerlink" title="设备树配置"></a>设备树配置</h1><blockquote><p>相关的文件：</p></blockquote><ol><li>kernel/arch/arm/boot/dts/qcom/mdm9607.dtsi</li><li>kernel/arch/arm/boot/dts/qcom/mdm9607-pinctrl.dtsi</li><li>kernel/arch/arm/boot/dts/qcom/mdm9607-mtp.dtsi</li></ol><p><img src="smb358设备树.png" alt="smb358设备树"></p><blockquote><p>reg = <0x57>;  表示i2c读地址为0x57。</0x57></p><p>interrupt-parent = &lt;&amp;spmi_bus&gt;; 表示中断控制器为spmi_bus。</p><p>interrupts = <0x0 0xa1 0x0>;    /<em> PMIC MPP 2 </em>/ 表示中断为PMIC MPP 2</0x0></p><p>qcom,float-voltage-mv = <4100>; 饱和充电电压4.2V</4100></p><p>qcom,fastchg-current-max-ma = <1000>; 最大快充电流1A</1000></p><p>qcom,irq-gpio = &lt;&amp;pm8019_mpps 2 0&gt;;STAT中断引脚用的是MPP02</p><p>qcom,chg-vadc = &lt;&amp;pm8019_vadc&gt;; 测电池电压温度所使用的adc</p><p>qcom,iterm-ma = <100>;充电饱和的截止电流（充电结束的标志是充电电流小于100mA）</100></p><p>qcom，recharge-mv = <100>;复冲电压，电压低于饱和电流100mA时，再次充电</100></p></blockquote><h1 id="smb-驱动流程"><a href="#smb-驱动流程" class="headerlink" title="smb 驱动流程"></a>smb 驱动流程</h1><blockquote><p>相关文件/kernel/driver/power/smb-charger.c</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (of_find_property(chip-&gt;dev-&gt;of_node, <span class="string">"qcom,chg-vadc"</span>, <span class="literal">NULL</span>)) &#123;</span><br><span class="line">     <span class="comment">/* early for VADC get, defer probe if needed */</span> </span><br><span class="line">     chip-&gt;vadc_dev = qpnp_get_vadc(chip-&gt;dev, <span class="string">"chg"</span>);</span><br><span class="line">     <span class="keyword">if</span> (IS_ERR(chip-&gt;vadc_dev)) &#123;      </span><br><span class="line">     rc = PTR_ERR(chip-&gt;vadc_dev);  </span><br><span class="line">     <span class="keyword">if</span> (rc != -EPROBE_DEFER)           </span><br><span class="line">         pr_err(<span class="string">"vadc property configured incorrectly\n"</span>);       </span><br><span class="line">  <span class="keyword">return</span> rc;   </span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>解析所使用的adc，通过获取vadc指针，根据不同的通道，可以获取对应的电池电压和电池温度。</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">smb_parse_dt</span><span class="params">(struct smb358_charger *chip)</span></span></span><br><span class="line"><span class="function"></span>&#123;               </span><br><span class="line">    <span class="keyword">int</span> rc; </span><br><span class="line">    <span class="keyword">enum</span> of_gpio_flags gpio_flags;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">device_node</span> *<span class="title">node</span> = <span class="title">chip</span>-&gt;<span class="title">dev</span>-&gt;<span class="title">of_node</span>;</span></span><br><span class="line">    <span class="keyword">int</span> batt_present_degree_negative;</span><br><span class="line">                </span><br><span class="line">    <span class="keyword">if</span> (!node) &#123;</span><br><span class="line">        dev_err(chip-&gt;dev, <span class="string">"device tree info. missing\n"</span>);</span><br><span class="line">        <span class="keyword">return</span> -EINVAL;</span><br><span class="line">    &#125;   </span><br><span class="line">        </span><br><span class="line">    chip-&gt;charging_disabled = of_property_read_bool(node,<span class="string">"qcom,charger-disabled"</span>);          </span><br><span class="line">    chip-&gt;inhibit_disabled = of_property_read_bool(node, <span class="string">"qcom,chg-inhibit-disabled"</span>);</span><br><span class="line">    chip-&gt;chg_autonomous_mode = of_property_read_bool(node,<span class="string">"qcom,chg-autonomous-mode"</span>);</span><br><span class="line">    chip-&gt;disable_apsd = of_property_read_bool(node, <span class="string">"qcom,disable-apsd"</span>);</span><br><span class="line">    chip-&gt;using_pmic_therm = of_property_read_bool(node,<span class="string">"qcom,using-pmic-therm"</span>);</span><br><span class="line">    chip-&gt;pmic_vbat_sns = of_property_read_bool(node,<span class="string">"qcom,using-vbat-sns"</span>);</span><br><span class="line">    chip-&gt;bms_controlled_charging = of_property_read_bool(node,<span class="string">"qcom,bms-controlled-charging"</span>);</span><br><span class="line">    rc = of_property_read_string(node, <span class="string">"qcom,bms-psy-name"</span>,&amp;chip-&gt;bms_psy_name);</span><br><span class="line">    chip-&gt;chg_valid_gpio = of_get_named_gpio_flags(node,<span class="string">"qcom,chg-valid-gpio"</span>, <span class="number">0</span>, &amp;gpio_flags);</span><br><span class="line">    <span class="keyword">if</span> (!gpio_is_valid(chip-&gt;chg_valid_gpio))</span><br><span class="line">        dev_dbg(chip-&gt;dev, <span class="string">"Invalid chg-valid-gpio"</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        chip-&gt;chg_valid_act_low = gpio_flags &amp; OF_GPIO_ACTIVE_LOW;</span><br><span class="line">rc = of_property_read_u32(node, <span class="string">"qcom,fastchg-current-max-ma"</span>,</span><br><span class="line">                        &amp;chip-&gt;fastchg_current_max_ma);</span><br><span class="line">    <span class="keyword">if</span> (rc)</span><br><span class="line">        chip-&gt;fastchg_current_max_ma = SMB358_FAST_CHG_MAX_MA;</span><br><span class="line"></span><br><span class="line">    chip-&gt;iterm_disabled = of_property_read_bool(node,</span><br><span class="line">                    <span class="string">"qcom,iterm-disabled"</span>);</span><br><span class="line"></span><br><span class="line">    rc = of_property_read_u32(node, <span class="string">"qcom,iterm-ma"</span>, &amp;chip-&gt;iterm_ma);</span><br><span class="line">    <span class="keyword">if</span> (rc &lt; <span class="number">0</span>)</span><br><span class="line">        chip-&gt;iterm_ma = -EINVAL;</span><br><span class="line"></span><br><span class="line">    rc = of_property_read_u32(node, <span class="string">"qcom,float-voltage-mv"</span>,</span><br><span class="line">                        &amp;chip-&gt;vfloat_mv);</span><br><span class="line">    <span class="keyword">if</span> (rc &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        chip-&gt;vfloat_mv = -EINVAL;</span><br><span class="line">        pr_err(<span class="string">"float-voltage-mv property missing, exit\n"</span>);</span><br><span class="line">        <span class="keyword">return</span> -EINVAL;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    rc = of_property_read_u32(node, <span class="string">"qcom,recharge-mv"</span>,</span><br><span class="line">                        &amp;chip-&gt;recharge_mv);</span><br><span class="line">    <span class="keyword">if</span> (rc &lt; <span class="number">0</span>)</span><br><span class="line">        chip-&gt;recharge_mv = -EINVAL;</span><br><span class="line"></span><br><span class="line">    chip-&gt;recharge_disabled = of_property_read_bool(node,</span><br><span class="line">                    <span class="string">"qcom,recharge-disabled"</span>);</span><br><span class="line"></span><br><span class="line">    rc = of_property_read_u32(node, <span class="string">"qcom,cold-bat-decidegc"</span>,</span><br><span class="line">                        &amp;chip-&gt;cold_bat_decidegc);</span><br><span class="line">    <span class="keyword">if</span> (rc &lt; <span class="number">0</span>)</span><br><span class="line">        chip-&gt;cold_bat_decidegc = -EINVAL;</span><br><span class="line"></span><br><span class="line">    rc = of_property_read_u32(node, <span class="string">"qcom,hot-bat-decidegc"</span>,</span><br><span class="line">                        &amp;chip-&gt;hot_bat_decidegc);</span><br><span class="line">    <span class="keyword">if</span> (rc &lt; <span class="number">0</span>)</span><br><span class="line">        chip-&gt;hot_bat_decidegc = -EINVAL;</span><br><span class="line"></span><br><span class="line">    rc = of_property_read_u32(node, <span class="string">"qcom,warm-bat-decidegc"</span>,</span><br><span class="line">                        &amp;chip-&gt;warm_bat_decidegc);</span><br><span class="line"></span><br><span class="line">    rc |= of_property_read_u32(node, <span class="string">"qcom,cool-bat-decidegc"</span>,</span><br><span class="line">                        &amp;chip-&gt;cool_bat_decidegc);</span><br><span class="line">    <span class="keyword">if</span> (!rc) &#123;</span><br><span class="line">        rc = of_property_read_u32(node, <span class="string">"qcom,cool-bat-mv"</span>,</span><br><span class="line">                        &amp;chip-&gt;cool_bat_mv);</span><br><span class="line"></span><br><span class="line">        rc |= of_property_read_u32(node, <span class="string">"qcom,warm-bat-mv"</span>,</span><br><span class="line">                        &amp;chip-&gt;warm_bat_mv);</span><br><span class="line"></span><br><span class="line">        rc |= of_property_read_u32(node, <span class="string">"qcom,cool-bat-ma"</span>,</span><br><span class="line">                        &amp;chip-&gt;cool_bat_ma);</span><br><span class="line"></span><br><span class="line">        rc |= of_property_read_u32(node, <span class="string">"qcom,warm-bat-ma"</span>,</span><br><span class="line">                        &amp;chip-&gt;warm_bat_ma);</span><br><span class="line">        <span class="keyword">if</span> (rc)</span><br><span class="line">            chip-&gt;jeita_supported = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            chip-&gt;jeita_supported = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    pr_debug(<span class="string">"jeita_supported = %d"</span>, chip-&gt;jeita_supported);</span><br><span class="line"></span><br><span class="line">    rc = of_property_read_u32(node, <span class="string">"qcom,bat-present-decidegc"</span>,</span><br><span class="line">                        &amp;batt_present_degree_negative);</span><br><span class="line">    <span class="keyword">if</span> (rc &lt; <span class="number">0</span>)</span><br><span class="line">        chip-&gt;bat_present_decidegc = -EINVAL;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        chip-&gt;bat_present_decidegc = -batt_present_degree_negative;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (of_get_property(node, <span class="string">"qcom,vcc-i2c-supply"</span>, <span class="literal">NULL</span>)) &#123;</span><br><span class="line">        chip-&gt;vcc_i2c = devm_regulator_get(chip-&gt;dev, <span class="string">"vcc-i2c"</span>);</span><br><span class="line">        <span class="keyword">if</span> (IS_ERR(chip-&gt;vcc_i2c)) &#123;</span><br><span class="line">            dev_err(chip-&gt;dev,</span><br><span class="line">                <span class="string">"%s: Failed to get vcc_i2c regulator\n"</span>,</span><br><span class="line">                                __func__);</span><br><span class="line">            <span class="keyword">return</span> PTR_ERR(chip-&gt;vcc_i2c);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    chip-&gt;skip_usb_suspend_for_fake_battery = of_property_read_bool(node,</span><br><span class="line">                <span class="string">"qcom,skip-usb-suspend-for-fake-battery"</span>);</span><br><span class="line">    <span class="keyword">if</span> (!chip-&gt;skip_usb_suspend_for_fake_battery) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!chip-&gt;vadc_dev) &#123;</span><br><span class="line">            dev_err(chip-&gt;dev,</span><br><span class="line">                <span class="string">"VADC device not present with usb suspend on fake battery\n"</span>);</span><br><span class="line">            <span class="keyword">return</span> -EINVAL;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        rc = smb_parse_batt_id(chip);</span><br><span class="line">        <span class="keyword">if</span> (rc) &#123;</span><br><span class="line">            dev_err(chip-&gt;dev,</span><br><span class="line">                <span class="string">"failed to read batt-id rc=%d\n"</span>, rc);</span><br><span class="line">            <span class="keyword">return</span> rc;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    pr_debug(<span class="string">"inhibit-disabled = %d, recharge-disabled = %d, recharge-mv = %d,"</span>,</span><br><span class="line">        chip-&gt;inhibit_disabled, chip-&gt;recharge_disabled,</span><br><span class="line">                        chip-&gt;recharge_mv);</span><br><span class="line">    pr_debug(<span class="string">"vfloat-mv = %d, iterm-disabled = %d,"</span>,</span><br><span class="line">            chip-&gt;vfloat_mv, chip-&gt;iterm_disabled);</span><br><span class="line">    pr_debug(<span class="string">"fastchg-current = %d, charging-disabled = %d,"</span>,</span><br><span class="line">            chip-&gt;fastchg_current_max_ma,</span><br><span class="line">                    chip-&gt;charging_disabled);</span><br><span class="line">    pr_debug(<span class="string">"disable-apsd = %d bms = %s cold-bat-degree = %d,"</span>,</span><br><span class="line">        chip-&gt;disable_apsd, chip-&gt;bms_psy_name,</span><br><span class="line">                    chip-&gt;cold_bat_decidegc);</span><br><span class="line">    pr_debug(<span class="string">"hot-bat-degree = %d, bat-present-decidegc = %d\n"</span>,</span><br><span class="line">        chip-&gt;hot_bat_decidegc, chip-&gt;bat_present_decidegc);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>smb_parse_dt解析充电芯片功能配置，根据解析出来的结果，选择某些功能是否支持。比如电池温度检测，各种状态下的温度阈值，对应电池状态的限制电流等<br>由于设备树只配置了充电最大电压、电流以及截至电流和复充电压。这里可以打印这些参数解析首付正常。</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* probe the device to check if its actually connected */</span></span><br><span class="line">rc = smb358_read_reg(chip, CHG_OTH_CURRENT_CTRL_REG, &amp;reg);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">    pr_err(<span class="string">"Failed to detect SMB358, device absent, rc = %d\n"</span>, rc);</span><br><span class="line">    <span class="keyword">goto</span> err_set_vtg_i2c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>上面这步操作就是判断充电芯片是否正常，由于芯片没有 reset 功能，所以系统启动的<br>过程芯片自动工作。通过这一步测试 i2c 读写，可以判断芯片的类型是否是 smb853 以<br>及芯片工作状态。</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">chip-&gt;batt_psy.name     = <span class="string">"battery"</span>;</span><br><span class="line">chip-&gt;batt_psy.type     = POWER_SUPPLY_TYPE_BATTERY;</span><br><span class="line">chip-&gt;batt_psy.get_property = smb358_battery_get_property;</span><br><span class="line">chip-&gt;batt_psy.set_property = smb358_battery_set_property;</span><br><span class="line">chip-&gt;batt_psy.property_is_writeable =</span><br><span class="line">                smb358_batt_property_is_writeable;</span><br><span class="line">chip-&gt;batt_psy.properties   = smb358_battery_properties;</span><br><span class="line">chip-&gt;batt_psy.num_properties   = ARRAY_SIZE(smb358_battery_properties);</span><br><span class="line">chip-&gt;batt_psy.external_power_changed = smb358_external_power_changed;</span><br><span class="line">chip-&gt;batt_psy.supplied_to = pm_batt_supplied_to;</span><br><span class="line">chip-&gt;batt_psy.num_supplicants = ARRAY_SIZE(pm_batt_supplied_to);</span><br><span class="line"></span><br><span class="line">chip-&gt;resume_completed = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">rc = power_supply_register(chip-&gt;dev, &amp;chip-&gt;batt_psy);</span><br></pre></td></tr></table></figure><blockquote><p>power_supply_register()向 power_supply 里添加一个 battery 设备，以及添加设备的信息。smb358_battery_properties 数组内根据我们的需要添加各种电池信息供上层使用，然后<br>在 smb358_battery_get_property，smb358_battery_set_property 中对这些消息进行处理</p></blockquote><p><img src="power_supply_battery.png" alt="power_supply_battery"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span> (chip-&gt;using_pmic_therm) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!chip-&gt;jeita_supported) &#123;</span><br><span class="line">            <span class="comment">/* add hot/cold temperature monitor */</span></span><br><span class="line">            chip-&gt;adc_param.low_temp = chip-&gt;cold_bat_decidegc;</span><br><span class="line">            chip-&gt;adc_param.high_temp = chip-&gt;hot_bat_decidegc;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            chip-&gt;adc_param.low_temp = chip-&gt;cool_bat_decidegc;</span><br><span class="line">            chip-&gt;adc_param.high_temp = chip-&gt;warm_bat_decidegc;</span><br><span class="line">        &#125;</span><br><span class="line">        chip-&gt;adc_param.timer_interval = ADC_MEAS2_INTERVAL_1S;</span><br><span class="line">        chip-&gt;adc_param.state_request = ADC_TM_HIGH_LOW_THR_ENABLE;</span><br><span class="line">        chip-&gt;adc_param.btm_ctx = chip;</span><br><span class="line">        chip-&gt;adc_param.threshold_notification =</span><br><span class="line">                smb_chg_adc_notification;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> CONFIG_FOR_BROBDMOBI_R700</span></span><br><span class="line">        chip-&gt;adc_param.channel = P_MUX6_1_1;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">        chip-&gt;adc_param.channel = LR_MUX1_BATT_THERM;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/* update battery missing info in tm_channel_measure*/</span></span><br><span class="line">        rc = qpnp_adc_tm_channel_measure(chip-&gt;adc_tm_dev,</span><br><span class="line">                            &amp;chip-&gt;adc_param);</span><br><span class="line">        <span class="keyword">if</span> (rc)</span><br><span class="line">            pr_err(<span class="string">"requesting ADC error %d\n"</span>, rc);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p>probe 中 qpnp_adc_tm_channel_measure 相当于开启一个定时器，循环监控电池温度，<br>根据电池状况，调整最大电流值，各阶段最大电流值需要根据实际情况添加，根据代码<br>中的解析设备树部分添加个参数，另外充放电曲线根据实验室实际测试结果填写从放电<br>数组中</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">smb358_battery_get_property</span><span class="params">(struct power_supply *psy,</span></span></span><br><span class="line"><span class="function"><span class="params">                       <span class="keyword">enum</span> power_supply_property prop,</span></span></span><br><span class="line"><span class="function"><span class="params">                       <span class="keyword">union</span> power_supply_propval *val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">smb358_charger</span> *<span class="title">chip</span> = <span class="title">container_of</span>(<span class="title">psy</span>,</span></span><br><span class="line"><span class="class">                <span class="title">struct</span> <span class="title">smb358_charger</span>, <span class="title">batt_psy</span>);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (prop) &#123;</span><br><span class="line">    <span class="keyword">case</span> POWER_SUPPLY_PROP_STATUS:</span><br><span class="line">        val-&gt;intval = smb358_get_prop_batt_status(chip);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> POWER_SUPPLY_PROP_PRESENT:</span><br><span class="line">        val-&gt;intval = smb358_get_prop_batt_present(chip);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> POWER_SUPPLY_PROP_CAPACITY:</span><br><span class="line">        val-&gt;intval = smb358_get_prop_batt_capacity(chip);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> POWER_SUPPLY_PROP_CHARGING_ENABLED:</span><br><span class="line">        val-&gt;intval = !(chip-&gt;charging_disabled_status &amp; USER);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> POWER_SUPPLY_PROP_CHARGE_TYPE:</span><br><span class="line">        val-&gt;intval = smb358_get_prop_charge_type(chip);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> POWER_SUPPLY_PROP_HEALTH:</span><br><span class="line">        val-&gt;intval = smb358_get_prop_batt_health(chip);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> POWER_SUPPLY_PROP_TECHNOLOGY:</span><br><span class="line">        val-&gt;intval = POWER_SUPPLY_TECHNOLOGY_LION;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> POWER_SUPPLY_PROP_MODEL_NAME:</span><br><span class="line">        val-&gt;strval = <span class="string">"SMB358"</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> POWER_SUPPLY_PROP_TEMP:</span><br><span class="line">        val-&gt;intval = smb358_get_prop_batt_temp(chip);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> POWER_SUPPLY_PROP_VOLTAGE_NOW:</span><br><span class="line">        val-&gt;intval = smb358_get_prop_battery_voltage_now(chip);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">return</span> -EINVAL;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>smb358_battery_get_property()函数就是获取各种电池状态（status,present,capacity,health等等），然后上报给上层。</p></blockquote><h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br><span class="line">1248</span><br><span class="line">1249</span><br><span class="line">1250</span><br><span class="line">1251</span><br><span class="line">1252</span><br><span class="line">1253</span><br><span class="line">1254</span><br><span class="line">1255</span><br><span class="line">1256</span><br><span class="line">1257</span><br><span class="line">1258</span><br><span class="line">1259</span><br><span class="line">1260</span><br><span class="line">1261</span><br><span class="line">1262</span><br><span class="line">1263</span><br><span class="line">1264</span><br><span class="line">1265</span><br><span class="line">1266</span><br><span class="line">1267</span><br><span class="line">1268</span><br><span class="line">1269</span><br><span class="line">1270</span><br><span class="line">1271</span><br><span class="line">1272</span><br><span class="line">1273</span><br><span class="line">1274</span><br><span class="line">1275</span><br><span class="line">1276</span><br><span class="line">1277</span><br><span class="line">1278</span><br><span class="line">1279</span><br><span class="line">1280</span><br><span class="line">1281</span><br><span class="line">1282</span><br><span class="line">1283</span><br><span class="line">1284</span><br><span class="line">1285</span><br><span class="line">1286</span><br><span class="line">1287</span><br><span class="line">1288</span><br><span class="line">1289</span><br><span class="line">1290</span><br><span class="line">1291</span><br><span class="line">1292</span><br><span class="line">1293</span><br><span class="line">1294</span><br><span class="line">1295</span><br><span class="line">1296</span><br><span class="line">1297</span><br><span class="line">1298</span><br><span class="line">1299</span><br><span class="line">1300</span><br><span class="line">1301</span><br><span class="line">1302</span><br><span class="line">1303</span><br><span class="line">1304</span><br><span class="line">1305</span><br><span class="line">1306</span><br><span class="line">1307</span><br><span class="line">1308</span><br><span class="line">1309</span><br><span class="line">1310</span><br><span class="line">1311</span><br><span class="line">1312</span><br><span class="line">1313</span><br><span class="line">1314</span><br><span class="line">1315</span><br><span class="line">1316</span><br><span class="line">1317</span><br><span class="line">1318</span><br><span class="line">1319</span><br><span class="line">1320</span><br><span class="line">1321</span><br><span class="line">1322</span><br><span class="line">1323</span><br><span class="line">1324</span><br><span class="line">1325</span><br><span class="line">1326</span><br><span class="line">1327</span><br><span class="line">1328</span><br><span class="line">1329</span><br><span class="line">1330</span><br><span class="line">1331</span><br><span class="line">1332</span><br><span class="line">1333</span><br><span class="line">1334</span><br><span class="line">1335</span><br><span class="line">1336</span><br><span class="line">1337</span><br><span class="line">1338</span><br><span class="line">1339</span><br><span class="line">1340</span><br><span class="line">1341</span><br><span class="line">1342</span><br><span class="line">1343</span><br><span class="line">1344</span><br><span class="line">1345</span><br><span class="line">1346</span><br><span class="line">1347</span><br><span class="line">1348</span><br><span class="line">1349</span><br><span class="line">1350</span><br><span class="line">1351</span><br><span class="line">1352</span><br><span class="line">1353</span><br><span class="line">1354</span><br><span class="line">1355</span><br><span class="line">1356</span><br><span class="line">1357</span><br><span class="line">1358</span><br><span class="line">1359</span><br><span class="line">1360</span><br><span class="line">1361</span><br><span class="line">1362</span><br><span class="line">1363</span><br><span class="line">1364</span><br><span class="line">1365</span><br><span class="line">1366</span><br><span class="line">1367</span><br><span class="line">1368</span><br><span class="line">1369</span><br><span class="line">1370</span><br><span class="line">1371</span><br><span class="line">1372</span><br><span class="line">1373</span><br><span class="line">1374</span><br><span class="line">1375</span><br><span class="line">1376</span><br><span class="line">1377</span><br><span class="line">1378</span><br><span class="line">1379</span><br><span class="line">1380</span><br><span class="line">1381</span><br><span class="line">1382</span><br><span class="line">1383</span><br><span class="line">1384</span><br><span class="line">1385</span><br><span class="line">1386</span><br><span class="line">1387</span><br><span class="line">1388</span><br><span class="line">1389</span><br><span class="line">1390</span><br><span class="line">1391</span><br><span class="line">1392</span><br><span class="line">1393</span><br><span class="line">1394</span><br><span class="line">1395</span><br><span class="line">1396</span><br><span class="line">1397</span><br><span class="line">1398</span><br><span class="line">1399</span><br><span class="line">1400</span><br><span class="line">1401</span><br><span class="line">1402</span><br><span class="line">1403</span><br><span class="line">1404</span><br><span class="line">1405</span><br><span class="line">1406</span><br><span class="line">1407</span><br><span class="line">1408</span><br><span class="line">1409</span><br><span class="line">1410</span><br><span class="line">1411</span><br><span class="line">1412</span><br><span class="line">1413</span><br><span class="line">1414</span><br><span class="line">1415</span><br><span class="line">1416</span><br><span class="line">1417</span><br><span class="line">1418</span><br><span class="line">1419</span><br><span class="line">1420</span><br><span class="line">1421</span><br><span class="line">1422</span><br><span class="line">1423</span><br><span class="line">1424</span><br><span class="line">1425</span><br><span class="line">1426</span><br><span class="line">1427</span><br><span class="line">1428</span><br><span class="line">1429</span><br><span class="line">1430</span><br><span class="line">1431</span><br><span class="line">1432</span><br><span class="line">1433</span><br><span class="line">1434</span><br><span class="line">1435</span><br><span class="line">1436</span><br><span class="line">1437</span><br><span class="line">1438</span><br><span class="line">1439</span><br><span class="line">1440</span><br><span class="line">1441</span><br><span class="line">1442</span><br><span class="line">1443</span><br><span class="line">1444</span><br><span class="line">1445</span><br><span class="line">1446</span><br><span class="line">1447</span><br><span class="line">1448</span><br><span class="line">1449</span><br><span class="line">1450</span><br><span class="line">1451</span><br><span class="line">1452</span><br><span class="line">1453</span><br><span class="line">1454</span><br><span class="line">1455</span><br><span class="line">1456</span><br><span class="line">1457</span><br><span class="line">1458</span><br><span class="line">1459</span><br><span class="line">1460</span><br><span class="line">1461</span><br><span class="line">1462</span><br><span class="line">1463</span><br><span class="line">1464</span><br><span class="line">1465</span><br><span class="line">1466</span><br><span class="line">1467</span><br><span class="line">1468</span><br><span class="line">1469</span><br><span class="line">1470</span><br><span class="line">1471</span><br><span class="line">1472</span><br><span class="line">1473</span><br><span class="line">1474</span><br><span class="line">1475</span><br><span class="line">1476</span><br><span class="line">1477</span><br><span class="line">1478</span><br><span class="line">1479</span><br><span class="line">1480</span><br><span class="line">1481</span><br><span class="line">1482</span><br><span class="line">1483</span><br><span class="line">1484</span><br><span class="line">1485</span><br><span class="line">1486</span><br><span class="line">1487</span><br><span class="line">1488</span><br><span class="line">1489</span><br><span class="line">1490</span><br><span class="line">1491</span><br><span class="line">1492</span><br><span class="line">1493</span><br><span class="line">1494</span><br><span class="line">1495</span><br><span class="line">1496</span><br><span class="line">1497</span><br><span class="line">1498</span><br><span class="line">1499</span><br><span class="line">1500</span><br><span class="line">1501</span><br><span class="line">1502</span><br><span class="line">1503</span><br><span class="line">1504</span><br><span class="line">1505</span><br><span class="line">1506</span><br><span class="line">1507</span><br><span class="line">1508</span><br><span class="line">1509</span><br><span class="line">1510</span><br><span class="line">1511</span><br><span class="line">1512</span><br><span class="line">1513</span><br><span class="line">1514</span><br><span class="line">1515</span><br><span class="line">1516</span><br><span class="line">1517</span><br><span class="line">1518</span><br><span class="line">1519</span><br><span class="line">1520</span><br><span class="line">1521</span><br><span class="line">1522</span><br><span class="line">1523</span><br><span class="line">1524</span><br><span class="line">1525</span><br><span class="line">1526</span><br><span class="line">1527</span><br><span class="line">1528</span><br><span class="line">1529</span><br><span class="line">1530</span><br><span class="line">1531</span><br><span class="line">1532</span><br><span class="line">1533</span><br><span class="line">1534</span><br><span class="line">1535</span><br><span class="line">1536</span><br><span class="line">1537</span><br><span class="line">1538</span><br><span class="line">1539</span><br><span class="line">1540</span><br><span class="line">1541</span><br><span class="line">1542</span><br><span class="line">1543</span><br><span class="line">1544</span><br><span class="line">1545</span><br><span class="line">1546</span><br><span class="line">1547</span><br><span class="line">1548</span><br><span class="line">1549</span><br><span class="line">1550</span><br><span class="line">1551</span><br><span class="line">1552</span><br><span class="line">1553</span><br><span class="line">1554</span><br><span class="line">1555</span><br><span class="line">1556</span><br><span class="line">1557</span><br><span class="line">1558</span><br><span class="line">1559</span><br><span class="line">1560</span><br><span class="line">1561</span><br><span class="line">1562</span><br><span class="line">1563</span><br><span class="line">1564</span><br><span class="line">1565</span><br><span class="line">1566</span><br><span class="line">1567</span><br><span class="line">1568</span><br><span class="line">1569</span><br><span class="line">1570</span><br><span class="line">1571</span><br><span class="line">1572</span><br><span class="line">1573</span><br><span class="line">1574</span><br><span class="line">1575</span><br><span class="line">1576</span><br><span class="line">1577</span><br><span class="line">1578</span><br><span class="line">1579</span><br><span class="line">1580</span><br><span class="line">1581</span><br><span class="line">1582</span><br><span class="line">1583</span><br><span class="line">1584</span><br><span class="line">1585</span><br><span class="line">1586</span><br><span class="line">1587</span><br><span class="line">1588</span><br><span class="line">1589</span><br><span class="line">1590</span><br><span class="line">1591</span><br><span class="line">1592</span><br><span class="line">1593</span><br><span class="line">1594</span><br><span class="line">1595</span><br><span class="line">1596</span><br><span class="line">1597</span><br><span class="line">1598</span><br><span class="line">1599</span><br><span class="line">1600</span><br><span class="line">1601</span><br><span class="line">1602</span><br><span class="line">1603</span><br><span class="line">1604</span><br><span class="line">1605</span><br><span class="line">1606</span><br><span class="line">1607</span><br><span class="line">1608</span><br><span class="line">1609</span><br><span class="line">1610</span><br><span class="line">1611</span><br><span class="line">1612</span><br><span class="line">1613</span><br><span class="line">1614</span><br><span class="line">1615</span><br><span class="line">1616</span><br><span class="line">1617</span><br><span class="line">1618</span><br><span class="line">1619</span><br><span class="line">1620</span><br><span class="line">1621</span><br><span class="line">1622</span><br><span class="line">1623</span><br><span class="line">1624</span><br><span class="line">1625</span><br><span class="line">1626</span><br><span class="line">1627</span><br><span class="line">1628</span><br><span class="line">1629</span><br><span class="line">1630</span><br><span class="line">1631</span><br><span class="line">1632</span><br><span class="line">1633</span><br><span class="line">1634</span><br><span class="line">1635</span><br><span class="line">1636</span><br><span class="line">1637</span><br><span class="line">1638</span><br><span class="line">1639</span><br><span class="line">1640</span><br><span class="line">1641</span><br><span class="line">1642</span><br><span class="line">1643</span><br><span class="line">1644</span><br><span class="line">1645</span><br><span class="line">1646</span><br><span class="line">1647</span><br><span class="line">1648</span><br><span class="line">1649</span><br><span class="line">1650</span><br><span class="line">1651</span><br><span class="line">1652</span><br><span class="line">1653</span><br><span class="line">1654</span><br><span class="line">1655</span><br><span class="line">1656</span><br><span class="line">1657</span><br><span class="line">1658</span><br><span class="line">1659</span><br><span class="line">1660</span><br><span class="line">1661</span><br><span class="line">1662</span><br><span class="line">1663</span><br><span class="line">1664</span><br><span class="line">1665</span><br><span class="line">1666</span><br><span class="line">1667</span><br><span class="line">1668</span><br><span class="line">1669</span><br><span class="line">1670</span><br><span class="line">1671</span><br><span class="line">1672</span><br><span class="line">1673</span><br><span class="line">1674</span><br><span class="line">1675</span><br><span class="line">1676</span><br><span class="line">1677</span><br><span class="line">1678</span><br><span class="line">1679</span><br><span class="line">1680</span><br><span class="line">1681</span><br><span class="line">1682</span><br><span class="line">1683</span><br><span class="line">1684</span><br><span class="line">1685</span><br><span class="line">1686</span><br><span class="line">1687</span><br><span class="line">1688</span><br><span class="line">1689</span><br><span class="line">1690</span><br><span class="line">1691</span><br><span class="line">1692</span><br><span class="line">1693</span><br><span class="line">1694</span><br><span class="line">1695</span><br><span class="line">1696</span><br><span class="line">1697</span><br><span class="line">1698</span><br><span class="line">1699</span><br><span class="line">1700</span><br><span class="line">1701</span><br><span class="line">1702</span><br><span class="line">1703</span><br><span class="line">1704</span><br><span class="line">1705</span><br><span class="line">1706</span><br><span class="line">1707</span><br><span class="line">1708</span><br><span class="line">1709</span><br><span class="line">1710</span><br><span class="line">1711</span><br><span class="line">1712</span><br><span class="line">1713</span><br><span class="line">1714</span><br><span class="line">1715</span><br><span class="line">1716</span><br><span class="line">1717</span><br><span class="line">1718</span><br><span class="line">1719</span><br><span class="line">1720</span><br><span class="line">1721</span><br><span class="line">1722</span><br><span class="line">1723</span><br><span class="line">1724</span><br><span class="line">1725</span><br><span class="line">1726</span><br><span class="line">1727</span><br><span class="line">1728</span><br><span class="line">1729</span><br><span class="line">1730</span><br><span class="line">1731</span><br><span class="line">1732</span><br><span class="line">1733</span><br><span class="line">1734</span><br><span class="line">1735</span><br><span class="line">1736</span><br><span class="line">1737</span><br><span class="line">1738</span><br><span class="line">1739</span><br><span class="line">1740</span><br><span class="line">1741</span><br><span class="line">1742</span><br><span class="line">1743</span><br><span class="line">1744</span><br><span class="line">1745</span><br><span class="line">1746</span><br><span class="line">1747</span><br><span class="line">1748</span><br><span class="line">1749</span><br><span class="line">1750</span><br><span class="line">1751</span><br><span class="line">1752</span><br><span class="line">1753</span><br><span class="line">1754</span><br><span class="line">1755</span><br><span class="line">1756</span><br><span class="line">1757</span><br><span class="line">1758</span><br><span class="line">1759</span><br><span class="line">1760</span><br><span class="line">1761</span><br><span class="line">1762</span><br><span class="line">1763</span><br><span class="line">1764</span><br><span class="line">1765</span><br><span class="line">1766</span><br><span class="line">1767</span><br><span class="line">1768</span><br><span class="line">1769</span><br><span class="line">1770</span><br><span class="line">1771</span><br><span class="line">1772</span><br><span class="line">1773</span><br><span class="line">1774</span><br><span class="line">1775</span><br><span class="line">1776</span><br><span class="line">1777</span><br><span class="line">1778</span><br><span class="line">1779</span><br><span class="line">1780</span><br><span class="line">1781</span><br><span class="line">1782</span><br><span class="line">1783</span><br><span class="line">1784</span><br><span class="line">1785</span><br><span class="line">1786</span><br><span class="line">1787</span><br><span class="line">1788</span><br><span class="line">1789</span><br><span class="line">1790</span><br><span class="line">1791</span><br><span class="line">1792</span><br><span class="line">1793</span><br><span class="line">1794</span><br><span class="line">1795</span><br><span class="line">1796</span><br><span class="line">1797</span><br><span class="line">1798</span><br><span class="line">1799</span><br><span class="line">1800</span><br><span class="line">1801</span><br><span class="line">1802</span><br><span class="line">1803</span><br><span class="line">1804</span><br><span class="line">1805</span><br><span class="line">1806</span><br><span class="line">1807</span><br><span class="line">1808</span><br><span class="line">1809</span><br><span class="line">1810</span><br><span class="line">1811</span><br><span class="line">1812</span><br><span class="line">1813</span><br><span class="line">1814</span><br><span class="line">1815</span><br><span class="line">1816</span><br><span class="line">1817</span><br><span class="line">1818</span><br><span class="line">1819</span><br><span class="line">1820</span><br><span class="line">1821</span><br><span class="line">1822</span><br><span class="line">1823</span><br><span class="line">1824</span><br><span class="line">1825</span><br><span class="line">1826</span><br><span class="line">1827</span><br><span class="line">1828</span><br><span class="line">1829</span><br><span class="line">1830</span><br><span class="line">1831</span><br><span class="line">1832</span><br><span class="line">1833</span><br><span class="line">1834</span><br><span class="line">1835</span><br><span class="line">1836</span><br><span class="line">1837</span><br><span class="line">1838</span><br><span class="line">1839</span><br><span class="line">1840</span><br><span class="line">1841</span><br><span class="line">1842</span><br><span class="line">1843</span><br><span class="line">1844</span><br><span class="line">1845</span><br><span class="line">1846</span><br><span class="line">1847</span><br><span class="line">1848</span><br><span class="line">1849</span><br><span class="line">1850</span><br><span class="line">1851</span><br><span class="line">1852</span><br><span class="line">1853</span><br><span class="line">1854</span><br><span class="line">1855</span><br><span class="line">1856</span><br><span class="line">1857</span><br><span class="line">1858</span><br><span class="line">1859</span><br><span class="line">1860</span><br><span class="line">1861</span><br><span class="line">1862</span><br><span class="line">1863</span><br><span class="line">1864</span><br><span class="line">1865</span><br><span class="line">1866</span><br><span class="line">1867</span><br><span class="line">1868</span><br><span class="line">1869</span><br><span class="line">1870</span><br><span class="line">1871</span><br><span class="line">1872</span><br><span class="line">1873</span><br><span class="line">1874</span><br><span class="line">1875</span><br><span class="line">1876</span><br><span class="line">1877</span><br><span class="line">1878</span><br><span class="line">1879</span><br><span class="line">1880</span><br><span class="line">1881</span><br><span class="line">1882</span><br><span class="line">1883</span><br><span class="line">1884</span><br><span class="line">1885</span><br><span class="line">1886</span><br><span class="line">1887</span><br><span class="line">1888</span><br><span class="line">1889</span><br><span class="line">1890</span><br><span class="line">1891</span><br><span class="line">1892</span><br><span class="line">1893</span><br><span class="line">1894</span><br><span class="line">1895</span><br><span class="line">1896</span><br><span class="line">1897</span><br><span class="line">1898</span><br><span class="line">1899</span><br><span class="line">1900</span><br><span class="line">1901</span><br><span class="line">1902</span><br><span class="line">1903</span><br><span class="line">1904</span><br><span class="line">1905</span><br><span class="line">1906</span><br><span class="line">1907</span><br><span class="line">1908</span><br><span class="line">1909</span><br><span class="line">1910</span><br><span class="line">1911</span><br><span class="line">1912</span><br><span class="line">1913</span><br><span class="line">1914</span><br><span class="line">1915</span><br><span class="line">1916</span><br><span class="line">1917</span><br><span class="line">1918</span><br><span class="line">1919</span><br><span class="line">1920</span><br><span class="line">1921</span><br><span class="line">1922</span><br><span class="line">1923</span><br><span class="line">1924</span><br><span class="line">1925</span><br><span class="line">1926</span><br><span class="line">1927</span><br><span class="line">1928</span><br><span class="line">1929</span><br><span class="line">1930</span><br><span class="line">1931</span><br><span class="line">1932</span><br><span class="line">1933</span><br><span class="line">1934</span><br><span class="line">1935</span><br><span class="line">1936</span><br><span class="line">1937</span><br><span class="line">1938</span><br><span class="line">1939</span><br><span class="line">1940</span><br><span class="line">1941</span><br><span class="line">1942</span><br><span class="line">1943</span><br><span class="line">1944</span><br><span class="line">1945</span><br><span class="line">1946</span><br><span class="line">1947</span><br><span class="line">1948</span><br><span class="line">1949</span><br><span class="line">1950</span><br><span class="line">1951</span><br><span class="line">1952</span><br><span class="line">1953</span><br><span class="line">1954</span><br><span class="line">1955</span><br><span class="line">1956</span><br><span class="line">1957</span><br><span class="line">1958</span><br><span class="line">1959</span><br><span class="line">1960</span><br><span class="line">1961</span><br><span class="line">1962</span><br><span class="line">1963</span><br><span class="line">1964</span><br><span class="line">1965</span><br><span class="line">1966</span><br><span class="line">1967</span><br><span class="line">1968</span><br><span class="line">1969</span><br><span class="line">1970</span><br><span class="line">1971</span><br><span class="line">1972</span><br><span class="line">1973</span><br><span class="line">1974</span><br><span class="line">1975</span><br><span class="line">1976</span><br><span class="line">1977</span><br><span class="line">1978</span><br><span class="line">1979</span><br><span class="line">1980</span><br><span class="line">1981</span><br><span class="line">1982</span><br><span class="line">1983</span><br><span class="line">1984</span><br><span class="line">1985</span><br><span class="line">1986</span><br><span class="line">1987</span><br><span class="line">1988</span><br><span class="line">1989</span><br><span class="line">1990</span><br><span class="line">1991</span><br><span class="line">1992</span><br><span class="line">1993</span><br><span class="line">1994</span><br><span class="line">1995</span><br><span class="line">1996</span><br><span class="line">1997</span><br><span class="line">1998</span><br><span class="line">1999</span><br><span class="line">2000</span><br><span class="line">2001</span><br><span class="line">2002</span><br><span class="line">2003</span><br><span class="line">2004</span><br><span class="line">2005</span><br><span class="line">2006</span><br><span class="line">2007</span><br><span class="line">2008</span><br><span class="line">2009</span><br><span class="line">2010</span><br><span class="line">2011</span><br><span class="line">2012</span><br><span class="line">2013</span><br><span class="line">2014</span><br><span class="line">2015</span><br><span class="line">2016</span><br><span class="line">2017</span><br><span class="line">2018</span><br><span class="line">2019</span><br><span class="line">2020</span><br><span class="line">2021</span><br><span class="line">2022</span><br><span class="line">2023</span><br><span class="line">2024</span><br><span class="line">2025</span><br><span class="line">2026</span><br><span class="line">2027</span><br><span class="line">2028</span><br><span class="line">2029</span><br><span class="line">2030</span><br><span class="line">2031</span><br><span class="line">2032</span><br><span class="line">2033</span><br><span class="line">2034</span><br><span class="line">2035</span><br><span class="line">2036</span><br><span class="line">2037</span><br><span class="line">2038</span><br><span class="line">2039</span><br><span class="line">2040</span><br><span class="line">2041</span><br><span class="line">2042</span><br><span class="line">2043</span><br><span class="line">2044</span><br><span class="line">2045</span><br><span class="line">2046</span><br><span class="line">2047</span><br><span class="line">2048</span><br><span class="line">2049</span><br><span class="line">2050</span><br><span class="line">2051</span><br><span class="line">2052</span><br><span class="line">2053</span><br><span class="line">2054</span><br><span class="line">2055</span><br><span class="line">2056</span><br><span class="line">2057</span><br><span class="line">2058</span><br><span class="line">2059</span><br><span class="line">2060</span><br><span class="line">2061</span><br><span class="line">2062</span><br><span class="line">2063</span><br><span class="line">2064</span><br><span class="line">2065</span><br><span class="line">2066</span><br><span class="line">2067</span><br><span class="line">2068</span><br><span class="line">2069</span><br><span class="line">2070</span><br><span class="line">2071</span><br><span class="line">2072</span><br><span class="line">2073</span><br><span class="line">2074</span><br><span class="line">2075</span><br><span class="line">2076</span><br><span class="line">2077</span><br><span class="line">2078</span><br><span class="line">2079</span><br><span class="line">2080</span><br><span class="line">2081</span><br><span class="line">2082</span><br><span class="line">2083</span><br><span class="line">2084</span><br><span class="line">2085</span><br><span class="line">2086</span><br><span class="line">2087</span><br><span class="line">2088</span><br><span class="line">2089</span><br><span class="line">2090</span><br><span class="line">2091</span><br><span class="line">2092</span><br><span class="line">2093</span><br><span class="line">2094</span><br><span class="line">2095</span><br><span class="line">2096</span><br><span class="line">2097</span><br><span class="line">2098</span><br><span class="line">2099</span><br><span class="line">2100</span><br><span class="line">2101</span><br><span class="line">2102</span><br><span class="line">2103</span><br><span class="line">2104</span><br><span class="line">2105</span><br><span class="line">2106</span><br><span class="line">2107</span><br><span class="line">2108</span><br><span class="line">2109</span><br><span class="line">2110</span><br><span class="line">2111</span><br><span class="line">2112</span><br><span class="line">2113</span><br><span class="line">2114</span><br><span class="line">2115</span><br><span class="line">2116</span><br><span class="line">2117</span><br><span class="line">2118</span><br><span class="line">2119</span><br><span class="line">2120</span><br><span class="line">2121</span><br><span class="line">2122</span><br><span class="line">2123</span><br><span class="line">2124</span><br><span class="line">2125</span><br><span class="line">2126</span><br><span class="line">2127</span><br><span class="line">2128</span><br><span class="line">2129</span><br><span class="line">2130</span><br><span class="line">2131</span><br><span class="line">2132</span><br><span class="line">2133</span><br><span class="line">2134</span><br><span class="line">2135</span><br><span class="line">2136</span><br><span class="line">2137</span><br><span class="line">2138</span><br><span class="line">2139</span><br><span class="line">2140</span><br><span class="line">2141</span><br><span class="line">2142</span><br><span class="line">2143</span><br><span class="line">2144</span><br><span class="line">2145</span><br><span class="line">2146</span><br><span class="line">2147</span><br><span class="line">2148</span><br><span class="line">2149</span><br><span class="line">2150</span><br><span class="line">2151</span><br><span class="line">2152</span><br><span class="line">2153</span><br><span class="line">2154</span><br><span class="line">2155</span><br><span class="line">2156</span><br><span class="line">2157</span><br><span class="line">2158</span><br><span class="line">2159</span><br><span class="line">2160</span><br><span class="line">2161</span><br><span class="line">2162</span><br><span class="line">2163</span><br><span class="line">2164</span><br><span class="line">2165</span><br><span class="line">2166</span><br><span class="line">2167</span><br><span class="line">2168</span><br><span class="line">2169</span><br><span class="line">2170</span><br><span class="line">2171</span><br><span class="line">2172</span><br><span class="line">2173</span><br><span class="line">2174</span><br><span class="line">2175</span><br><span class="line">2176</span><br><span class="line">2177</span><br><span class="line">2178</span><br><span class="line">2179</span><br><span class="line">2180</span><br><span class="line">2181</span><br><span class="line">2182</span><br><span class="line">2183</span><br><span class="line">2184</span><br><span class="line">2185</span><br><span class="line">2186</span><br><span class="line">2187</span><br><span class="line">2188</span><br><span class="line">2189</span><br><span class="line">2190</span><br><span class="line">2191</span><br><span class="line">2192</span><br><span class="line">2193</span><br><span class="line">2194</span><br><span class="line">2195</span><br><span class="line">2196</span><br><span class="line">2197</span><br><span class="line">2198</span><br><span class="line">2199</span><br><span class="line">2200</span><br><span class="line">2201</span><br><span class="line">2202</span><br><span class="line">2203</span><br><span class="line">2204</span><br><span class="line">2205</span><br><span class="line">2206</span><br><span class="line">2207</span><br><span class="line">2208</span><br><span class="line">2209</span><br><span class="line">2210</span><br><span class="line">2211</span><br><span class="line">2212</span><br><span class="line">2213</span><br><span class="line">2214</span><br><span class="line">2215</span><br><span class="line">2216</span><br><span class="line">2217</span><br><span class="line">2218</span><br><span class="line">2219</span><br><span class="line">2220</span><br><span class="line">2221</span><br><span class="line">2222</span><br><span class="line">2223</span><br><span class="line">2224</span><br><span class="line">2225</span><br><span class="line">2226</span><br><span class="line">2227</span><br><span class="line">2228</span><br><span class="line">2229</span><br><span class="line">2230</span><br><span class="line">2231</span><br><span class="line">2232</span><br><span class="line">2233</span><br><span class="line">2234</span><br><span class="line">2235</span><br><span class="line">2236</span><br><span class="line">2237</span><br><span class="line">2238</span><br><span class="line">2239</span><br><span class="line">2240</span><br><span class="line">2241</span><br><span class="line">2242</span><br><span class="line">2243</span><br><span class="line">2244</span><br><span class="line">2245</span><br><span class="line">2246</span><br><span class="line">2247</span><br><span class="line">2248</span><br><span class="line">2249</span><br><span class="line">2250</span><br><span class="line">2251</span><br><span class="line">2252</span><br><span class="line">2253</span><br><span class="line">2254</span><br><span class="line">2255</span><br><span class="line">2256</span><br><span class="line">2257</span><br><span class="line">2258</span><br><span class="line">2259</span><br><span class="line">2260</span><br><span class="line">2261</span><br><span class="line">2262</span><br><span class="line">2263</span><br><span class="line">2264</span><br><span class="line">2265</span><br><span class="line">2266</span><br><span class="line">2267</span><br><span class="line">2268</span><br><span class="line">2269</span><br><span class="line">2270</span><br><span class="line">2271</span><br><span class="line">2272</span><br><span class="line">2273</span><br><span class="line">2274</span><br><span class="line">2275</span><br><span class="line">2276</span><br><span class="line">2277</span><br><span class="line">2278</span><br><span class="line">2279</span><br><span class="line">2280</span><br><span class="line">2281</span><br><span class="line">2282</span><br><span class="line">2283</span><br><span class="line">2284</span><br><span class="line">2285</span><br><span class="line">2286</span><br><span class="line">2287</span><br><span class="line">2288</span><br><span class="line">2289</span><br><span class="line">2290</span><br><span class="line">2291</span><br><span class="line">2292</span><br><span class="line">2293</span><br><span class="line">2294</span><br><span class="line">2295</span><br><span class="line">2296</span><br><span class="line">2297</span><br><span class="line">2298</span><br><span class="line">2299</span><br><span class="line">2300</span><br><span class="line">2301</span><br><span class="line">2302</span><br><span class="line">2303</span><br><span class="line">2304</span><br><span class="line">2305</span><br><span class="line">2306</span><br><span class="line">2307</span><br><span class="line">2308</span><br><span class="line">2309</span><br><span class="line">2310</span><br><span class="line">2311</span><br><span class="line">2312</span><br><span class="line">2313</span><br><span class="line">2314</span><br><span class="line">2315</span><br><span class="line">2316</span><br><span class="line">2317</span><br><span class="line">2318</span><br><span class="line">2319</span><br><span class="line">2320</span><br><span class="line">2321</span><br><span class="line">2322</span><br><span class="line">2323</span><br><span class="line">2324</span><br><span class="line">2325</span><br><span class="line">2326</span><br><span class="line">2327</span><br><span class="line">2328</span><br><span class="line">2329</span><br><span class="line">2330</span><br><span class="line">2331</span><br><span class="line">2332</span><br><span class="line">2333</span><br><span class="line">2334</span><br><span class="line">2335</span><br><span class="line">2336</span><br><span class="line">2337</span><br><span class="line">2338</span><br><span class="line">2339</span><br><span class="line">2340</span><br><span class="line">2341</span><br><span class="line">2342</span><br><span class="line">2343</span><br><span class="line">2344</span><br><span class="line">2345</span><br><span class="line">2346</span><br><span class="line">2347</span><br><span class="line">2348</span><br><span class="line">2349</span><br><span class="line">2350</span><br><span class="line">2351</span><br><span class="line">2352</span><br><span class="line">2353</span><br><span class="line">2354</span><br><span class="line">2355</span><br><span class="line">2356</span><br><span class="line">2357</span><br><span class="line">2358</span><br><span class="line">2359</span><br><span class="line">2360</span><br><span class="line">2361</span><br><span class="line">2362</span><br><span class="line">2363</span><br><span class="line">2364</span><br><span class="line">2365</span><br><span class="line">2366</span><br><span class="line">2367</span><br><span class="line">2368</span><br><span class="line">2369</span><br><span class="line">2370</span><br><span class="line">2371</span><br><span class="line">2372</span><br><span class="line">2373</span><br><span class="line">2374</span><br><span class="line">2375</span><br><span class="line">2376</span><br><span class="line">2377</span><br><span class="line">2378</span><br><span class="line">2379</span><br><span class="line">2380</span><br><span class="line">2381</span><br><span class="line">2382</span><br><span class="line">2383</span><br><span class="line">2384</span><br><span class="line">2385</span><br><span class="line">2386</span><br><span class="line">2387</span><br><span class="line">2388</span><br><span class="line">2389</span><br><span class="line">2390</span><br><span class="line">2391</span><br><span class="line">2392</span><br><span class="line">2393</span><br><span class="line">2394</span><br><span class="line">2395</span><br><span class="line">2396</span><br><span class="line">2397</span><br><span class="line">2398</span><br><span class="line">2399</span><br><span class="line">2400</span><br><span class="line">2401</span><br><span class="line">2402</span><br><span class="line">2403</span><br><span class="line">2404</span><br><span class="line">2405</span><br><span class="line">2406</span><br><span class="line">2407</span><br><span class="line">2408</span><br><span class="line">2409</span><br><span class="line">2410</span><br><span class="line">2411</span><br><span class="line">2412</span><br><span class="line">2413</span><br><span class="line">2414</span><br><span class="line">2415</span><br><span class="line">2416</span><br><span class="line">2417</span><br><span class="line">2418</span><br><span class="line">2419</span><br><span class="line">2420</span><br><span class="line">2421</span><br><span class="line">2422</span><br><span class="line">2423</span><br><span class="line">2424</span><br><span class="line">2425</span><br><span class="line">2426</span><br><span class="line">2427</span><br><span class="line">2428</span><br><span class="line">2429</span><br><span class="line">2430</span><br><span class="line">2431</span><br><span class="line">2432</span><br><span class="line">2433</span><br><span class="line">2434</span><br><span class="line">2435</span><br><span class="line">2436</span><br><span class="line">2437</span><br><span class="line">2438</span><br><span class="line">2439</span><br><span class="line">2440</span><br><span class="line">2441</span><br><span class="line">2442</span><br><span class="line">2443</span><br><span class="line">2444</span><br><span class="line">2445</span><br><span class="line">2446</span><br><span class="line">2447</span><br><span class="line">2448</span><br><span class="line">2449</span><br><span class="line">2450</span><br><span class="line">2451</span><br><span class="line">2452</span><br><span class="line">2453</span><br><span class="line">2454</span><br><span class="line">2455</span><br><span class="line">2456</span><br><span class="line">2457</span><br><span class="line">2458</span><br><span class="line">2459</span><br><span class="line">2460</span><br><span class="line">2461</span><br><span class="line">2462</span><br><span class="line">2463</span><br><span class="line">2464</span><br><span class="line">2465</span><br><span class="line">2466</span><br><span class="line">2467</span><br><span class="line">2468</span><br><span class="line">2469</span><br><span class="line">2470</span><br><span class="line">2471</span><br><span class="line">2472</span><br><span class="line">2473</span><br><span class="line">2474</span><br><span class="line">2475</span><br><span class="line">2476</span><br><span class="line">2477</span><br><span class="line">2478</span><br><span class="line">2479</span><br><span class="line">2480</span><br><span class="line">2481</span><br><span class="line">2482</span><br><span class="line">2483</span><br><span class="line">2484</span><br><span class="line">2485</span><br><span class="line">2486</span><br><span class="line">2487</span><br><span class="line">2488</span><br><span class="line">2489</span><br><span class="line">2490</span><br><span class="line">2491</span><br><span class="line">2492</span><br><span class="line">2493</span><br><span class="line">2494</span><br><span class="line">2495</span><br><span class="line">2496</span><br><span class="line">2497</span><br><span class="line">2498</span><br><span class="line">2499</span><br><span class="line">2500</span><br><span class="line">2501</span><br><span class="line">2502</span><br><span class="line">2503</span><br><span class="line">2504</span><br><span class="line">2505</span><br><span class="line">2506</span><br><span class="line">2507</span><br><span class="line">2508</span><br><span class="line">2509</span><br><span class="line">2510</span><br><span class="line">2511</span><br><span class="line">2512</span><br><span class="line">2513</span><br><span class="line">2514</span><br><span class="line">2515</span><br><span class="line">2516</span><br><span class="line">2517</span><br><span class="line">2518</span><br><span class="line">2519</span><br><span class="line">2520</span><br><span class="line">2521</span><br><span class="line">2522</span><br><span class="line">2523</span><br><span class="line">2524</span><br><span class="line">2525</span><br><span class="line">2526</span><br><span class="line">2527</span><br><span class="line">2528</span><br><span class="line">2529</span><br><span class="line">2530</span><br><span class="line">2531</span><br><span class="line">2532</span><br><span class="line">2533</span><br><span class="line">2534</span><br><span class="line">2535</span><br><span class="line">2536</span><br><span class="line">2537</span><br><span class="line">2538</span><br><span class="line">2539</span><br><span class="line">2540</span><br><span class="line">2541</span><br><span class="line">2542</span><br><span class="line">2543</span><br><span class="line">2544</span><br><span class="line">2545</span><br><span class="line">2546</span><br><span class="line">2547</span><br><span class="line">2548</span><br><span class="line">2549</span><br><span class="line">2550</span><br><span class="line">2551</span><br><span class="line">2552</span><br><span class="line">2553</span><br><span class="line">2554</span><br><span class="line">2555</span><br><span class="line">2556</span><br><span class="line">2557</span><br><span class="line">2558</span><br><span class="line">2559</span><br><span class="line">2560</span><br><span class="line">2561</span><br><span class="line">2562</span><br><span class="line">2563</span><br><span class="line">2564</span><br><span class="line">2565</span><br><span class="line">2566</span><br><span class="line">2567</span><br><span class="line">2568</span><br><span class="line">2569</span><br><span class="line">2570</span><br><span class="line">2571</span><br><span class="line">2572</span><br><span class="line">2573</span><br><span class="line">2574</span><br><span class="line">2575</span><br><span class="line">2576</span><br><span class="line">2577</span><br><span class="line">2578</span><br><span class="line">2579</span><br><span class="line">2580</span><br><span class="line">2581</span><br><span class="line">2582</span><br><span class="line">2583</span><br><span class="line">2584</span><br><span class="line">2585</span><br><span class="line">2586</span><br><span class="line">2587</span><br><span class="line">2588</span><br><span class="line">2589</span><br><span class="line">2590</span><br><span class="line">2591</span><br><span class="line">2592</span><br><span class="line">2593</span><br><span class="line">2594</span><br><span class="line">2595</span><br><span class="line">2596</span><br><span class="line">2597</span><br><span class="line">2598</span><br><span class="line">2599</span><br><span class="line">2600</span><br><span class="line">2601</span><br><span class="line">2602</span><br><span class="line">2603</span><br><span class="line">2604</span><br><span class="line">2605</span><br><span class="line">2606</span><br><span class="line">2607</span><br><span class="line">2608</span><br><span class="line">2609</span><br><span class="line">2610</span><br><span class="line">2611</span><br><span class="line">2612</span><br><span class="line">2613</span><br><span class="line">2614</span><br><span class="line">2615</span><br><span class="line">2616</span><br><span class="line">2617</span><br><span class="line">2618</span><br><span class="line">2619</span><br><span class="line">2620</span><br><span class="line">2621</span><br><span class="line">2622</span><br><span class="line">2623</span><br><span class="line">2624</span><br><span class="line">2625</span><br><span class="line">2626</span><br><span class="line">2627</span><br><span class="line">2628</span><br><span class="line">2629</span><br><span class="line">2630</span><br><span class="line">2631</span><br><span class="line">2632</span><br><span class="line">2633</span><br><span class="line">2634</span><br><span class="line">2635</span><br><span class="line">2636</span><br><span class="line">2637</span><br><span class="line">2638</span><br><span class="line">2639</span><br><span class="line">2640</span><br><span class="line">2641</span><br><span class="line">2642</span><br><span class="line">2643</span><br><span class="line">2644</span><br><span class="line">2645</span><br><span class="line">2646</span><br><span class="line">2647</span><br><span class="line">2648</span><br><span class="line">2649</span><br><span class="line">2650</span><br><span class="line">2651</span><br><span class="line">2652</span><br><span class="line">2653</span><br><span class="line">2654</span><br><span class="line">2655</span><br><span class="line">2656</span><br><span class="line">2657</span><br><span class="line">2658</span><br><span class="line">2659</span><br><span class="line">2660</span><br><span class="line">2661</span><br><span class="line">2662</span><br><span class="line">2663</span><br><span class="line">2664</span><br><span class="line">2665</span><br><span class="line">2666</span><br><span class="line">2667</span><br><span class="line">2668</span><br><span class="line">2669</span><br><span class="line">2670</span><br><span class="line">2671</span><br><span class="line">2672</span><br><span class="line">2673</span><br><span class="line">2674</span><br><span class="line">2675</span><br><span class="line">2676</span><br><span class="line">2677</span><br><span class="line">2678</span><br><span class="line">2679</span><br><span class="line">2680</span><br><span class="line">2681</span><br><span class="line">2682</span><br><span class="line">2683</span><br><span class="line">2684</span><br><span class="line">2685</span><br><span class="line">2686</span><br><span class="line">2687</span><br><span class="line">2688</span><br><span class="line">2689</span><br><span class="line">2690</span><br><span class="line">2691</span><br><span class="line">2692</span><br><span class="line">2693</span><br><span class="line">2694</span><br><span class="line">2695</span><br><span class="line">2696</span><br><span class="line">2697</span><br><span class="line">2698</span><br><span class="line">2699</span><br><span class="line">2700</span><br><span class="line">2701</span><br><span class="line">2702</span><br><span class="line">2703</span><br><span class="line">2704</span><br><span class="line">2705</span><br><span class="line">2706</span><br><span class="line">2707</span><br><span class="line">2708</span><br><span class="line">2709</span><br><span class="line">2710</span><br><span class="line">2711</span><br><span class="line">2712</span><br><span class="line">2713</span><br><span class="line">2714</span><br><span class="line">2715</span><br><span class="line">2716</span><br><span class="line">2717</span><br><span class="line">2718</span><br><span class="line">2719</span><br><span class="line">2720</span><br><span class="line">2721</span><br><span class="line">2722</span><br><span class="line">2723</span><br><span class="line">2724</span><br><span class="line">2725</span><br><span class="line">2726</span><br><span class="line">2727</span><br><span class="line">2728</span><br><span class="line">2729</span><br><span class="line">2730</span><br><span class="line">2731</span><br><span class="line">2732</span><br><span class="line">2733</span><br><span class="line">2734</span><br><span class="line">2735</span><br><span class="line">2736</span><br><span class="line">2737</span><br><span class="line">2738</span><br><span class="line">2739</span><br><span class="line">2740</span><br><span class="line">2741</span><br><span class="line">2742</span><br><span class="line">2743</span><br><span class="line">2744</span><br><span class="line">2745</span><br><span class="line">2746</span><br><span class="line">2747</span><br><span class="line">2748</span><br><span class="line">2749</span><br><span class="line">2750</span><br><span class="line">2751</span><br><span class="line">2752</span><br><span class="line">2753</span><br><span class="line">2754</span><br><span class="line">2755</span><br><span class="line">2756</span><br><span class="line">2757</span><br><span class="line">2758</span><br><span class="line">2759</span><br><span class="line">2760</span><br><span class="line">2761</span><br><span class="line">2762</span><br><span class="line">2763</span><br><span class="line">2764</span><br><span class="line">2765</span><br><span class="line">2766</span><br><span class="line">2767</span><br><span class="line">2768</span><br><span class="line">2769</span><br><span class="line">2770</span><br><span class="line">2771</span><br><span class="line">2772</span><br><span class="line">2773</span><br><span class="line">2774</span><br><span class="line">2775</span><br><span class="line">2776</span><br><span class="line">2777</span><br><span class="line">2778</span><br><span class="line">2779</span><br><span class="line">2780</span><br><span class="line">2781</span><br><span class="line">2782</span><br><span class="line">2783</span><br><span class="line">2784</span><br><span class="line">2785</span><br><span class="line">2786</span><br><span class="line">2787</span><br><span class="line">2788</span><br><span class="line">2789</span><br><span class="line">2790</span><br><span class="line">2791</span><br><span class="line">2792</span><br><span class="line">2793</span><br><span class="line">2794</span><br><span class="line">2795</span><br><span class="line">2796</span><br><span class="line">2797</span><br><span class="line">2798</span><br><span class="line">2799</span><br><span class="line">2800</span><br><span class="line">2801</span><br><span class="line">2802</span><br><span class="line">2803</span><br><span class="line">2804</span><br><span class="line">2805</span><br><span class="line">2806</span><br><span class="line">2807</span><br><span class="line">2808</span><br><span class="line">2809</span><br><span class="line">2810</span><br><span class="line">2811</span><br><span class="line">2812</span><br><span class="line">2813</span><br><span class="line">2814</span><br><span class="line">2815</span><br><span class="line">2816</span><br><span class="line">2817</span><br><span class="line">2818</span><br><span class="line">2819</span><br><span class="line">2820</span><br><span class="line">2821</span><br><span class="line">2822</span><br><span class="line">2823</span><br><span class="line">2824</span><br><span class="line">2825</span><br><span class="line">2826</span><br><span class="line">2827</span><br><span class="line">2828</span><br><span class="line">2829</span><br><span class="line">2830</span><br><span class="line">2831</span><br><span class="line">2832</span><br><span class="line">2833</span><br><span class="line">2834</span><br><span class="line">2835</span><br><span class="line">2836</span><br><span class="line">2837</span><br><span class="line">2838</span><br><span class="line">2839</span><br><span class="line">2840</span><br><span class="line">2841</span><br><span class="line">2842</span><br><span class="line">2843</span><br><span class="line">2844</span><br><span class="line">2845</span><br><span class="line">2846</span><br><span class="line">2847</span><br><span class="line">2848</span><br><span class="line">2849</span><br><span class="line">2850</span><br><span class="line">2851</span><br><span class="line">2852</span><br><span class="line">2853</span><br><span class="line">2854</span><br><span class="line">2855</span><br><span class="line">2856</span><br><span class="line">2857</span><br><span class="line">2858</span><br><span class="line">2859</span><br><span class="line">2860</span><br><span class="line">2861</span><br><span class="line">2862</span><br><span class="line">2863</span><br><span class="line">2864</span><br><span class="line">2865</span><br><span class="line">2866</span><br><span class="line">2867</span><br><span class="line">2868</span><br><span class="line">2869</span><br><span class="line">2870</span><br><span class="line">2871</span><br><span class="line">2872</span><br><span class="line">2873</span><br><span class="line">2874</span><br><span class="line">2875</span><br><span class="line">2876</span><br><span class="line">2877</span><br><span class="line">2878</span><br><span class="line">2879</span><br><span class="line">2880</span><br><span class="line">2881</span><br><span class="line">2882</span><br><span class="line">2883</span><br><span class="line">2884</span><br><span class="line">2885</span><br><span class="line">2886</span><br><span class="line">2887</span><br><span class="line">2888</span><br><span class="line">2889</span><br><span class="line">2890</span><br><span class="line">2891</span><br><span class="line">2892</span><br><span class="line">2893</span><br><span class="line">2894</span><br><span class="line">2895</span><br><span class="line">2896</span><br><span class="line">2897</span><br><span class="line">2898</span><br><span class="line">2899</span><br><span class="line">2900</span><br><span class="line">2901</span><br><span class="line">2902</span><br><span class="line">2903</span><br><span class="line">2904</span><br><span class="line">2905</span><br><span class="line">2906</span><br><span class="line">2907</span><br><span class="line">2908</span><br><span class="line">2909</span><br><span class="line">2910</span><br><span class="line">2911</span><br><span class="line">2912</span><br><span class="line">2913</span><br><span class="line">2914</span><br><span class="line">2915</span><br><span class="line">2916</span><br><span class="line">2917</span><br><span class="line">2918</span><br><span class="line">2919</span><br><span class="line">2920</span><br><span class="line">2921</span><br><span class="line">2922</span><br><span class="line">2923</span><br><span class="line">2924</span><br><span class="line">2925</span><br><span class="line">2926</span><br><span class="line">2927</span><br><span class="line">2928</span><br><span class="line">2929</span><br><span class="line">2930</span><br><span class="line">2931</span><br><span class="line">2932</span><br><span class="line">2933</span><br><span class="line">2934</span><br><span class="line">2935</span><br><span class="line">2936</span><br><span class="line">2937</span><br><span class="line">2938</span><br><span class="line">2939</span><br><span class="line">2940</span><br><span class="line">2941</span><br><span class="line">2942</span><br><span class="line">2943</span><br><span class="line">2944</span><br><span class="line">2945</span><br><span class="line">2946</span><br><span class="line">2947</span><br><span class="line">2948</span><br><span class="line">2949</span><br><span class="line">2950</span><br><span class="line">2951</span><br><span class="line">2952</span><br><span class="line">2953</span><br><span class="line">2954</span><br><span class="line">2955</span><br><span class="line">2956</span><br><span class="line">2957</span><br><span class="line">2958</span><br><span class="line">2959</span><br><span class="line">2960</span><br><span class="line">2961</span><br><span class="line">2962</span><br><span class="line">2963</span><br><span class="line">2964</span><br><span class="line">2965</span><br><span class="line">2966</span><br><span class="line">2967</span><br><span class="line">2968</span><br><span class="line">2969</span><br><span class="line">2970</span><br><span class="line">2971</span><br><span class="line">2972</span><br><span class="line">2973</span><br><span class="line">2974</span><br><span class="line">2975</span><br><span class="line">2976</span><br><span class="line">2977</span><br><span class="line">2978</span><br><span class="line">2979</span><br><span class="line">2980</span><br><span class="line">2981</span><br><span class="line">2982</span><br><span class="line">2983</span><br><span class="line">2984</span><br><span class="line">2985</span><br><span class="line">2986</span><br><span class="line">2987</span><br><span class="line">2988</span><br><span class="line">2989</span><br><span class="line">2990</span><br><span class="line">2991</span><br><span class="line">2992</span><br><span class="line">2993</span><br><span class="line">2994</span><br><span class="line">2995</span><br><span class="line">2996</span><br><span class="line">2997</span><br><span class="line">2998</span><br><span class="line">2999</span><br><span class="line">3000</span><br><span class="line">3001</span><br><span class="line">3002</span><br><span class="line">3003</span><br><span class="line">3004</span><br><span class="line">3005</span><br><span class="line">3006</span><br><span class="line">3007</span><br><span class="line">3008</span><br><span class="line">3009</span><br><span class="line">3010</span><br><span class="line">3011</span><br><span class="line">3012</span><br><span class="line">3013</span><br><span class="line">3014</span><br><span class="line">3015</span><br><span class="line">3016</span><br><span class="line">3017</span><br><span class="line">3018</span><br><span class="line">3019</span><br><span class="line">3020</span><br><span class="line">3021</span><br><span class="line">3022</span><br><span class="line">3023</span><br><span class="line">3024</span><br><span class="line">3025</span><br><span class="line">3026</span><br><span class="line">3027</span><br><span class="line">3028</span><br><span class="line">3029</span><br><span class="line">3030</span><br><span class="line">3031</span><br><span class="line">3032</span><br><span class="line">3033</span><br><span class="line">3034</span><br><span class="line">3035</span><br><span class="line">3036</span><br><span class="line">3037</span><br><span class="line">3038</span><br><span class="line">3039</span><br><span class="line">3040</span><br><span class="line">3041</span><br><span class="line">3042</span><br><span class="line">3043</span><br><span class="line">3044</span><br><span class="line">3045</span><br><span class="line">3046</span><br><span class="line">3047</span><br><span class="line">3048</span><br><span class="line">3049</span><br><span class="line">3050</span><br><span class="line">3051</span><br><span class="line">3052</span><br><span class="line">3053</span><br><span class="line">3054</span><br><span class="line">3055</span><br><span class="line">3056</span><br><span class="line">3057</span><br><span class="line">3058</span><br><span class="line">3059</span><br><span class="line">3060</span><br><span class="line">3061</span><br><span class="line">3062</span><br><span class="line">3063</span><br><span class="line">3064</span><br><span class="line">3065</span><br><span class="line">3066</span><br><span class="line">3067</span><br><span class="line">3068</span><br><span class="line">3069</span><br><span class="line">3070</span><br><span class="line">3071</span><br><span class="line">3072</span><br><span class="line">3073</span><br><span class="line">3074</span><br><span class="line">3075</span><br><span class="line">3076</span><br><span class="line">3077</span><br><span class="line">3078</span><br><span class="line">3079</span><br><span class="line">3080</span><br><span class="line">3081</span><br><span class="line">3082</span><br><span class="line">3083</span><br><span class="line">3084</span><br><span class="line">3085</span><br><span class="line">3086</span><br><span class="line">3087</span><br><span class="line">3088</span><br><span class="line">3089</span><br><span class="line">3090</span><br><span class="line">3091</span><br><span class="line">3092</span><br><span class="line">3093</span><br><span class="line">3094</span><br><span class="line">3095</span><br><span class="line">3096</span><br><span class="line">3097</span><br><span class="line">3098</span><br><span class="line">3099</span><br><span class="line">3100</span><br><span class="line">3101</span><br><span class="line">3102</span><br><span class="line">3103</span><br><span class="line">3104</span><br><span class="line">3105</span><br><span class="line">3106</span><br><span class="line">3107</span><br><span class="line">3108</span><br><span class="line">3109</span><br><span class="line">3110</span><br><span class="line">3111</span><br><span class="line">3112</span><br><span class="line">3113</span><br><span class="line">3114</span><br><span class="line">3115</span><br><span class="line">3116</span><br><span class="line">3117</span><br><span class="line">3118</span><br><span class="line">3119</span><br><span class="line">3120</span><br><span class="line">3121</span><br><span class="line">3122</span><br><span class="line">3123</span><br><span class="line">3124</span><br><span class="line">3125</span><br><span class="line">3126</span><br><span class="line">3127</span><br><span class="line">3128</span><br><span class="line">3129</span><br><span class="line">3130</span><br><span class="line">3131</span><br><span class="line">3132</span><br><span class="line">3133</span><br><span class="line">3134</span><br><span class="line">3135</span><br><span class="line">3136</span><br><span class="line">3137</span><br><span class="line">3138</span><br><span class="line">3139</span><br><span class="line">3140</span><br><span class="line">3141</span><br><span class="line">3142</span><br><span class="line">3143</span><br><span class="line">3144</span><br><span class="line">3145</span><br><span class="line">3146</span><br><span class="line">3147</span><br><span class="line">3148</span><br><span class="line">3149</span><br><span class="line">3150</span><br><span class="line">3151</span><br><span class="line">3152</span><br><span class="line">3153</span><br><span class="line">3154</span><br><span class="line">3155</span><br><span class="line">3156</span><br><span class="line">3157</span><br><span class="line">3158</span><br><span class="line">3159</span><br><span class="line">3160</span><br><span class="line">3161</span><br><span class="line">3162</span><br><span class="line">3163</span><br><span class="line">3164</span><br><span class="line">3165</span><br><span class="line">3166</span><br><span class="line">3167</span><br><span class="line">3168</span><br><span class="line">3169</span><br><span class="line">3170</span><br><span class="line">3171</span><br><span class="line">3172</span><br><span class="line">3173</span><br><span class="line">3174</span><br><span class="line">3175</span><br><span class="line">3176</span><br><span class="line">3177</span><br><span class="line">3178</span><br><span class="line">3179</span><br><span class="line">3180</span><br><span class="line">3181</span><br><span class="line">3182</span><br><span class="line">3183</span><br><span class="line">3184</span><br><span class="line">3185</span><br><span class="line">3186</span><br><span class="line">3187</span><br><span class="line">3188</span><br><span class="line">3189</span><br><span class="line">3190</span><br><span class="line">3191</span><br><span class="line">3192</span><br><span class="line">3193</span><br><span class="line">3194</span><br><span class="line">3195</span><br><span class="line">3196</span><br><span class="line">3197</span><br><span class="line">3198</span><br><span class="line">3199</span><br><span class="line">3200</span><br><span class="line">3201</span><br><span class="line">3202</span><br><span class="line">3203</span><br><span class="line">3204</span><br><span class="line">3205</span><br><span class="line">3206</span><br><span class="line">3207</span><br><span class="line">3208</span><br><span class="line">3209</span><br><span class="line">3210</span><br><span class="line">3211</span><br><span class="line">3212</span><br><span class="line">3213</span><br><span class="line">3214</span><br><span class="line">3215</span><br><span class="line">3216</span><br><span class="line">3217</span><br><span class="line">3218</span><br><span class="line">3219</span><br><span class="line">3220</span><br><span class="line">3221</span><br><span class="line">3222</span><br><span class="line">3223</span><br><span class="line">3224</span><br><span class="line">3225</span><br><span class="line">3226</span><br><span class="line">3227</span><br><span class="line">3228</span><br><span class="line">3229</span><br><span class="line">3230</span><br><span class="line">3231</span><br><span class="line">3232</span><br><span class="line">3233</span><br><span class="line">3234</span><br><span class="line">3235</span><br><span class="line">3236</span><br><span class="line">3237</span><br><span class="line">3238</span><br><span class="line">3239</span><br><span class="line">3240</span><br><span class="line">3241</span><br><span class="line">3242</span><br><span class="line">3243</span><br><span class="line">3244</span><br><span class="line">3245</span><br><span class="line">3246</span><br><span class="line">3247</span><br><span class="line">3248</span><br><span class="line">3249</span><br><span class="line">3250</span><br><span class="line">3251</span><br><span class="line">3252</span><br><span class="line">3253</span><br><span class="line">3254</span><br><span class="line">3255</span><br><span class="line">3256</span><br><span class="line">3257</span><br><span class="line">3258</span><br><span class="line">3259</span><br><span class="line">3260</span><br><span class="line">3261</span><br><span class="line">3262</span><br><span class="line">3263</span><br><span class="line">3264</span><br><span class="line">3265</span><br><span class="line">3266</span><br><span class="line">3267</span><br><span class="line">3268</span><br><span class="line">3269</span><br><span class="line">3270</span><br><span class="line">3271</span><br><span class="line">3272</span><br><span class="line">3273</span><br><span class="line">3274</span><br><span class="line">3275</span><br><span class="line">3276</span><br><span class="line">3277</span><br><span class="line">3278</span><br><span class="line">3279</span><br><span class="line">3280</span><br><span class="line">3281</span><br><span class="line">3282</span><br><span class="line">3283</span><br><span class="line">3284</span><br><span class="line">3285</span><br><span class="line">3286</span><br><span class="line">3287</span><br><span class="line">3288</span><br><span class="line">3289</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Copyright (c) 2014-2015 The Linux Foundation. All rights reserved.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This program is free software; you can redistribute it and/or modify</span></span><br><span class="line"><span class="comment"> * it under the terms of the GNU General Public License version 2 and</span></span><br><span class="line"><span class="comment"> * only version 2 as published by the Free Software Foundation.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This program is distributed in the hope that it will be useful,</span></span><br><span class="line"><span class="comment"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span></span><br><span class="line"><span class="comment"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span></span><br><span class="line"><span class="comment"> * GNU General Public License for more details.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pr_fmt(fmt) <span class="meta-string">"SMB358 %s: "</span> fmt, __func__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/i2c.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/debugfs.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/gpio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/errno.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/delay.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/module.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/interrupt.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/slab.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/power_supply.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/regulator/of_regulator.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/regulator/machine.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/regulator/consumer.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/regulator/driver.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/of.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/of_gpio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/mutex.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/qpnp/qpnp-adc.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/reboot.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bmtfeatures.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CONFIG_FOR_BROBDMOBI_R700</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _SMB358_MASK(BITS, POS) \</span></span><br><span class="line">((<span class="keyword">unsigned</span> <span class="keyword">char</span>)(((<span class="number">1</span> &lt;&lt; (BITS)) - <span class="number">1</span>) &lt;&lt; (POS)))</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SMB358_MASK(LEFT_BIT_POS, RIGHT_BIT_POS) \</span></span><br><span class="line">_SMB358_MASK((LEFT_BIT_POS) - (RIGHT_BIT_POS) + <span class="number">1</span>, \</span><br><span class="line">(RIGHT_BIT_POS))</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Config/Control registers */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_CURRENT_CTRL_REG0x0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_OTH_CURRENT_CTRL_REG0x1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> VARIOUS_FUNC_REG0x2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> VFLOAT_REG0x3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_CTRL_REG0x4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STAT_AND_TIMER_CTRL_REG0x5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_PIN_EN_CTRL_REG0x6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> THERM_A_CTRL_REG0x7</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SYSOK_AND_USB3_REG0x8</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OTHER_CTRL_REG0x9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OTG_TLMN_THERM_REG0xA</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FAULT_INT_REG0xC</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STATUS_INT_REG0xD</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OTG_TLMN_THERM_REG0xA</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Command registers */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CMD_A_REG0x30</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CMD_B_REG0x31</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* IRQ status registers */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IRQ_A_REG0x35</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IRQ_B_REG0x36</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IRQ_C_REG0x37</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IRQ_D_REG0x38</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IRQ_E_REG0x39</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IRQ_F_REG0x3A</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Status registers */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STATUS_C_REG0x3D</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STATUS_D_REG0x3E</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STATUS_E_REG0x3F</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Config bits */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_INHI_EN_MASKBIT(1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_INHI_EN_BITBIT(1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CMD_A_CHG_ENABLE_BITBIT(1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CMD_A_VOLATILE_W_PERM_BITBIT(7)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CMD_A_CHG_SUSP_EN_BITBIT(2)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CMD_A_CHG_SUSP_EN_MASKBIT(2)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CMD_A_OTG_ENABLE_BITBIT(4)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CMD_A_OTG_ENABLE_MASKBIT(4)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CMD_B_CHG_HC_ENABLE_BITBIT(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> USB3_ENABLE_BITBIT(5)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> USB3_ENABLE_MASKBIT(5)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CMD_B_CHG_USB_500_900_ENABLE_BITBIT(1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_CTRL_AUTO_RECHARGE_ENABLE_BIT0x0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_CTRL_CURR_TERM_END_CHG_BIT0x0</span></span><br><span class="line"><span class="comment">//#define CHG_CTRL_BATT_MISSING_DET_THERM_IOSMB358_MASK(5, 4)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_CTRL_BATT_MISSING_DET_THERM_IO 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_CTRL_AUTO_RECHARGE_MASKBIT(7)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_AUTO_RECHARGE_DIS_BITBIT(7)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_CTRL_CURR_TERM_END_MASKBIT(6)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_CTRL_BATT_MISSING_DET_MASKSMB358_MASK(1, 0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_CTRL_BATT_MISSING_DET_MASK1SMB358_MASK(5, 4)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_CTRL_APSD_EN_BITBIT(2)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_CTRL_APSD_EN_MASKBIT(2)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_ITERM_MASK0x07</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_PIN_CTRL_USBCS_REG_BIT0x0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_PIN_CTRL_STATE_REG_BIT0x0</span></span><br><span class="line"><span class="comment">/* This is to select if use external pin EN to control CHG */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_PIN_CTRL_CHG_EN_LOW_PIN_BITSMB358_MASK(6, 5)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_PIN_CTRL_CHG_EN_LOW_REG_BIT0x0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_PIN_CTRL_CHG_EN_MASKSMB358_MASK(6, 5)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_LOW_BATT_THRESHOLD \</span></span><br><span class="line">SMB358_MASK(<span class="number">3</span>, <span class="number">0</span>)</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_PIN_CTRL_USBCS_REG_MASKBIT(4)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_PIN_CTRL_STATE_REG_MASKBIT(3)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_PIN_CTRL_APSD_IRQ_BITBIT(1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_PIN_CTRL_APSD_IRQ_MASKBIT(1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_PIN_CTRL_CHG_ERR_IRQ_BITBIT(2)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_PIN_CTRL_CHG_ERR_IRQ_MASKBIT(2)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> VARIOUS_FUNC_USB_SUSP_EN_REG_BITBIT(6)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> VARIOUS_FUNC_USB_SUSP_MASKBIT(6)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FAULT_INT_HOT_COLD_HARD_BITBIT(7)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FAULT_INT_HOT_COLD_SOFT_BITBIT(6)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FAULT_INT_INPUT_OV_BITBIT(3)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FAULT_INT_INPUT_UV_BITBIT(2)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FAULT_INT_AICL_COMPLETE_BITBIT(1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STATUS_INT_CHG_TIMEOUT_BITBIT(7)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STATUS_INT_OTG_DETECT_BITBIT(6)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STATUS_INT_BATT_OV_BITBIT(5)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STATUS_INT_CHGING_BITBIT(4)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STATUS_INT_CHG_INHI_BITBIT(3)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STATUS_INT_INOK_BITBIT(2)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STATUS_INT_MISSING_BATT_BITBIT(1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STATUS_INT_LOW_BATT_BITBIT(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> THERM_A_THERM_MONITOR_EN_BITBIT(4)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> THERM_A_THERM_MONITOR_EN_MASKBIT(4)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> VFLOAT_MASK0x3F</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_OTG_CURRENT_LIMIT_REG_BIT BIT(2) <span class="comment">// 500mA </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_OTG_CURRENT_LIMIT_REG_MASK BIT(2) </span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* IRQ status bits */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IRQ_A_HOT_HARD_BITBIT(6)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IRQ_A_COLD_HARD_BITBIT(4)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IRQ_A_HOT_SOFT_BITBIT(2)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IRQ_A_COLD_SOFT_BITBIT(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IRQ_B_BATT_MISSING_BITBIT(4)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IRQ_B_BATT_LOW_BITBIT(2)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IRQ_B_BATT_OV_BITBIT(6)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IRQ_B_PRE_FAST_CHG_BITBIT(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IRQ_C_TAPER_CHG_BITBIT(2)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IRQ_C_TERM_BITBIT(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IRQ_C_INT_OVER_TEMP_BITBIT(6)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IRQ_D_CHG_TIMEOUT_BIT(BIT(0) | BIT(2))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IRQ_D_AICL_DONE_BITBIT(4)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IRQ_D_APSD_COMPLETEBIT(6)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IRQ_E_INPUT_UV_BITBIT(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IRQ_E_INPUT_OV_BITBIT(2)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IRQ_E_AFVC_ACTIVE                       BIT(4)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IRQ_F_OTG_VALID_BITBIT(2)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IRQ_F_OTG_BATT_FAIL_BITBIT(4)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IRQ_F_OTG_OC_BITBIT(6)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IRQ_F_POWER_OKBIT(0)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Status  bits */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STATUS_C_CHARGING_MASKSMB358_MASK(2, 1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STATUS_C_FAST_CHARGINGBIT(2)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STATUS_C_PRE_CHARGINGBIT(1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STATUS_C_TAPER_CHARGINGSMB358_MASK(2, 1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STATUS_C_CHG_ERR_STATUS_BITBIT(6)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STATUS_C_CHG_ENABLE_STATUS_BITBIT(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STATUS_C_CHG_HOLD_OFF_BITBIT(3)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STATUS_D_CHARGING_PORT_MASK \</span></span><br><span class="line">SMB358_MASK(<span class="number">3</span>, <span class="number">0</span>)</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STATUS_D_PORT_ACA_DOCKBIT(3)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STATUS_D_PORT_SDPBIT(2)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STATUS_D_PORT_DCPBIT(1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STATUS_D_PORT_CDPBIT(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STATUS_D_PORT_OTHERSMB358_MASK(1, 0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STATUS_D_PORT_ACA_A(BIT(2) | BIT(0))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STATUS_D_PORT_ACA_BSMB358_MASK(2, 1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STATUS_D_PORT_ACA_CSMB358_MASK(2, 0)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_SYSOK_AND_USB3_HARD_TEMP_LIMITS BIT(2)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_SYSOK_AND_USB3_HARD_TEMP_LIMITS_MASK BIT(2)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* constants */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> USB2_MIN_CURRENT_MA100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> USB2_MAX_CURRENT_MA500</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> USB3_MIN_CURRENT_MA150</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> USB3_MAX_CURRENT_MA900</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AC_CHG_CURRENT_MASK0x70</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AC_CHG_CURRENT_SHIFT4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SMB358_IRQ_REG_COUNT6</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SMB358_FAST_CHG_MIN_MA200</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SMB358_FAST_CHG_MAX_MA2000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SMB358_FAST_CHG_SHIFT5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SMB_FAST_CHG_CURRENT_MASK0xE0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SMB358_DEFAULT_BATT_CAPACITY50</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SMB358_BATT_GOOD_THRE_2P50x1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ADC_BUFF_LEN100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PERCENT_BUFF_LEN100</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> adc_buff[ADC_BUFF_LEN] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> percent_buff[PERCENT_BUFF_LEN] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">enum</span> &#123;</span><br><span class="line">USER= BIT(<span class="number">0</span>),</span><br><span class="line">THERMAL= BIT(<span class="number">1</span>),</span><br><span class="line">CURRENT= BIT(<span class="number">2</span>),</span><br><span class="line">SOC= BIT(<span class="number">3</span>),</span><br><span class="line">FAKE_BATTERY= BIT(<span class="number">4</span>),</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">smb358_regulator</span> &#123;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">regulator_desc</span><span class="title">rdesc</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">regulator_dev</span>*<span class="title">rdev</span>;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">smb358_charger</span> &#123;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">i2c_client</span>*<span class="title">client</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">device</span>*<span class="title">dev</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span>inhibit_disabled;</span><br><span class="line"><span class="keyword">bool</span>recharge_disabled;</span><br><span class="line"><span class="keyword">int</span>recharge_mv;</span><br><span class="line"><span class="keyword">bool</span>iterm_disabled;</span><br><span class="line"><span class="keyword">int</span>iterm_ma;</span><br><span class="line"><span class="keyword">int</span>vfloat_mv;</span><br><span class="line"><span class="keyword">int</span>chg_valid_gpio;</span><br><span class="line"><span class="keyword">int</span>chg_valid_act_low;</span><br><span class="line"><span class="keyword">int</span>chg_present;</span><br><span class="line"><span class="keyword">int</span>fake_battery_soc;</span><br><span class="line"><span class="keyword">bool</span>chg_autonomous_mode;</span><br><span class="line"><span class="keyword">bool</span>disable_apsd;</span><br><span class="line"><span class="keyword">bool</span>using_pmic_therm;</span><br><span class="line"><span class="keyword">bool</span>pmic_vbat_sns;</span><br><span class="line"><span class="keyword">bool</span>battery_missing;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>*bms_psy_name;</span><br><span class="line"><span class="keyword">bool</span>resume_completed;</span><br><span class="line"><span class="keyword">bool</span>irq_waiting;</span><br><span class="line"><span class="keyword">bool</span>bms_controlled_charging;</span><br><span class="line"><span class="keyword">bool</span>skip_usb_suspend_for_fake_battery;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">mutex</span><span class="title">read_write_lock</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">mutex</span><span class="title">path_suspend_lock</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">mutex</span><span class="title">irq_complete</span>;</span></span><br><span class="line">u8irq_cfg_mask[<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span>irq_gpio;</span><br><span class="line"><span class="keyword">int</span>charging_disabled;</span><br><span class="line"><span class="keyword">int</span>fastchg_current_max_ma;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span>cool_bat_ma;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span>warm_bat_ma;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span>cool_bat_mv;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span>warm_bat_mv;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span>connected_rid;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* debugfs related */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> defined(CONFIG_DEBUG_FS)</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">dentry</span>*<span class="title">debug_root</span>;</span></span><br><span class="line">u32peek_poke_address;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="comment">/* status tracking */</span></span><br><span class="line"><span class="keyword">bool</span>batt_full;</span><br><span class="line"><span class="keyword">bool</span>batt_hot;</span><br><span class="line"><span class="keyword">bool</span>batt_cold;</span><br><span class="line"><span class="keyword">bool</span>batt_warm;</span><br><span class="line"><span class="keyword">bool</span>batt_cool;</span><br><span class="line"><span class="keyword">bool</span>jeita_supported;</span><br><span class="line"><span class="keyword">int</span>charging_disabled_status;</span><br><span class="line"><span class="keyword">int</span>usb_suspended;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* power supply */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">power_supply</span>*<span class="title">usb_psy</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">power_supply</span>*<span class="title">bms_psy</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">power_supply</span><span class="title">batt_psy</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* otg 5V regulator */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">smb358_regulator</span><span class="title">otg_vreg</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* adc_tm paramters */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">qpnp_vadc_chip</span>*<span class="title">vadc_dev</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">qpnp_adc_tm_chip</span>*<span class="title">adc_tm_dev</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">qpnp_adc_tm_btm_param</span><span class="title">adc_param</span>;</span></span><br><span class="line"><span class="keyword">int</span>cold_bat_decidegc;</span><br><span class="line"><span class="keyword">int</span>hot_bat_decidegc;</span><br><span class="line"><span class="keyword">int</span>cool_bat_decidegc;</span><br><span class="line"><span class="keyword">int</span>warm_bat_decidegc;</span><br><span class="line"><span class="keyword">int</span>bat_present_decidegc;</span><br><span class="line"><span class="comment">/* i2c pull up regulator */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">regulator</span>*<span class="title">vcc_i2c</span>;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">smb_irq_info</span> &#123;</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>*name;</span><br><span class="line"><span class="keyword">int</span>(*smb_irq)(struct smb358_charger *chip,</span><br><span class="line">u8 rt_stat);</span><br><span class="line"><span class="keyword">int</span>high;</span><br><span class="line"><span class="keyword">int</span>low;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">irq_handler_info</span> &#123;</span></span><br><span class="line">u8stat_reg;</span><br><span class="line">u8val;</span><br><span class="line">u8prev_val;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">smb_irq_info</span><span class="title">irq_info</span>[4];</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> chg_current[] = &#123;</span><br><span class="line"><span class="number">300</span>, <span class="number">500</span>, <span class="number">700</span>, <span class="number">1000</span>, <span class="number">1200</span>, <span class="number">1500</span>, <span class="number">1800</span>, <span class="number">2000</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> fast_chg_current[] = &#123;</span><br><span class="line"><span class="number">200</span>, <span class="number">450</span>, <span class="number">600</span>, <span class="number">900</span>, <span class="number">1300</span>, <span class="number">1500</span>, <span class="number">1800</span>, <span class="number">2000</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* add supplied to "bms" function */</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">char</span> *pm_batt_supplied_to[] = &#123;</span><br><span class="line"><span class="string">"bms"</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//copy from MDM9X25</span></span><br><span class="line"><span class="comment">//index is the percent% of battery capacity ,so index 0 is 0, index 101 is +inf</span></span><br><span class="line"><span class="comment">//value is in mV</span></span><br><span class="line"><span class="comment">//this battery's nominal capacity is:2000mAh,step is 20mAh</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> LCD_SECOND_SECHEME</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> r700_chg_bat_voltage[<span class="number">102</span>]=</span><br><span class="line">&#123;</span><br><span class="line"><span class="number">0</span>,</span><br><span class="line"><span class="number">3452</span>,<span class="number">3466</span>,<span class="number">3480</span>,<span class="number">3494</span>,<span class="number">3508</span>,<span class="number">3522</span>,<span class="number">3536</span>,<span class="number">3550</span>,<span class="number">3564</span>,<span class="number">3578</span>,</span><br><span class="line"><span class="number">3592</span>,<span class="number">3606</span>,<span class="number">3620</span>,<span class="number">3634</span>,<span class="number">3650</span>,<span class="number">3654</span>,<span class="number">3658</span>,<span class="number">3662</span>,<span class="number">3666</span>,<span class="number">3670</span>,</span><br><span class="line"><span class="number">3674</span>,<span class="number">3678</span>,<span class="number">3682</span>,<span class="number">3686</span>,<span class="number">3690</span>,<span class="number">3694</span>,<span class="number">3698</span>,<span class="number">3702</span>,<span class="number">3706</span>,<span class="number">3710</span>,</span><br><span class="line"><span class="number">3714</span>,<span class="number">3718</span>,<span class="number">3722</span>,<span class="number">3726</span>,<span class="number">3730</span>,<span class="number">3734</span>,<span class="number">3738</span>,<span class="number">3742</span>,<span class="number">3746</span>,<span class="number">3750</span>,</span><br><span class="line"><span class="number">3756</span>,<span class="number">3762</span>,<span class="number">3768</span>,<span class="number">3774</span>,<span class="number">3780</span>,<span class="number">3786</span>,<span class="number">3792</span>,<span class="number">3798</span>,<span class="number">3804</span>,<span class="number">3810</span>,</span><br><span class="line"><span class="number">3816</span>,<span class="number">3822</span>,<span class="number">3828</span>,<span class="number">3834</span>,<span class="number">3840</span>,<span class="number">3846</span>,<span class="number">3852</span>,<span class="number">3858</span>,<span class="number">3864</span>,<span class="number">3870</span>,</span><br><span class="line"><span class="number">3829</span>,<span class="number">3836</span>,<span class="number">3844</span>,<span class="number">3850</span>,<span class="number">3900</span>,<span class="number">3912</span>,<span class="number">3924</span>,<span class="number">3936</span>,<span class="number">3948</span>,<span class="number">3960</span>,</span><br><span class="line"><span class="number">3972</span>,<span class="number">3984</span>,<span class="number">3996</span>,<span class="number">4008</span>,<span class="number">4020</span>,<span class="number">4032</span>,<span class="number">4044</span>,<span class="number">4056</span>,<span class="number">4068</span>,<span class="number">4080</span>,</span><br><span class="line"><span class="number">4092</span>,<span class="number">4104</span>,<span class="number">4116</span>,<span class="number">4128</span>,<span class="number">4140</span>,<span class="number">4152</span>,<span class="number">4164</span>,<span class="number">4176</span>,<span class="number">4188</span>,<span class="number">4200</span>,</span><br><span class="line"><span class="number">4206</span>,<span class="number">4212</span>,<span class="number">4218</span>,<span class="number">4224</span>,<span class="number">4230</span>,<span class="number">4236</span>,<span class="number">4242</span>,<span class="number">4248</span>,<span class="number">4254</span>,<span class="number">4260</span>,</span><br><span class="line">LONG_MAX</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> r700_dischg_bat_voltage[<span class="number">102</span>]=</span><br><span class="line">&#123;</span><br><span class="line"><span class="number">0</span>,</span><br><span class="line"><span class="number">3314</span>,<span class="number">3328</span>,<span class="number">3342</span>,<span class="number">3356</span>,<span class="number">3370</span>,<span class="number">3384</span>,<span class="number">3398</span>,<span class="number">3412</span>,<span class="number">3424</span>,<span class="number">3438</span>,</span><br><span class="line"><span class="number">3452</span>,<span class="number">3466</span>,<span class="number">3480</span>,<span class="number">3494</span>,<span class="number">3508</span>,<span class="number">3522</span>,<span class="number">3536</span>,<span class="number">3550</span>,<span class="number">3564</span>,<span class="number">3578</span>,</span><br><span class="line"><span class="number">3592</span>,<span class="number">3606</span>,<span class="number">3620</span>,<span class="number">3634</span>,<span class="number">3650</span>,<span class="number">3654</span>,<span class="number">3658</span>,<span class="number">3662</span>,<span class="number">3666</span>,<span class="number">3670</span>,</span><br><span class="line"><span class="number">3674</span>,<span class="number">3678</span>,<span class="number">3682</span>,<span class="number">3686</span>,<span class="number">3690</span>,<span class="number">3694</span>,<span class="number">3698</span>,<span class="number">3702</span>,<span class="number">3706</span>,<span class="number">3710</span>,</span><br><span class="line"><span class="number">3714</span>,<span class="number">3718</span>,<span class="number">3722</span>,<span class="number">3726</span>,<span class="number">3730</span>,<span class="number">3734</span>,<span class="number">3738</span>,<span class="number">3742</span>,<span class="number">3746</span>,<span class="number">3750</span>,</span><br><span class="line"><span class="number">3756</span>,<span class="number">3762</span>,<span class="number">3768</span>,<span class="number">3774</span>,<span class="number">3780</span>,<span class="number">3786</span>,<span class="number">3792</span>,<span class="number">3798</span>,<span class="number">3804</span>,<span class="number">3810</span>,</span><br><span class="line"><span class="number">3816</span>,<span class="number">3822</span>,<span class="number">3828</span>,<span class="number">3834</span>,<span class="number">3840</span>,<span class="number">3846</span>,<span class="number">3852</span>,<span class="number">3858</span>,<span class="number">3864</span>,<span class="number">3870</span>,</span><br><span class="line"><span class="number">3829</span>,<span class="number">3836</span>,<span class="number">3844</span>,<span class="number">3850</span>,<span class="number">3900</span>,<span class="number">3912</span>,<span class="number">3924</span>,<span class="number">3936</span>,<span class="number">3948</span>,<span class="number">3960</span>,</span><br><span class="line"><span class="number">3972</span>,<span class="number">3984</span>,<span class="number">3996</span>,<span class="number">4008</span>,<span class="number">4020</span>,<span class="number">4032</span>,<span class="number">4044</span>,<span class="number">4056</span>,<span class="number">4068</span>,<span class="number">4080</span>,</span><br><span class="line"><span class="number">4092</span>,<span class="number">4104</span>,<span class="number">4116</span>,<span class="number">4128</span>,<span class="number">4140</span>,<span class="number">4152</span>,<span class="number">4164</span>,<span class="number">4176</span>,<span class="number">4188</span>,<span class="number">4200</span>,</span><br><span class="line">LONG_MAX</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> r700_chg_bat_voltage[<span class="number">102</span>]=</span><br><span class="line">&#123;</span><br><span class="line"><span class="number">0</span>,</span><br><span class="line"><span class="number">3406</span>,<span class="number">3489</span>,<span class="number">3552</span>,<span class="number">3606</span>,<span class="number">3639</span>,<span class="number">3655</span>,<span class="number">3670</span>,<span class="number">3687</span>,<span class="number">3708</span>,<span class="number">3727</span>,</span><br><span class="line"><span class="number">3736</span>,<span class="number">3744</span>,<span class="number">3758</span>,<span class="number">3767</span>,<span class="number">3777</span>,<span class="number">3790</span>,<span class="number">3798</span>,<span class="number">3806</span>,<span class="number">3816</span>,<span class="number">3825</span>,</span><br><span class="line"><span class="number">3831</span>,<span class="number">3839</span>,<span class="number">3845</span>,<span class="number">3848</span>,<span class="number">3850</span>,<span class="number">3855</span>,<span class="number">3856</span>,<span class="number">3857</span>,<span class="number">3860</span>,<span class="number">3862</span>,</span><br><span class="line"><span class="number">3863</span>,<span class="number">3865</span>,<span class="number">3866</span>,<span class="number">3867</span>,<span class="number">3869</span>,<span class="number">3870</span>,<span class="number">3873</span>,<span class="number">3875</span>,<span class="number">3876</span>,<span class="number">3878</span>,</span><br><span class="line"><span class="number">3880</span>,<span class="number">3882</span>,<span class="number">3885</span>,<span class="number">3888</span>,<span class="number">3889</span>,<span class="number">3890</span>,<span class="number">3894</span>,<span class="number">3897</span>,<span class="number">3899</span>,<span class="number">3903</span>,</span><br><span class="line"><span class="number">3905</span>,<span class="number">3909</span>,<span class="number">3914</span>,<span class="number">3919</span>,<span class="number">3923</span>,<span class="number">3927</span>,<span class="number">3929</span>,<span class="number">3934</span>,<span class="number">3938</span>,<span class="number">3943</span>,</span><br><span class="line"><span class="number">3948</span>,<span class="number">3953</span>,<span class="number">3957</span>,<span class="number">3962</span>,<span class="number">3968</span>,<span class="number">3972</span>,<span class="number">3978</span>,<span class="number">3982</span>,<span class="number">3987</span>,<span class="number">3992</span>,</span><br><span class="line"><span class="number">3997</span>,<span class="number">4006</span>,<span class="number">4012</span>,<span class="number">4017</span>,<span class="number">4024</span>,<span class="number">4031</span>,<span class="number">4036</span>,<span class="number">4046</span>,<span class="number">4051</span>,<span class="number">4061</span>,</span><br><span class="line"><span class="number">4065</span>,<span class="number">4075</span>,<span class="number">4084</span>,<span class="number">4090</span>,<span class="number">4100</span>,<span class="number">4109</span>,<span class="number">4118</span>,<span class="number">4129</span>,<span class="number">4138</span>,<span class="number">4149</span>,</span><br><span class="line"><span class="number">4158</span>,<span class="number">4168</span>,<span class="number">4170</span>,<span class="number">4180</span>,<span class="number">4182</span>,<span class="number">4184</span>,<span class="number">4186</span>,<span class="number">4188</span>,<span class="number">4190</span>,<span class="number">4200</span>,</span><br><span class="line">LONG_MAX</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> r700_dischg_bat_voltage[<span class="number">102</span>]=</span><br><span class="line">&#123;</span><br><span class="line"><span class="number">0</span>,</span><br><span class="line"><span class="number">3300</span>,<span class="number">3406</span>,<span class="number">3450</span>,<span class="number">3469</span>,<span class="number">3484</span>,<span class="number">3503</span>,<span class="number">3522</span>,<span class="number">3538</span>,<span class="number">3554</span>,<span class="number">3570</span>,</span><br><span class="line"><span class="number">3582</span>,<span class="number">3591</span>,<span class="number">3601</span>,<span class="number">3611</span>,<span class="number">3621</span>,<span class="number">3627</span>,<span class="number">3635</span>,<span class="number">3640</span>,<span class="number">3645</span>,<span class="number">3650</span>,</span><br><span class="line"><span class="number">3655</span>,<span class="number">3660</span>,<span class="number">3662</span>,<span class="number">3665</span>,<span class="number">3670</span>,<span class="number">3670</span>,<span class="number">3675</span>,<span class="number">3675</span>,<span class="number">3678</span>,<span class="number">3679</span>,</span><br><span class="line"><span class="number">3683</span>,<span class="number">3684</span>,<span class="number">3684</span>,<span class="number">3688</span>,<span class="number">3689</span>,<span class="number">3689</span>,<span class="number">3693</span>,<span class="number">3694</span>,<span class="number">3694</span>,<span class="number">3697</span>,</span><br><span class="line"><span class="number">3699</span>,<span class="number">3699</span>,<span class="number">3701</span>,<span class="number">3704</span>,<span class="number">3704</span>,<span class="number">3709</span>,<span class="number">3709</span>,<span class="number">3714</span>,<span class="number">3714</span>,<span class="number">3719</span>,</span><br><span class="line"><span class="number">3723</span>,<span class="number">3724</span>,<span class="number">3728</span>,<span class="number">3733</span>,<span class="number">3738</span>,<span class="number">3743</span>,<span class="number">3748</span>,<span class="number">3750</span>,<span class="number">3754</span>,<span class="number">3761</span>,</span><br><span class="line"><span class="number">3766</span>,<span class="number">3772</span>,<span class="number">3777</span>,<span class="number">3782</span>,<span class="number">3787</span>,<span class="number">3797</span>,<span class="number">3802</span>,<span class="number">3806</span>,<span class="number">3816</span>,<span class="number">3821</span>,</span><br><span class="line"><span class="number">3829</span>,<span class="number">3836</span>,<span class="number">3844</span>,<span class="number">3850</span>,<span class="number">3860</span>,<span class="number">3865</span>,<span class="number">3875</span>,<span class="number">3880</span>,<span class="number">3890</span>,<span class="number">3898</span>,</span><br><span class="line"><span class="number">3904</span>,<span class="number">3914</span>,<span class="number">3923</span>,<span class="number">3929</span>,<span class="number">3938</span>,<span class="number">3948</span>,<span class="number">3958</span>,<span class="number">3968</span>,<span class="number">3978</span>,<span class="number">3987</span>,</span><br><span class="line"><span class="number">3997</span>,<span class="number">4007</span>,<span class="number">4017</span>,<span class="number">4026</span>,<span class="number">4036</span>,<span class="number">4050</span>,<span class="number">4061</span>,<span class="number">4075</span>,<span class="number">4090</span>,<span class="number">4129</span>,</span><br><span class="line">LONG_MAX</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span>  <span class="keyword">int</span> <span class="title">bat_get_chg_cap_percent</span><span class="params">(<span class="keyword">int</span> bat_vol)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span>  <span class="keyword">int</span> <span class="title">bat_get_dischg_cap_percent</span><span class="params">(<span class="keyword">int</span> bat_vol)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">batt_avg_percent</span><span class="params">(<span class="keyword">int</span> percent)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">batt_avg_adc</span><span class="params">(<span class="keyword">int</span> bat_voltage)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span>  <span class="keyword">int</span> <span class="title">bat_get_chg_cap_percent</span><span class="params">(<span class="keyword">int</span> bat_vol)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">     <span class="keyword">static</span> <span class="keyword">int</span> last_percent =<span class="number">0</span> ;</span><br><span class="line">    <span class="keyword">if</span>( bat_vol &lt; <span class="number">0</span>)</span><br><span class="line">        bat_vol = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (bat_vol &gt; r700_chg_bat_voltage[<span class="number">100</span>])</span><br><span class="line">        bat_vol = r700_chg_bat_voltage[<span class="number">100</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//calculate percent</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( bat_vol &lt; r700_chg_bat_voltage[last_percent])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>( bat_vol &lt; r700_chg_bat_voltage[last_percent])</span><br><span class="line">            last_percent--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>( bat_vol &gt;= r700_chg_bat_voltage[last_percent+<span class="number">1</span>])</span><br><span class="line">    &#123;</span><br><span class="line">        last_percent++;</span><br><span class="line">         <span class="keyword">while</span>( r700_chg_bat_voltage[last_percent+<span class="number">1</span>] &lt;= bat_vol)</span><br><span class="line">         &#123;</span><br><span class="line">            last_percent++;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">if</span>(last_percent &gt; <span class="number">99</span>)</span><br><span class="line">last_percent = <span class="number">99</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//printk("bat_vol = %d , r700_chg_bat_voltage = %d\n",bat_vol,last_percent);</span></span><br><span class="line">    <span class="keyword">return</span> last_percent;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span>  <span class="keyword">int</span> <span class="title">bat_get_dischg_cap_percent</span><span class="params">(<span class="keyword">int</span> bat_vol)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> last_percent = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>( bat_vol &lt; <span class="number">0</span>)</span><br><span class="line">        bat_vol = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (bat_vol &gt; r700_dischg_bat_voltage[<span class="number">100</span>])</span><br><span class="line">        bat_vol = r700_dischg_bat_voltage[<span class="number">100</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//calculate percent</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( bat_vol &lt; r700_dischg_bat_voltage[last_percent])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>( bat_vol &lt; r700_dischg_bat_voltage[last_percent])</span><br><span class="line">            last_percent--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>( bat_vol &gt;= r700_dischg_bat_voltage[last_percent+<span class="number">1</span>])</span><br><span class="line">    &#123;</span><br><span class="line">        last_percent++;</span><br><span class="line">         <span class="keyword">while</span>( r700_dischg_bat_voltage[last_percent+<span class="number">1</span>] &lt;= bat_vol)</span><br><span class="line">&#123;</span><br><span class="line">            last_percent++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(last_percent &gt; <span class="number">100</span>)</span><br><span class="line">last_percent = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//printk("bat_vol = %d , r700_dischg_bat_voltage = %d\n",bat_vol,last_percent);</span></span><br><span class="line">    <span class="keyword">return</span> last_percent;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">batt_avg_adc</span><span class="params">(<span class="keyword">int</span> bat_voltage)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">int</span> stop = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;ADC_BUFF_LEN; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (adc_buff[i] == <span class="number">0</span>) &#123;</span><br><span class="line">adc_buff[i] = bat_voltage;</span><br><span class="line">stop = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">sum += adc_buff[i];</span><br><span class="line"><span class="keyword">if</span> (stop)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (i &gt;= ADC_BUFF_LEN<span class="number">-1</span>) &#123;</span><br><span class="line">memmove(adc_buff, adc_buff+<span class="number">1</span>, (ADC_BUFF_LEN<span class="number">-1</span>)*<span class="keyword">sizeof</span>(adc_buff[<span class="number">0</span>]));</span><br><span class="line">adc_buff[ADC_BUFF_LEN<span class="number">-1</span>] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> (sum/(i+<span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">batt_avg_percent</span><span class="params">(<span class="keyword">int</span> percent)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">int</span> stop = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;PERCENT_BUFF_LEN; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (percent_buff[i] == <span class="number">0</span>) &#123;</span><br><span class="line">percent_buff[i] = percent;</span><br><span class="line">stop = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">sum += percent_buff[i];</span><br><span class="line"><span class="keyword">if</span> (stop)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (i &gt;= PERCENT_BUFF_LEN<span class="number">-1</span>) &#123;</span><br><span class="line">memmove(percent_buff, percent_buff+<span class="number">1</span>, (PERCENT_BUFF_LEN<span class="number">-1</span>)*<span class="keyword">sizeof</span>(percent_buff[<span class="number">0</span>]));</span><br><span class="line">percent_buff[PERCENT_BUFF_LEN<span class="number">-1</span>] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> (sum/(i+<span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> __smb358_read_reg(struct smb358_charger *chip, u8 reg, u8 *val)</span><br><span class="line">&#123;</span><br><span class="line">s32 ret;</span><br><span class="line"></span><br><span class="line">ret = i2c_smbus_read_byte_data(chip-&gt;client, reg);</span><br><span class="line"><span class="keyword">if</span> (ret &lt; <span class="number">0</span>) &#123;</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"i2c read fail: can't read from %02x: %d\n"</span>, reg, ret);</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">*val = ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> __smb358_write_reg(struct smb358_charger *chip, <span class="keyword">int</span> reg, u8 val)</span><br><span class="line">&#123;</span><br><span class="line">s32 ret;</span><br><span class="line"></span><br><span class="line">ret = i2c_smbus_write_byte_data(chip-&gt;client, reg, val);</span><br><span class="line"><span class="keyword">if</span> (ret &lt; <span class="number">0</span>) &#123;</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"i2c write fail: can't write %02x to %02x: %d\n"</span>,</span><br><span class="line">val, reg, ret);</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">smb358_read_reg</span><span class="params">(struct smb358_charger *chip, <span class="keyword">int</span> reg,</span></span></span><br><span class="line"><span class="function"><span class="params">u8 *val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rc;</span><br><span class="line"></span><br><span class="line">mutex_lock(&amp;chip-&gt;read_write_lock);</span><br><span class="line">rc = __smb358_read_reg(chip, reg, val);</span><br><span class="line">mutex_unlock(&amp;chip-&gt;read_write_lock);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">smb358_write_reg</span><span class="params">(struct smb358_charger *chip, <span class="keyword">int</span> reg,</span></span></span><br><span class="line"><span class="function"><span class="params">u8 val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rc;</span><br><span class="line"></span><br><span class="line">mutex_lock(&amp;chip-&gt;read_write_lock);</span><br><span class="line">rc = __smb358_write_reg(chip, reg, val);</span><br><span class="line">mutex_unlock(&amp;chip-&gt;read_write_lock);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">smb358_masked_write</span><span class="params">(struct smb358_charger *chip, <span class="keyword">int</span> reg,</span></span></span><br><span class="line"><span class="function"><span class="params">u8 mask, u8 val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">s32 rc;</span><br><span class="line">u8 temp;</span><br><span class="line"></span><br><span class="line">mutex_lock(&amp;chip-&gt;read_write_lock);</span><br><span class="line">rc = __smb358_read_reg(chip, reg, &amp;temp);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"smb358_read_reg Failed: reg=%03X, rc=%d\n"</span>, reg, rc);</span><br><span class="line"><span class="keyword">goto</span> out;</span><br><span class="line">&#125;</span><br><span class="line">temp &amp;= ~mask;</span><br><span class="line">temp |= val &amp; mask;</span><br><span class="line">rc = __smb358_write_reg(chip, reg, temp);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"smb358_write Failed: reg=%03X, rc=%d\n"</span>, reg, rc);</span><br><span class="line">&#125;</span><br><span class="line">out:</span><br><span class="line">mutex_unlock(&amp;chip-&gt;read_write_lock);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">smb358_enable_volatile_writes</span><span class="params">(struct smb358_charger *chip)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rc;</span><br><span class="line"></span><br><span class="line">rc = smb358_masked_write(chip, CMD_A_REG, CMD_A_VOLATILE_W_PERM_BIT,</span><br><span class="line">CMD_A_VOLATILE_W_PERM_BIT);</span><br><span class="line"><span class="keyword">if</span> (rc)</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't write VOLATILE_W_PERM_BIT rc=%d\n"</span>,</span><br><span class="line">rc);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">smb358_fastchg_current_set</span><span class="params">(struct smb358_charger *chip,</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">unsigned</span> <span class="keyword">int</span> fastchg_current)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((fastchg_current &lt; SMB358_FAST_CHG_MIN_MA) ||</span><br><span class="line">(fastchg_current &gt;  SMB358_FAST_CHG_MAX_MA)) &#123;</span><br><span class="line">dev_dbg(chip-&gt;dev, <span class="string">"bad fastchg current mA=%d asked to set\n"</span>,</span><br><span class="line">fastchg_current);</span><br><span class="line"><span class="keyword">return</span> -EINVAL;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = ARRAY_SIZE(fast_chg_current) - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line"><span class="keyword">if</span> (fast_chg_current[i] &lt;= fastchg_current)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (i &lt; <span class="number">0</span>) &#123;</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Invalid current setting %dmA\n"</span>,</span><br><span class="line">fastchg_current);</span><br><span class="line">i = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">i = i &lt;&lt; SMB358_FAST_CHG_SHIFT;</span><br><span class="line">dev_dbg(chip-&gt;dev, <span class="string">"fastchg limit=%d setting %02x\n"</span>,</span><br><span class="line">fastchg_current, i);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> smb358_masked_write(chip, CHG_CURRENT_CTRL_REG,</span><br><span class="line">SMB_FAST_CHG_CURRENT_MASK, i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIN_FLOAT_MV3500</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_FLOAT_MV4500</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> VFLOAT_STEP_MV20</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> VFLOAT_4350MV4350</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">smb358_float_voltage_set</span><span class="params">(struct smb358_charger *chip, <span class="keyword">int</span> vfloat_mv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">u8 temp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((vfloat_mv &lt; MIN_FLOAT_MV) || (vfloat_mv &gt; MAX_FLOAT_MV)) &#123;</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"bad float voltage mv =%d asked to set\n"</span>,</span><br><span class="line">vfloat_mv);</span><br><span class="line"><span class="keyword">return</span> -EINVAL;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (VFLOAT_4350MV == vfloat_mv)</span><br><span class="line">temp = <span class="number">0x2B</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (vfloat_mv &gt; VFLOAT_4350MV)</span><br><span class="line">temp = (vfloat_mv - MIN_FLOAT_MV) / VFLOAT_STEP_MV + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">temp = (vfloat_mv - MIN_FLOAT_MV) / VFLOAT_STEP_MV;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> smb358_masked_write(chip, VFLOAT_REG, VFLOAT_MASK, temp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_ITERM_30MA0x00</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_ITERM_40MA0x01</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_ITERM_60MA0x02</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_ITERM_80MA0x03</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_ITERM_100MA0x04</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_ITERM_125MA0x05</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_ITERM_150MA0x06</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CHG_ITERM_200MA0x07</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">smb358_term_current_set</span><span class="params">(struct smb358_charger *chip)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">u8 reg = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> rc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (chip-&gt;iterm_ma != -EINVAL) &#123;</span><br><span class="line"><span class="keyword">if</span> (chip-&gt;iterm_disabled)</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Error: Both iterm_disabled and iterm_ma set\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (chip-&gt;iterm_ma &lt;= <span class="number">30</span>)</span><br><span class="line">reg = CHG_ITERM_30MA;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (chip-&gt;iterm_ma &lt;= <span class="number">40</span>)</span><br><span class="line">reg = CHG_ITERM_40MA;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (chip-&gt;iterm_ma &lt;= <span class="number">60</span>)</span><br><span class="line">reg = CHG_ITERM_60MA;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (chip-&gt;iterm_ma &lt;= <span class="number">80</span>)</span><br><span class="line">reg = CHG_ITERM_80MA;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (chip-&gt;iterm_ma &lt;= <span class="number">100</span>)</span><br><span class="line">reg = CHG_ITERM_100MA;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (chip-&gt;iterm_ma &lt;= <span class="number">125</span>)</span><br><span class="line">reg = CHG_ITERM_125MA;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (chip-&gt;iterm_ma &lt;= <span class="number">150</span>)</span><br><span class="line">reg = CHG_ITERM_150MA;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">reg = CHG_ITERM_200MA;</span><br><span class="line"></span><br><span class="line">rc = smb358_masked_write(chip, CHG_CURRENT_CTRL_REG,</span><br><span class="line">CHG_ITERM_MASK, reg);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"Couldn't set iterm rc = %d\n"</span>, rc);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (chip-&gt;iterm_disabled) &#123;</span><br><span class="line">rc = smb358_masked_write(chip, CHG_CTRL_REG,</span><br><span class="line">CHG_CTRL_CURR_TERM_END_MASK,</span><br><span class="line">CHG_CTRL_CURR_TERM_END_MASK);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't set iterm rc = %d\n"</span>,</span><br><span class="line">rc);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">rc = smb358_masked_write(chip, CHG_CTRL_REG,</span><br><span class="line">CHG_CTRL_CURR_TERM_END_MASK, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"Couldn't enable iterm rc = %d\n"</span>, rc);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> VFLT_300MV0x0C</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> VFLT_200MV0x08</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> VFLT_100MV0x04</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> VFLT_50MV0x00</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> VFLT_MASK0x0C</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">smb358_recharge_and_inhibit_set</span><span class="params">(struct smb358_charger *chip)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">u8 reg = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> rc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (chip-&gt;recharge_disabled)</span><br><span class="line">rc = smb358_masked_write(chip, CHG_CTRL_REG,</span><br><span class="line">CHG_CTRL_AUTO_RECHARGE_MASK, CHG_AUTO_RECHARGE_DIS_BIT);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">rc = smb358_masked_write(chip, CHG_CTRL_REG,</span><br><span class="line">CHG_CTRL_AUTO_RECHARGE_MASK, <span class="number">0x0</span>);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"Couldn't set auto recharge en reg rc = %d\n"</span>, rc);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (chip-&gt;inhibit_disabled)</span><br><span class="line">rc = smb358_masked_write(chip, CHG_OTH_CURRENT_CTRL_REG,</span><br><span class="line">CHG_INHI_EN_MASK, <span class="number">0x0</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">rc = smb358_masked_write(chip, CHG_OTH_CURRENT_CTRL_REG,</span><br><span class="line">CHG_INHI_EN_MASK, CHG_INHI_EN_BIT);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"Couldn't set inhibit en reg rc = %d\n"</span>, rc);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (chip-&gt;recharge_mv != -EINVAL) &#123;</span><br><span class="line"><span class="keyword">if</span> (chip-&gt;recharge_mv &lt;= <span class="number">50</span>)</span><br><span class="line">reg = VFLT_50MV;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (chip-&gt;recharge_mv &lt;= <span class="number">100</span>)</span><br><span class="line">reg = VFLT_100MV;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (chip-&gt;recharge_mv &lt;= <span class="number">200</span>)</span><br><span class="line">reg = VFLT_200MV;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">reg = VFLT_300MV;</span><br><span class="line"></span><br><span class="line">rc = smb358_masked_write(chip, CHG_OTH_CURRENT_CTRL_REG,</span><br><span class="line">VFLT_MASK, reg);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"Couldn't set inhibit threshold rc = %d\n"</span>, rc);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">smb358_chg_otg_regulator_enable</span><span class="params">(struct regulator_dev *rdev)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rc = <span class="number">0</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">smb358_charger</span> *<span class="title">chip</span> = <span class="title">rdev_get_drvdata</span>(<span class="title">rdev</span>);</span></span><br><span class="line"></span><br><span class="line">rc = smb358_masked_write(chip, CMD_A_REG, CMD_A_OTG_ENABLE_BIT,</span><br><span class="line">CMD_A_OTG_ENABLE_BIT);</span><br><span class="line"><span class="keyword">if</span> (rc)</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't enable OTG mode rc=%d, reg=%2x\n"</span>,</span><br><span class="line">rc, CMD_A_REG);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">smb358_chg_otg_regulator_disable</span><span class="params">(struct regulator_dev *rdev)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rc = <span class="number">0</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">smb358_charger</span> *<span class="title">chip</span> = <span class="title">rdev_get_drvdata</span>(<span class="title">rdev</span>);</span></span><br><span class="line"></span><br><span class="line">rc = smb358_masked_write(chip, CMD_A_REG, CMD_A_OTG_ENABLE_BIT, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (rc)</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't disable OTG mode rc=%d, reg=%2x\n"</span>,</span><br><span class="line">rc, CMD_A_REG);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">smb358_chg_otg_regulator_is_enable</span><span class="params">(struct regulator_dev *rdev)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rc = <span class="number">0</span>;</span><br><span class="line">u8 reg = <span class="number">0</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">smb358_charger</span> *<span class="title">chip</span> = <span class="title">rdev_get_drvdata</span>(<span class="title">rdev</span>);</span></span><br><span class="line"></span><br><span class="line">rc = smb358_read_reg(chip, CMD_A_REG, &amp;reg);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"Couldn't read OTG enable bit rc=%d, reg=%2x\n"</span>,</span><br><span class="line">rc, CMD_A_REG);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span>  (reg &amp; CMD_A_OTG_ENABLE_BIT) ? <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">regulator_ops</span> <span class="title">smb358_chg_otg_reg_ops</span> = &#123;</span></span><br><span class="line">.enable= smb358_chg_otg_regulator_enable,</span><br><span class="line">.disable= smb358_chg_otg_regulator_disable,</span><br><span class="line">.is_enabled= smb358_chg_otg_regulator_is_enable,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">smb358_regulator_init</span><span class="params">(struct smb358_charger *chip)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rc = <span class="number">0</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">regulator_init_data</span> *<span class="title">init_data</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">regulator_config</span> <span class="title">cfg</span> = &#123;</span>&#125;;</span><br><span class="line"></span><br><span class="line">init_data = of_get_regulator_init_data(chip-&gt;dev, chip-&gt;dev-&gt;of_node);</span><br><span class="line"><span class="keyword">if</span> (!init_data) &#123;</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Allocate memory failed\n"</span>);</span><br><span class="line"><span class="keyword">return</span> -ENOMEM;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Give the name, then will register */</span></span><br><span class="line"><span class="keyword">if</span> (init_data-&gt;constraints.name) &#123;</span><br><span class="line">chip-&gt;otg_vreg.rdesc.owner = THIS_MODULE;</span><br><span class="line">chip-&gt;otg_vreg.rdesc.type = REGULATOR_VOLTAGE;</span><br><span class="line">chip-&gt;otg_vreg.rdesc.ops = &amp;smb358_chg_otg_reg_ops;</span><br><span class="line">chip-&gt;otg_vreg.rdesc.name = init_data-&gt;constraints.name;</span><br><span class="line"></span><br><span class="line">cfg.dev = chip-&gt;dev;</span><br><span class="line">cfg.init_data = init_data;</span><br><span class="line">cfg.driver_data = chip;</span><br><span class="line">cfg.of_node = chip-&gt;dev-&gt;of_node;</span><br><span class="line"></span><br><span class="line">init_data-&gt;constraints.valid_ops_mask</span><br><span class="line">|= REGULATOR_CHANGE_STATUS;</span><br><span class="line"></span><br><span class="line">chip-&gt;otg_vreg.rdev = regulator_register(</span><br><span class="line">&amp;chip-&gt;otg_vreg.rdesc, &amp;cfg);</span><br><span class="line"><span class="keyword">if</span> (IS_ERR(chip-&gt;otg_vreg.rdev)) &#123;</span><br><span class="line">rc = PTR_ERR(chip-&gt;otg_vreg.rdev);</span><br><span class="line">chip-&gt;otg_vreg.rdev = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">if</span> (rc != -EPROBE_DEFER)</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"OTG reg failed, rc=%d\n"</span>, rc);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> __smb358_path_suspend(struct smb358_charger *chip, <span class="keyword">bool</span> suspend)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> rc;</span><br><span class="line"></span><br><span class="line">rc = smb358_masked_write(chip, CMD_A_REG, CMD_A_CHG_SUSP_EN_MASK,</span><br><span class="line">suspend ? CMD_A_CHG_SUSP_EN_BIT : <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (rc &lt; <span class="number">0</span>)</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't set CMD_A reg, rc = %d\n"</span>, rc);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">smb358_path_suspend</span><span class="params">(struct smb358_charger *chip, <span class="keyword">int</span> reason,</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">bool</span> suspend)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rc = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> suspended;</span><br><span class="line"></span><br><span class="line">mutex_lock(&amp;chip-&gt;path_suspend_lock);</span><br><span class="line">suspended = chip-&gt;usb_suspended;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (suspend == <span class="literal">false</span>)</span><br><span class="line">suspended &amp;= ~reason;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">suspended |= reason;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!chip-&gt;usb_suspended &amp;&amp; suspended) &#123;</span><br><span class="line">rc = __smb358_path_suspend(chip, <span class="literal">true</span>);</span><br><span class="line">chip-&gt;usb_suspended = suspended;</span><br><span class="line">power_supply_set_online(chip-&gt;usb_psy, !chip-&gt;usb_suspended);</span><br><span class="line">power_supply_changed(chip-&gt;usb_psy);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (chip-&gt;usb_suspended &amp;&amp; !suspended) &#123;</span><br><span class="line">rc = __smb358_path_suspend(chip, <span class="literal">false</span>);</span><br><span class="line">chip-&gt;usb_suspended = suspended;</span><br><span class="line">power_supply_set_online(chip-&gt;usb_psy, !chip-&gt;usb_suspended);</span><br><span class="line">power_supply_changed(chip-&gt;usb_psy);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (rc)</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't set/unset suspend rc = %d\n"</span>, rc);</span><br><span class="line"></span><br><span class="line">mutex_unlock(&amp;chip-&gt;path_suspend_lock);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> __smb358_charging_disable(struct smb358_charger *chip, <span class="keyword">bool</span> disable)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> rc;</span><br><span class="line"></span><br><span class="line">rc = smb358_masked_write(chip, CMD_A_REG, CMD_A_CHG_ENABLE_BIT,</span><br><span class="line">disable ? <span class="number">0</span> : CMD_A_CHG_ENABLE_BIT);</span><br><span class="line"><span class="keyword">if</span> (rc &lt; <span class="number">0</span>)</span><br><span class="line">pr_err(<span class="string">"Couldn't set CHG_ENABLE_BIT diable = %d, rc = %d\n"</span>,</span><br><span class="line">disable, rc);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">smb358_charging_disable</span><span class="params">(struct smb358_charger *chip,</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">int</span> reason, <span class="keyword">int</span> disable)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rc = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> disabled;</span><br><span class="line"></span><br><span class="line">disabled = chip-&gt;charging_disabled_status;</span><br><span class="line"></span><br><span class="line">pr_debug(<span class="string">"reason = %d requested_disable = %d disabled_status = %d\n"</span>,</span><br><span class="line">reason, disable, disabled);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (disable == <span class="literal">true</span>)</span><br><span class="line">disabled |= reason;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">disabled &amp;= ~reason;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!!disabled == !!chip-&gt;charging_disabled_status)</span><br><span class="line"><span class="keyword">goto</span> skip;</span><br><span class="line"></span><br><span class="line">rc = __smb358_charging_disable(chip, !!disabled);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">pr_err(<span class="string">"Failed to disable charging rc = %d\n"</span>, rc);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">/* will not modify online status in this condition */</span></span><br><span class="line">power_supply_changed(&amp;chip-&gt;batt_psy);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">skip:</span><br><span class="line">chip-&gt;charging_disabled_status = disabled;</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_INV_BATT_ID7700</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MIN_INV_BATT_ID7300</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">smb358_hw_init</span><span class="params">(struct smb358_charger *chip)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rc;</span><br><span class="line">u8 reg = <span class="number">0</span>, mask = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * If the charger is pre-configured for autonomous operation,</span></span><br><span class="line"><span class="comment"> * do not apply additonal settings</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">if</span> (chip-&gt;chg_autonomous_mode) &#123;</span><br><span class="line">dev_dbg(chip-&gt;dev, <span class="string">"Charger configured for autonomous mode\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rc = smb358_enable_volatile_writes(chip);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't configure volatile writes rc=%d\n"</span>,</span><br><span class="line">rc);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* setup defaults for CHG_CNTRL_REG */</span></span><br><span class="line">reg = CHG_CTRL_BATT_MISSING_DET_THERM_IO;</span><br><span class="line">mask = CHG_CTRL_BATT_MISSING_DET_MASK;</span><br><span class="line">rc = smb358_masked_write(chip, CHG_CTRL_REG, mask, reg);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't set CHG_CTRL_REG rc=%d\n"</span>, rc);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//reg = BIT(4) | (~(BIT(5)));</span></span><br><span class="line">mask = CHG_CTRL_BATT_MISSING_DET_MASK1;</span><br><span class="line">rc = smb358_masked_write(chip, CHG_CTRL_REG, mask, reg);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't set CHG_CTRL_REG rc=%d\n"</span>, rc);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* setup charging will not suspend, if battery temperature outside hard limits. */</span></span><br><span class="line">reg = CHG_SYSOK_AND_USB3_HARD_TEMP_LIMITS;</span><br><span class="line">mask = CHG_SYSOK_AND_USB3_HARD_TEMP_LIMITS_MASK;</span><br><span class="line">rc = smb358_masked_write(chip, SYSOK_AND_USB3_REG, mask, reg);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't set SYSOK_AND_USB3_REG rc=%d\n"</span>, rc);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* setup defaults for PIN_CTRL_REG */</span></span><br><span class="line"><span class="keyword">if</span> (!chip-&gt;battery_missing) &#123;</span><br><span class="line">reg = CHG_PIN_CTRL_USBCS_REG_BIT | CHG_PIN_CTRL_CHG_EN_LOW_REG_BIT | CHG_PIN_CTRL_STATE_REG_BIT |</span><br><span class="line">CHG_PIN_CTRL_APSD_IRQ_BIT | CHG_PIN_CTRL_CHG_ERR_IRQ_BIT;</span><br><span class="line">mask = CHG_PIN_CTRL_CHG_EN_MASK | CHG_PIN_CTRL_USBCS_REG_MASK | CHG_PIN_CTRL_STATE_REG_MASK |</span><br><span class="line">CHG_PIN_CTRL_APSD_IRQ_MASK | CHG_PIN_CTRL_CHG_ERR_IRQ_MASK;</span><br><span class="line">rc = smb358_masked_write(chip, CHG_PIN_EN_CTRL_REG, mask, reg);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't set CHG_PIN_EN_CTRL_REG rc=%d\n"</span>,</span><br><span class="line">rc);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* set otg current limit*/</span></span><br><span class="line">reg = CHG_OTG_CURRENT_LIMIT_REG_BIT;</span><br><span class="line">mask = CHG_OTG_CURRENT_LIMIT_REG_MASK;</span><br><span class="line">rc = smb358_masked_write(chip, OTG_TLMN_THERM_REG, mask, reg);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't set CHG_OTG_CURRENT_LIMIT_REG rc=%d\n"</span>,</span><br><span class="line">rc);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* setup USB suspend and APSD  */</span></span><br><span class="line">rc = smb358_masked_write(chip, VARIOUS_FUNC_REG,</span><br><span class="line">VARIOUS_FUNC_USB_SUSP_MASK, VARIOUS_FUNC_USB_SUSP_EN_REG_BIT);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't set VARIOUS_FUNC_REG rc=%d\n"</span>,</span><br><span class="line">rc);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!chip-&gt;disable_apsd)</span><br><span class="line">reg = CHG_CTRL_APSD_EN_BIT;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">reg = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">rc = smb358_masked_write(chip, CHG_CTRL_REG,</span><br><span class="line">CHG_CTRL_APSD_EN_MASK, reg);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't set CHG_CTRL_REG rc=%d\n"</span>,</span><br><span class="line">rc);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* Fault and Status IRQ configuration */</span></span><br><span class="line"><span class="comment">//reg = FAULT_INT_HOT_COLD_HARD_BIT | FAULT_INT_HOT_COLD_SOFT_BIT</span></span><br><span class="line">reg = FAULT_INT_INPUT_UV_BIT | FAULT_INT_AICL_COMPLETE_BIT | FAULT_INT_INPUT_OV_BIT;</span><br><span class="line">rc = smb358_write_reg(chip, FAULT_INT_REG, reg);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't set FAULT_INT_REG rc=%d\n"</span>, rc);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line">reg = STATUS_INT_CHG_TIMEOUT_BIT | STATUS_INT_OTG_DETECT_BIT |</span><br><span class="line">STATUS_INT_BATT_OV_BIT | STATUS_INT_CHGING_BIT |</span><br><span class="line">STATUS_INT_CHG_INHI_BIT | STATUS_INT_INOK_BIT |</span><br><span class="line">STATUS_INT_LOW_BATT_BIT | STATUS_INT_MISSING_BATT_BIT;</span><br><span class="line">rc = smb358_write_reg(chip, STATUS_INT_REG, reg);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't set STATUS_INT_REG rc=%d\n"</span>, rc);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* setup THERM Monitor */</span></span><br><span class="line">rc = smb358_masked_write(chip, THERM_A_CTRL_REG,</span><br><span class="line">THERM_A_THERM_MONITOR_EN_MASK, THERM_A_THERM_MONITOR_EN_BIT);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't set THERM_A_CTRL_REG rc=%d\n"</span>,</span><br><span class="line">rc);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* set the fast charge current limit */</span></span><br><span class="line">rc = smb358_fastchg_current_set(chip, chip-&gt;fastchg_current_max_ma);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't set fastchg current rc=%d\n"</span>, rc);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* set the float voltage */</span></span><br><span class="line">rc = smb358_float_voltage_set(chip, chip-&gt;vfloat_mv);</span><br><span class="line"><span class="keyword">if</span> (rc &lt; <span class="number">0</span>) &#123;</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"Couldn't set float voltage rc = %d\n"</span>, rc);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* set iterm */</span></span><br><span class="line">rc = smb358_term_current_set(chip);</span><br><span class="line"><span class="keyword">if</span> (rc)</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't set term current rc=%d\n"</span>, rc);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* set recharge */</span></span><br><span class="line">rc = smb358_recharge_and_inhibit_set(chip);</span><br><span class="line"><span class="keyword">if</span> (rc)</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't set recharge para rc=%d\n"</span>, rc);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* suspend USB path for fake battery */</span></span><br><span class="line"><span class="keyword">if</span> (!chip-&gt;skip_usb_suspend_for_fake_battery) &#123;</span><br><span class="line"><span class="keyword">if</span> ((chip-&gt;connected_rid &gt;= MIN_INV_BATT_ID) &amp;&amp;</span><br><span class="line">(chip-&gt;connected_rid &lt;= MAX_INV_BATT_ID)) &#123;</span><br><span class="line">rc = smb358_path_suspend(chip, FAKE_BATTERY, <span class="literal">true</span>);</span><br><span class="line"><span class="keyword">if</span> (!rc)</span><br><span class="line">dev_info(chip-&gt;dev,</span><br><span class="line"><span class="string">"Suspended USB path reason FAKE_BATTERY\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* enable/disable charging */</span></span><br><span class="line"><span class="keyword">if</span> (chip-&gt;charging_disabled) &#123;</span><br><span class="line">rc = smb358_charging_disable(chip, USER, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span> (rc)</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't '%s' charging rc = %d\n"</span>,</span><br><span class="line">chip-&gt;charging_disabled ? <span class="string">"disable"</span> : <span class="string">"enable"</span>, rc);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Enable charging explictly,</span></span><br><span class="line"><span class="comment"> * because not sure the default behavior.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">rc = __smb358_charging_disable(chip, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (rc)</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't enable charging\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* Workaround for recharge frequent issue: When battery is</span></span><br><span class="line"><span class="comment">* greater than 4.2v, and charging is disabled, charger</span></span><br><span class="line"><span class="comment">* stops switching. In such a case, system load is provided</span></span><br><span class="line"><span class="comment">* by battery rather than input, even though input is still</span></span><br><span class="line"><span class="comment">* there. Make reg09[0:3] to be a non-zero value which can</span></span><br><span class="line"><span class="comment">* keep the switcher active</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">rc = smb358_masked_write(chip, OTHER_CTRL_REG, CHG_LOW_BATT_THRESHOLD,</span><br><span class="line">SMB358_BATT_GOOD_THRE_2P5);</span><br><span class="line"><span class="keyword">if</span> (rc)</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't write OTHER_CTRL_REG, rc = %d\n"</span>,</span><br><span class="line">rc);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">enum</span> power_supply_property smb358_battery_properties[] = &#123;</span><br><span class="line">POWER_SUPPLY_PROP_STATUS,</span><br><span class="line">POWER_SUPPLY_PROP_PRESENT,</span><br><span class="line">POWER_SUPPLY_PROP_CHARGING_ENABLED,</span><br><span class="line">POWER_SUPPLY_PROP_CHARGE_TYPE,</span><br><span class="line">POWER_SUPPLY_PROP_CAPACITY,</span><br><span class="line">POWER_SUPPLY_PROP_HEALTH,</span><br><span class="line">POWER_SUPPLY_PROP_TECHNOLOGY,</span><br><span class="line">POWER_SUPPLY_PROP_MODEL_NAME,</span><br><span class="line">POWER_SUPPLY_PROP_TEMP,</span><br><span class="line">POWER_SUPPLY_PROP_VOLTAGE_NOW,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">smb358_get_prop_batt_status</span><span class="params">(struct smb358_charger *chip)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rc;</span><br><span class="line">u8 reg = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">rc = smb358_read_reg(chip, STATUS_C_REG, &amp;reg);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't read STAT_C rc = %d\n"</span>, rc);</span><br><span class="line"><span class="keyword">return</span> POWER_SUPPLY_STATUS_UNKNOWN;</span><br><span class="line">&#125;</span><br><span class="line">dev_dbg(chip-&gt;dev, <span class="string">"%s: STATUS_C_REG=%x\n"</span>, __func__, reg);</span><br><span class="line"><span class="keyword">if</span>(reg == <span class="number">0</span>)&#123;</span><br><span class="line">chip-&gt;batt_full = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">return</span> POWER_SUPPLY_STATUS_DISCHARGING;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>((reg &amp; STATUS_C_CHARGING_MASK) &amp;&amp;</span><br><span class="line">!(reg &amp; STATUS_C_CHG_ERR_STATUS_BIT))&#123;</span><br><span class="line">chip-&gt;batt_full = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">return</span> POWER_SUPPLY_STATUS_CHARGING;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">chip-&gt;batt_full = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">return</span> POWER_SUPPLY_STATUS_FULL;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">smb358_get_prop_batt_present</span><span class="params">(struct smb358_charger *chip)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> !chip-&gt;battery_missing;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TEMP_ARR_SIZE 10</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">smb358_get_prop_battery_voltage_now</span><span class="params">(struct smb358_charger *chip)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">smb358_battery_set_property</span><span class="params">(struct power_supply *psy, <span class="keyword">enum</span> power_supply_property prop, <span class="keyword">const</span> <span class="keyword">union</span> power_supply_propval *val)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">smb358_get_prop_batt_capacity</span><span class="params">(struct smb358_charger *chip)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">union</span> power_supply_propval ret = &#123;<span class="number">0</span>, &#125;;</span><br><span class="line"><span class="keyword">int</span> cur_v = <span class="number">0</span>,bat_voltage=<span class="number">0</span>,ret_cap = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> cur_v_tmp = <span class="number">0</span>,p_ret_cap=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> CONFIG_FOR_BROBDMOBI_R700</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> pre_cap = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> cap_arr[TEMP_ARR_SIZE] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> interval = <span class="number">0</span>, i = <span class="number">0</span>, sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> rc;</span><br><span class="line">u8 reg = <span class="number">0</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> 0</span></span><br><span class="line"><span class="keyword">if</span> (chip-&gt;battery_missing)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">cur_v_tmp = smb358_get_prop_battery_voltage_now(chip);</span><br><span class="line"></span><br><span class="line">cur_v = cur_v_tmp / <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">cap_arr[cnt] = cur_v;</span><br><span class="line">cnt++;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (cnt != <span class="number">0</span> &amp;&amp; (cnt % TEMP_ARR_SIZE) == <span class="number">0</span>)</span><br><span class="line">cnt = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (; i &lt; TEMP_ARR_SIZE; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">0</span> == cap_arr[i])</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">sum += cap_arr[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cur_v = sum / i;</span><br><span class="line">bat_voltage = batt_avg_adc(cur_v);</span><br><span class="line"><span class="comment">//for (i = 0; i &lt; TEMP_ARR_SIZE; i++)</span></span><br><span class="line"><span class="comment">//printk("the cap_v val is:%d\n", cap_arr[i]);</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> 0</span></span><br><span class="line"><span class="keyword">switch</span> (cur_v) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span> ... CAP_RAT10_VOL :</span><br><span class="line">ret_cap = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> CAP_RAT10_VOL + <span class="number">1</span> ... CAP_RAT20_VOL :</span><br><span class="line">ret_cap = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> CAP_RAT20_VOL + <span class="number">1</span> ... CAP_RAT30_VOL :</span><br><span class="line">ret_cap = <span class="number">20</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> CAP_RAT30_VOL + <span class="number">1</span> ... CAP_RAT40_VOL :</span><br><span class="line">ret_cap = <span class="number">30</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> CAP_RAT40_VOL + <span class="number">1</span> ... CAP_RAT50_VOL :</span><br><span class="line">ret_cap = <span class="number">40</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> CAP_RAT50_VOL + <span class="number">1</span> ... CAP_RAT60_VOL :</span><br><span class="line">ret_cap = <span class="number">50</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> CAP_RAT60_VOL + <span class="number">1</span> ... CAP_RAT70_VOL :</span><br><span class="line">ret_cap = <span class="number">60</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> CAP_RAT70_VOL + <span class="number">1</span> ... CAP_RAT80_VOL :</span><br><span class="line">ret_cap = <span class="number">70</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> CAP_RAT80_VOL + <span class="number">1</span> ... CAP_RAT90_VOL :</span><br><span class="line">ret_cap = <span class="number">80</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> CAP_RAT90_VOL + <span class="number">1</span> ... CAP_RAT100_VOL :</span><br><span class="line">ret_cap = <span class="number">90</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> CAP_RAT100_VOL + <span class="number">1</span> ... CAP_RATEND_VOL:</span><br><span class="line">ret_cap = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">rc = smb358_read_reg(chip, STATUS_C_REG, &amp;reg);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't read STAT_C rc = %d\n"</span>, rc);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ((reg &amp; STATUS_C_CHARGING_MASK) &amp;&amp;</span><br><span class="line">!(reg &amp; STATUS_C_CHG_ERR_STATUS_BIT))&#123;</span><br><span class="line">p_ret_cap = bat_get_chg_cap_percent(bat_voltage);</span><br><span class="line">ret_cap = batt_avg_percent(p_ret_cap);</span><br><span class="line"><span class="keyword">if</span>(pre_cap &gt;= ret_cap &amp;&amp; pre_cap &lt; <span class="number">100</span>)</span><br><span class="line">ret_cap = pre_cap; </span><br><span class="line"><span class="comment">//printk("batt_avg_percent = %d\n",ret_cap);</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">p_ret_cap = bat_get_dischg_cap_percent(bat_voltage);</span><br><span class="line">ret_cap = batt_avg_percent(p_ret_cap);</span><br><span class="line">                <span class="keyword">if</span>(ret_cap == <span class="number">100</span>)</span><br><span class="line">                    pre_cap = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">if</span>(pre_cap &lt;= ret_cap &amp;&amp; pre_cap &gt; <span class="number">0</span>)</span><br><span class="line">  ret_cap = pre_cap;</span><br><span class="line"><span class="comment">//printk("dis_batt_avg_percent = %d\n",ret_cap);  </span></span><br><span class="line"><span class="keyword">if</span>(ret_cap &lt; <span class="number">2</span>)</span><br><span class="line">kernel_power_off();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (chip-&gt;batt_full)&#123;</span><br><span class="line">ret_cap = <span class="number">100</span>;</span><br><span class="line"><span class="comment">//printk("chip-&gt;batt_full\n");</span></span><br><span class="line">&#125;</span><br><span class="line">pre_cap &gt; ret_cap ? (interval = pre_cap - ret_cap) : (interval = ret_cap - pre_cap);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (pre_cap != ret_cap &amp;&amp; interval &lt;= <span class="number">10</span>) &#123; <span class="comment">// if the interval is more than 10, ignor it.</span></span><br><span class="line">ret.intval = ret_cap;</span><br><span class="line">smb358_battery_set_property(&amp;chip-&gt;batt_psy, POWER_SUPPLY_PROP_CAPACITY, &amp;ret);</span><br><span class="line">&#125;</span><br><span class="line">pre_cap = ret_cap; </span><br><span class="line"><span class="keyword">return</span> ret_cap;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="keyword">if</span> (chip-&gt;fake_battery_soc &gt;= <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> chip-&gt;fake_battery_soc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (chip-&gt;bms_psy) &#123;</span><br><span class="line">chip-&gt;bms_psy-&gt;get_property(chip-&gt;bms_psy,</span><br><span class="line">POWER_SUPPLY_PROP_CAPACITY, &amp;ret);</span><br><span class="line"><span class="keyword">return</span> ret.intval;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dev_dbg(chip-&gt;dev,</span><br><span class="line"><span class="string">"Couldn't get bms_psy, return default capacity\n"</span>);</span><br><span class="line"><span class="keyword">return</span> SMB358_DEFAULT_BATT_CAPACITY;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">smb358_get_prop_charge_type</span><span class="params">(struct smb358_charger *chip)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rc;</span><br><span class="line">u8 reg = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">rc = smb358_read_reg(chip, STATUS_C_REG, &amp;reg);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't read STAT_C rc = %d\n"</span>, rc);</span><br><span class="line"><span class="keyword">return</span> POWER_SUPPLY_CHARGE_TYPE_UNKNOWN;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dev_dbg(chip-&gt;dev, <span class="string">"%s: STATUS_C_REG=%x\n"</span>, __func__, reg);</span><br><span class="line"></span><br><span class="line">reg &amp;= STATUS_C_CHARGING_MASK;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (reg == STATUS_C_FAST_CHARGING)</span><br><span class="line"><span class="keyword">return</span> POWER_SUPPLY_CHARGE_TYPE_FAST;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (reg == STATUS_C_TAPER_CHARGING)</span><br><span class="line"><span class="keyword">return</span> POWER_SUPPLY_CHARGE_TYPE_TAPER;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (reg == STATUS_C_PRE_CHARGING)</span><br><span class="line"><span class="keyword">return</span> POWER_SUPPLY_CHARGE_TYPE_TRICKLE;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> POWER_SUPPLY_CHARGE_TYPE_NONE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">smb358_get_prop_batt_temp</span><span class="params">(struct smb358_charger *chip)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">smb358_get_prop_batt_health</span><span class="params">(struct smb358_charger *chip)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">union</span> power_supply_propval ret = &#123;<span class="number">0</span>, &#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> CONFIG_FOR_BROBDMOBI_R700</span></span><br><span class="line"><span class="keyword">int</span> temp_adc = <span class="number">0</span>, rc;</span><br><span class="line"></span><br><span class="line">temp_adc = smb358_get_prop_batt_temp(chip);</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (temp_adc) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span> ... TEMP_HOT_VOLTAGE:</span><br><span class="line">ret.intval = POWER_SUPPLY_HEALTH_OVERHEAT;</span><br><span class="line">rc = smb358_charging_disable(chip, SOC, <span class="literal">true</span>);</span><br><span class="line"><span class="keyword">if</span> (rc &lt; <span class="number">0</span>) &#123;</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't set charging disable rc = %d\n"</span>, rc);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (chip-&gt;battery_missing)</span><br><span class="line">chip-&gt;battery_missing = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//kernel_power_off();</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> TEMP_HOT_VOLTAGE + <span class="number">1</span> ... TEMP_COLD_VOLTAGE:</span><br><span class="line">ret.intval = POWER_SUPPLY_HEALTH_GOOD;</span><br><span class="line"><span class="keyword">if</span> (chip-&gt;battery_missing)</span><br><span class="line">chip-&gt;battery_missing = <span class="literal">false</span>;</span><br><span class="line"><span class="comment">//temperature is ok,go to charging state</span></span><br><span class="line">    rc = smb358_charging_disable(chip, SOC, <span class="literal">false</span>);</span><br><span class="line"><span class="keyword">if</span> (rc &lt; <span class="number">0</span>) &#123;</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't set charging disable rc = %d\n"</span>, rc);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (chip-&gt;battery_missing)</span><br><span class="line">chip-&gt;battery_missing = <span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> TEMP_COLD_VOLTAGE + <span class="number">1</span> ... TEMP_OVER_COLD_VOLTAGE:</span><br><span class="line">ret.intval = POWER_SUPPLY_HEALTH_COLD;</span><br><span class="line">rc = smb358_charging_disable(chip, SOC, <span class="literal">true</span>);</span><br><span class="line"><span class="keyword">if</span> (rc &lt; <span class="number">0</span>) &#123;</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't set charging disable rc = %d\n"</span>, rc);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//kernel_power_off();</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">ret.intval = POWER_SUPPLY_HEALTH_UNSPEC_FAILURE;</span><br><span class="line"><span class="comment">//dev_err(chip-&gt;dev, "it is unknow temp, disable the charging = %d\n", temp_adc);</span></span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"it is unknow temp %d\n"</span>, temp_adc);</span><br><span class="line"><span class="comment">//rc = smb358_charging_disable(chip, SOC, true);</span></span><br><span class="line"><span class="comment">//if (rc &lt; 0) &#123;</span></span><br><span class="line"><span class="comment">//dev_err(chip-&gt;dev, "Couldn't set charging disable rc = %d\n", rc);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="keyword">if</span> (!chip-&gt;battery_missing)</span><br><span class="line">chip-&gt;battery_missing = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (chip-&gt;batt_hot)</span><br><span class="line">ret.intval = POWER_SUPPLY_HEALTH_OVERHEAT;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (chip-&gt;batt_cold)</span><br><span class="line">ret.intval = POWER_SUPPLY_HEALTH_COLD;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (chip-&gt;batt_warm)</span><br><span class="line">ret.intval = POWER_SUPPLY_HEALTH_WARM;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (chip-&gt;batt_cool)</span><br><span class="line">ret.intval = POWER_SUPPLY_HEALTH_COOL;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">ret.intval = POWER_SUPPLY_HEALTH_GOOD;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> ret.intval;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DEFAULT_TEMP 250</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">smb358_get_prop_batt_temp</span><span class="params">(struct smb358_charger *chip)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rc = <span class="number">0</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">qpnp_vadc_result</span> <span class="title">results</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> CONFIG_FOR_BROBDMOBI_R700</span></span><br><span class="line">rc = qpnp_vadc_read(chip-&gt;vadc_dev, P_MUX6_1_1, &amp;results);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="keyword">if</span> (!smb358_get_prop_batt_present(chip)</span><br><span class="line">|| !chip-&gt;vadc_dev</span><br><span class="line">|| !chip-&gt;using_pmic_therm)</span><br><span class="line"><span class="keyword">return</span> DEFAULT_TEMP;</span><br><span class="line"></span><br><span class="line">rc = qpnp_vadc_read(chip-&gt;vadc_dev, LR_MUX1_BATT_THERM, &amp;results);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">pr_debug(<span class="string">"Unable to read batt temperature rc=%d\n"</span>, rc);</span><br><span class="line"><span class="keyword">return</span> DEFAULT_TEMP;</span><br><span class="line">&#125;</span><br><span class="line">pr_debug(<span class="string">"get_bat_temp %d, %lld\n"</span>,</span><br><span class="line">results.adc_code, results.physical);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> (<span class="keyword">int</span>)results.physical;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span></span><br><span class="line">smb358_get_prop_battery_voltage_now(struct smb358_charger *chip)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> rc = <span class="number">0</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">qpnp_vadc_result</span> <span class="title">results</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!chip-&gt;vadc_dev || !chip-&gt;pmic_vbat_sns)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">rc = qpnp_vadc_read(chip-&gt;vadc_dev, VBAT_SNS, &amp;results);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">pr_err(<span class="string">"Unable to read vbat rc=%d\n"</span>, rc);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> results.physical;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">smb358_set_usb_chg_current</span><span class="params">(struct smb358_charger *chip,</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">int</span> current_ma)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i, rc = <span class="number">0</span>;</span><br><span class="line">u8 reg1 = <span class="number">0</span>, reg2 = <span class="number">0</span>, mask = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">dev_dbg(chip-&gt;dev, <span class="string">"%s: USB current_ma = %d\n"</span>, __func__, current_ma);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (chip-&gt;chg_autonomous_mode) &#123;</span><br><span class="line">dev_dbg(chip-&gt;dev, <span class="string">"%s: Charger in autonmous mode\n"</span>, __func__);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (current_ma &lt; USB3_MIN_CURRENT_MA &amp;&amp; current_ma != <span class="number">2</span>)</span><br><span class="line">current_ma = USB2_MIN_CURRENT_MA;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (current_ma == USB2_MIN_CURRENT_MA) &#123;</span><br><span class="line"><span class="comment">/* USB 2.0 - 100mA */</span></span><br><span class="line">reg1 &amp;= ~USB3_ENABLE_BIT;</span><br><span class="line">reg2 &amp;= ~CMD_B_CHG_USB_500_900_ENABLE_BIT;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (current_ma == USB2_MAX_CURRENT_MA) &#123;</span><br><span class="line"><span class="comment">/* USB 2.0 - 500mA */</span></span><br><span class="line">reg1 &amp;= ~USB3_ENABLE_BIT;</span><br><span class="line">reg2 |= CMD_B_CHG_USB_500_900_ENABLE_BIT;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (current_ma == USB3_MAX_CURRENT_MA) &#123;</span><br><span class="line"><span class="comment">/* USB 3.0 - 900mA */</span></span><br><span class="line">reg1 |= USB3_ENABLE_BIT;</span><br><span class="line">reg2 |= CMD_B_CHG_USB_500_900_ENABLE_BIT;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (current_ma &gt; USB2_MAX_CURRENT_MA) &#123;</span><br><span class="line"><span class="comment">/* HC mode  - if none of the above */</span></span><br><span class="line">reg2 |= CMD_B_CHG_HC_ENABLE_BIT;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = ARRAY_SIZE(chg_current) - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line"><span class="keyword">if</span> (chg_current[i] &lt;= current_ma)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (i &lt; <span class="number">0</span>) &#123;</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Cannot find %dmA\n"</span>, current_ma);</span><br><span class="line">i = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">i = i &lt;&lt; AC_CHG_CURRENT_SHIFT;</span><br><span class="line">rc = smb358_masked_write(chip, CHG_OTH_CURRENT_CTRL_REG,</span><br><span class="line">AC_CHG_CURRENT_MASK, i);</span><br><span class="line"><span class="keyword">if</span> (rc)</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't set input mA rc=%d\n"</span>, rc);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mask = CMD_B_CHG_HC_ENABLE_BIT | CMD_B_CHG_USB_500_900_ENABLE_BIT;</span><br><span class="line">rc = smb358_masked_write(chip, CMD_B_REG, mask, reg2);</span><br><span class="line"><span class="keyword">if</span> (rc &lt; <span class="number">0</span>)</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't set charging mode rc = %d\n"</span>, rc);</span><br><span class="line"></span><br><span class="line">mask = USB3_ENABLE_MASK;</span><br><span class="line">rc = smb358_masked_write(chip, SYSOK_AND_USB3_REG, mask, reg1);</span><br><span class="line"><span class="keyword">if</span> (rc &lt; <span class="number">0</span>)</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't set USB3 mode rc = %d\n"</span>, rc);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Only set suspend bit when chg present and current_ma = 2 */</span></span><br><span class="line"><span class="comment">//if (current_ma == 2 &amp;&amp; chip-&gt;chg_present) &#123;</span></span><br><span class="line"><span class="keyword">if</span> (current_ma == <span class="number">2</span> &amp;&amp; chip-&gt;chg_present &amp;&amp; !chip-&gt;battery_missing) &#123;</span><br><span class="line">rc = smb358_path_suspend(chip, CURRENT, <span class="literal">true</span>);</span><br><span class="line"><span class="keyword">if</span> (rc &lt; <span class="number">0</span>)</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't suspend rc = %d\n"</span>, rc);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">rc = smb358_path_suspend(chip, CURRENT, <span class="literal">false</span>);</span><br><span class="line"><span class="keyword">if</span> (rc &lt; <span class="number">0</span>)</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't set susp rc = %d\n"</span>, rc);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span></span><br><span class="line">smb358_batt_property_is_writeable(struct power_supply *psy,</span><br><span class="line"><span class="keyword">enum</span> power_supply_property psp)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span> (psp) &#123;</span><br><span class="line"><span class="keyword">case</span> POWER_SUPPLY_PROP_CHARGING_ENABLED:</span><br><span class="line"><span class="keyword">case</span> POWER_SUPPLY_PROP_CAPACITY:</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">bound_soc</span><span class="params">(<span class="keyword">int</span> soc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">soc = max(<span class="number">0</span>, soc);</span><br><span class="line">soc = min(soc, <span class="number">100</span>);</span><br><span class="line"><span class="keyword">return</span> soc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">smb358_battery_set_property</span><span class="params">(struct power_supply *psy,</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">enum</span> power_supply_property prop,</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">const</span> <span class="keyword">union</span> power_supply_propval *val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rc;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">smb358_charger</span> *<span class="title">chip</span> = <span class="title">container_of</span>(<span class="title">psy</span>,</span></span><br><span class="line"><span class="class"><span class="title">struct</span> <span class="title">smb358_charger</span>, <span class="title">batt_psy</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (prop) &#123;</span><br><span class="line"><span class="keyword">case</span> POWER_SUPPLY_PROP_STATUS:</span><br><span class="line"><span class="keyword">if</span> (!chip-&gt;bms_controlled_charging)</span><br><span class="line"><span class="keyword">return</span> -EINVAL;</span><br><span class="line"><span class="keyword">switch</span> (val-&gt;intval) &#123;</span><br><span class="line"><span class="keyword">case</span> POWER_SUPPLY_STATUS_FULL:</span><br><span class="line">rc = smb358_charging_disable(chip, SOC, <span class="literal">true</span>);</span><br><span class="line"><span class="keyword">if</span> (rc &lt; <span class="number">0</span>) &#123;</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"Couldn't set charging disable rc = %d\n"</span>,</span><br><span class="line">rc);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">chip-&gt;batt_full = <span class="literal">true</span>;</span><br><span class="line">dev_dbg(chip-&gt;dev, <span class="string">"status = FULL, batt_full = %d\n"</span>,</span><br><span class="line">chip-&gt;batt_full);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> POWER_SUPPLY_STATUS_DISCHARGING:</span><br><span class="line">chip-&gt;batt_full = <span class="literal">false</span>;</span><br><span class="line">power_supply_changed(&amp;chip-&gt;batt_psy);</span><br><span class="line">dev_dbg(chip-&gt;dev, <span class="string">"status = DISCHARGING, batt_full = %d\n"</span>,</span><br><span class="line">chip-&gt;batt_full);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> POWER_SUPPLY_STATUS_CHARGING:</span><br><span class="line">rc = smb358_charging_disable(chip, SOC, <span class="literal">false</span>);</span><br><span class="line"><span class="keyword">if</span> (rc &lt; <span class="number">0</span>) &#123;</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"Couldn't set charging disable rc = %d\n"</span>,</span><br><span class="line">rc);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">chip-&gt;batt_full = <span class="literal">false</span>;</span><br><span class="line">dev_dbg(chip-&gt;dev, <span class="string">"status = CHARGING, batt_full = %d\n"</span>,</span><br><span class="line">chip-&gt;batt_full);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">return</span> -EINVAL;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> POWER_SUPPLY_PROP_CHARGING_ENABLED:</span><br><span class="line">smb358_charging_disable(chip, USER, !val-&gt;intval);</span><br><span class="line">smb358_path_suspend(chip, USER, !val-&gt;intval);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> POWER_SUPPLY_PROP_CAPACITY:</span><br><span class="line">chip-&gt;fake_battery_soc = bound_soc(val-&gt;intval);</span><br><span class="line">power_supply_changed(&amp;chip-&gt;batt_psy);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">return</span> -EINVAL;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">smb358_battery_get_property</span><span class="params">(struct power_supply *psy,</span></span></span><br><span class="line"><span class="function"><span class="params">       <span class="keyword">enum</span> power_supply_property prop,</span></span></span><br><span class="line"><span class="function"><span class="params">       <span class="keyword">union</span> power_supply_propval *val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">smb358_charger</span> *<span class="title">chip</span> = <span class="title">container_of</span>(<span class="title">psy</span>,</span></span><br><span class="line"><span class="class"><span class="title">struct</span> <span class="title">smb358_charger</span>, <span class="title">batt_psy</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (prop) &#123;</span><br><span class="line"><span class="keyword">case</span> POWER_SUPPLY_PROP_STATUS:</span><br><span class="line">val-&gt;intval = smb358_get_prop_batt_status(chip);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> POWER_SUPPLY_PROP_PRESENT:</span><br><span class="line">val-&gt;intval = smb358_get_prop_batt_present(chip);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> POWER_SUPPLY_PROP_CAPACITY:</span><br><span class="line">val-&gt;intval = smb358_get_prop_batt_capacity(chip);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> POWER_SUPPLY_PROP_CHARGING_ENABLED:</span><br><span class="line">val-&gt;intval = !(chip-&gt;charging_disabled_status &amp; USER);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> POWER_SUPPLY_PROP_CHARGE_TYPE:</span><br><span class="line">val-&gt;intval = smb358_get_prop_charge_type(chip);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> POWER_SUPPLY_PROP_HEALTH:</span><br><span class="line">val-&gt;intval = smb358_get_prop_batt_health(chip);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> POWER_SUPPLY_PROP_TECHNOLOGY:</span><br><span class="line">val-&gt;intval = POWER_SUPPLY_TECHNOLOGY_LION;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> POWER_SUPPLY_PROP_MODEL_NAME:</span><br><span class="line">val-&gt;strval = <span class="string">"SMB358"</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> POWER_SUPPLY_PROP_TEMP:</span><br><span class="line">val-&gt;intval = smb358_get_prop_batt_temp(chip);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> POWER_SUPPLY_PROP_VOLTAGE_NOW:</span><br><span class="line">val-&gt;intval = smb358_get_prop_battery_voltage_now(chip);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">return</span> -EINVAL;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">apsd_complete</span><span class="params">(struct smb358_charger *chip, u8 status)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rc;</span><br><span class="line">u8 reg = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">enum</span> power_supply_type type = POWER_SUPPLY_TYPE_UNKNOWN;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * If apsd is disabled, charger detection is done by</span></span><br><span class="line"><span class="comment"> * DCIN UV irq.</span></span><br><span class="line"><span class="comment"> * status = ZERO - indicates charger removed, handled</span></span><br><span class="line"><span class="comment"> * by DCIN UV irq</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">if</span> (chip-&gt;disable_apsd || status == <span class="number">0</span>) &#123;</span><br><span class="line">dev_dbg(chip-&gt;dev, <span class="string">"APSD %s, status = %d\n"</span>,</span><br><span class="line">chip-&gt;disable_apsd ? <span class="string">"disabled"</span> : <span class="string">"enabled"</span>, !!status);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rc = smb358_read_reg(chip, STATUS_D_REG, &amp;reg);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't read STATUS D rc = %d\n"</span>, rc);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dev_dbg(chip-&gt;dev, <span class="string">"%s: STATUS_D_REG=%x\n"</span>, __func__, reg);</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (reg &amp; STATUS_D_CHARGING_PORT_MASK) &#123;</span><br><span class="line"><span class="keyword">case</span> STATUS_D_PORT_ACA_DOCK:</span><br><span class="line"><span class="keyword">case</span> STATUS_D_PORT_ACA_C:</span><br><span class="line"><span class="keyword">case</span> STATUS_D_PORT_ACA_B:</span><br><span class="line"><span class="keyword">case</span> STATUS_D_PORT_ACA_A:</span><br><span class="line">type = POWER_SUPPLY_TYPE_USB_ACA;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> STATUS_D_PORT_CDP:</span><br><span class="line">type = POWER_SUPPLY_TYPE_USB_CDP;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> STATUS_D_PORT_DCP:</span><br><span class="line">type = POWER_SUPPLY_TYPE_USB_DCP;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> STATUS_D_PORT_SDP:</span><br><span class="line">type = POWER_SUPPLY_TYPE_USB;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> STATUS_D_PORT_OTHER:</span><br><span class="line">type = POWER_SUPPLY_TYPE_USB_DCP;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">type = POWER_SUPPLY_TYPE_USB;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">chip-&gt;chg_present = !!status;</span><br><span class="line"></span><br><span class="line">dev_dbg(chip-&gt;dev, <span class="string">"APSD complete. USB type detected=%d chg_present=%d"</span>,</span><br><span class="line">type, chip-&gt;chg_present);</span><br><span class="line"></span><br><span class="line">power_supply_set_supply_type(chip-&gt;usb_psy, type);</span><br><span class="line"></span><br><span class="line"> <span class="comment">/* SMB is now done sampling the D+/D- lines, indicate USB driver */</span></span><br><span class="line">dev_dbg(chip-&gt;dev, <span class="string">"%s updating usb_psy present=%d"</span>, __func__,</span><br><span class="line">chip-&gt;chg_present);</span><br><span class="line">power_supply_set_present(chip-&gt;usb_psy, chip-&gt;chg_present);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">check_tmep</span><span class="params">(struct smb358_charger *chip, u8 status)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> temp_vol = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!chip-&gt;battery_missing) &#123;</span><br><span class="line">pr_err(<span class="string">"the status is:%#x\n"</span>, status);</span><br><span class="line">temp_vol = smb358_get_prop_batt_temp(chip);</span><br><span class="line"><span class="keyword">if</span> (temp_vol &gt; TEMP_OVER_COLD_VOLTAGE)</span><br><span class="line">chip-&gt;battery_missing = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">chg_uv</span><span class="params">(struct smb358_charger *chip, u8 status)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rc;</span><br><span class="line"><span class="comment">/* use this to detect USB insertion only if !apsd */</span></span><br><span class="line"><span class="keyword">if</span> (chip-&gt;disable_apsd &amp;&amp; status == <span class="number">0</span>) &#123;</span><br><span class="line">chip-&gt;chg_present = <span class="literal">true</span>;</span><br><span class="line">dev_dbg(chip-&gt;dev, <span class="string">"%s updating usb_psy present=%d"</span>,</span><br><span class="line">__func__, chip-&gt;chg_present);</span><br><span class="line">power_supply_set_supply_type(chip-&gt;usb_psy,</span><br><span class="line">POWER_SUPPLY_TYPE_USB);</span><br><span class="line">power_supply_set_present(chip-&gt;usb_psy, chip-&gt;chg_present);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (chip-&gt;bms_controlled_charging) &#123;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* Disable SOC based USB suspend to enable charging on</span></span><br><span class="line"><span class="comment">* USB insertion.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">rc = smb358_charging_disable(chip, SOC, <span class="literal">false</span>);</span><br><span class="line"><span class="keyword">if</span> (rc &lt; <span class="number">0</span>)</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"Couldn't disable usb suspend rc = %d\n"</span>,</span><br><span class="line">rc);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (status != <span class="number">0</span>) &#123;</span><br><span class="line">chip-&gt;chg_present = <span class="literal">false</span>;</span><br><span class="line">dev_dbg(chip-&gt;dev, <span class="string">"%s updating usb_psy present=%d"</span>,</span><br><span class="line">__func__, chip-&gt;chg_present);</span><br><span class="line"><span class="comment">/* we can't set usb_psy as UNKNOWN here, will lead USERSPACE issue */</span></span><br><span class="line">power_supply_set_present(chip-&gt;usb_psy, chip-&gt;chg_present);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">power_supply_changed(chip-&gt;usb_psy);</span><br><span class="line">dev_dbg(chip-&gt;dev, <span class="string">"chip-&gt;chg_present = %d\n"</span>, chip-&gt;chg_present);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">chg_ov</span><span class="params">(struct smb358_charger *chip, u8 status)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">u8 psy_health_sts;</span><br><span class="line"><span class="keyword">if</span> (status)</span><br><span class="line">psy_health_sts = POWER_SUPPLY_HEALTH_OVERVOLTAGE;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">psy_health_sts = POWER_SUPPLY_HEALTH_GOOD;</span><br><span class="line"></span><br><span class="line">power_supply_set_health_state(</span><br><span class="line">chip-&gt;usb_psy, psy_health_sts);</span><br><span class="line">power_supply_changed(chip-&gt;usb_psy);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STATUS_FAST_CHARGING BIT(6)</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">fast_chg</span><span class="params">(struct smb358_charger *chip, u8 status)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">dev_dbg(chip-&gt;dev, <span class="string">"%s\n"</span>, __func__);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (status &amp; STATUS_FAST_CHARGING)</span><br><span class="line">chip-&gt;batt_full = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">chg_term</span><span class="params">(struct smb358_charger *chip, u8 status)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">dev_dbg(chip-&gt;dev, <span class="string">"%s\n"</span>, __func__);</span><br><span class="line"><span class="keyword">if</span> (!chip-&gt;iterm_disabled)</span><br><span class="line">chip-&gt;batt_full = !!status;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">taper_chg</span><span class="params">(struct smb358_charger *chip, u8 status)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">dev_dbg(chip-&gt;dev, <span class="string">"%s\n"</span>, __func__);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">chg_recharge</span><span class="params">(struct smb358_charger *chip, u8 status)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">dev_dbg(chip-&gt;dev, <span class="string">"%s, status = %d\n"</span>, __func__, !!status);</span><br><span class="line"><span class="comment">/* to check the status mean */</span></span><br><span class="line">chip-&gt;batt_full = !status;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">smb358_chg_set_appropriate_battery_current</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">struct smb358_charger *chip)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rc;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> current_max = chip-&gt;fastchg_current_max_ma;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (chip-&gt;batt_cool)</span><br><span class="line">current_max =</span><br><span class="line">min(current_max, chip-&gt;cool_bat_ma);</span><br><span class="line"><span class="keyword">if</span> (chip-&gt;batt_warm)</span><br><span class="line">current_max =</span><br><span class="line">min(current_max, chip-&gt;warm_bat_ma);</span><br><span class="line">dev_dbg(chip-&gt;dev, <span class="string">"setting %dmA"</span>, current_max);</span><br><span class="line">rc = smb358_fastchg_current_set(chip, current_max);</span><br><span class="line"><span class="keyword">if</span> (rc)</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"Couldn't set charging current rc = %d\n"</span>, rc);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">smb358_chg_set_appropriate_vddmax</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">struct smb358_charger *chip)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rc;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> vddmax = chip-&gt;vfloat_mv;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (chip-&gt;batt_cool)</span><br><span class="line">vddmax = min(vddmax, chip-&gt;cool_bat_mv);</span><br><span class="line"><span class="keyword">if</span> (chip-&gt;batt_warm)</span><br><span class="line">vddmax = min(vddmax, chip-&gt;warm_bat_mv);</span><br><span class="line"></span><br><span class="line">dev_dbg(chip-&gt;dev, <span class="string">"setting %dmV\n"</span>, vddmax);</span><br><span class="line">rc = smb358_float_voltage_set(chip, vddmax);</span><br><span class="line"><span class="keyword">if</span> (rc)</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"Couldn't set float voltage rc = %d\n"</span>, rc);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> HYSTERESIS_DECIDEGC 20</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">smb_chg_adc_notification</span><span class="params">(<span class="keyword">enum</span> qpnp_tm_state state, <span class="keyword">void</span> *ctx)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">smb358_charger</span> *<span class="title">chip</span> = <span class="title">ctx</span>;</span></span><br><span class="line"><span class="keyword">bool</span> bat_hot = <span class="number">0</span>, bat_cold = <span class="number">0</span>, bat_present = <span class="number">0</span>, bat_warm = <span class="number">0</span>,</span><br><span class="line">bat_cool = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> temp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (state &gt;= ADC_TM_STATE_NUM) &#123;</span><br><span class="line">pr_err(<span class="string">"invallid state parameter %d\n"</span>, state);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">temp = smb358_get_prop_batt_temp(chip);</span><br><span class="line"></span><br><span class="line">pr_debug(<span class="string">"temp = %d state = %s\n"</span>, temp,</span><br><span class="line">state == ADC_TM_WARM_STATE ? <span class="string">"hot"</span> : <span class="string">"cold"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (state == ADC_TM_WARM_STATE) &#123;</span><br><span class="line"><span class="keyword">if</span> (temp &gt;= chip-&gt;hot_bat_decidegc) &#123;</span><br><span class="line">bat_hot = <span class="literal">true</span>;</span><br><span class="line">bat_warm = <span class="literal">false</span>;</span><br><span class="line">bat_cold = <span class="literal">false</span>;</span><br><span class="line">bat_cool = <span class="literal">false</span>;</span><br><span class="line">bat_present = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">chip-&gt;adc_param.low_temp =</span><br><span class="line">chip-&gt;hot_bat_decidegc - HYSTERESIS_DECIDEGC;</span><br><span class="line">chip-&gt;adc_param.state_request =</span><br><span class="line">ADC_TM_COOL_THR_ENABLE;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (temp &gt;=</span><br><span class="line">chip-&gt;warm_bat_decidegc &amp;&amp; chip-&gt;jeita_supported) &#123;</span><br><span class="line">bat_hot = <span class="literal">false</span>;</span><br><span class="line">bat_warm = <span class="literal">true</span>;</span><br><span class="line">bat_cold = <span class="literal">false</span>;</span><br><span class="line">bat_cool = <span class="literal">false</span>;</span><br><span class="line">bat_present = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">chip-&gt;adc_param.low_temp =</span><br><span class="line">chip-&gt;warm_bat_decidegc - HYSTERESIS_DECIDEGC;</span><br><span class="line">chip-&gt;adc_param.high_temp =</span><br><span class="line">chip-&gt;hot_bat_decidegc;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (temp &gt;=</span><br><span class="line">chip-&gt;cool_bat_decidegc &amp;&amp; chip-&gt;jeita_supported) &#123;</span><br><span class="line">bat_hot = <span class="literal">false</span>;</span><br><span class="line">bat_warm = <span class="literal">false</span>;</span><br><span class="line">bat_cold = <span class="literal">false</span>;</span><br><span class="line">bat_cool = <span class="literal">false</span>;</span><br><span class="line">bat_present = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">chip-&gt;adc_param.low_temp =</span><br><span class="line">chip-&gt;cool_bat_decidegc - HYSTERESIS_DECIDEGC;</span><br><span class="line">chip-&gt;adc_param.high_temp =</span><br><span class="line">chip-&gt;warm_bat_decidegc;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (temp &gt;=</span><br><span class="line">chip-&gt;cold_bat_decidegc) &#123;</span><br><span class="line">bat_hot = <span class="literal">false</span>;</span><br><span class="line">bat_warm = <span class="literal">false</span>;</span><br><span class="line">bat_cold = <span class="literal">false</span>;</span><br><span class="line">bat_cool = <span class="literal">true</span>;</span><br><span class="line">bat_present = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">chip-&gt;adc_param.low_temp =</span><br><span class="line">chip-&gt;cold_bat_decidegc - HYSTERESIS_DECIDEGC;</span><br><span class="line"><span class="keyword">if</span> (chip-&gt;jeita_supported)</span><br><span class="line">chip-&gt;adc_param.high_temp =</span><br><span class="line">chip-&gt;cool_bat_decidegc;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">chip-&gt;adc_param.high_temp =</span><br><span class="line">chip-&gt;hot_bat_decidegc;</span><br><span class="line">chip-&gt;adc_param.state_request =</span><br><span class="line">ADC_TM_HIGH_LOW_THR_ENABLE;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (temp &gt;= chip-&gt;bat_present_decidegc) &#123;</span><br><span class="line">bat_hot = <span class="literal">false</span>;</span><br><span class="line">bat_warm = <span class="literal">false</span>;</span><br><span class="line">bat_cold = <span class="literal">true</span>;</span><br><span class="line">bat_cool = <span class="literal">false</span>;</span><br><span class="line">bat_present = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">chip-&gt;adc_param.high_temp = chip-&gt;cold_bat_decidegc;</span><br><span class="line">chip-&gt;adc_param.low_temp = chip-&gt;bat_present_decidegc</span><br><span class="line">- HYSTERESIS_DECIDEGC;</span><br><span class="line">chip-&gt;adc_param.state_request =</span><br><span class="line">ADC_TM_HIGH_LOW_THR_ENABLE;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (temp &lt;= chip-&gt;bat_present_decidegc) &#123;</span><br><span class="line">bat_cold = <span class="literal">true</span>;</span><br><span class="line">bat_cool = <span class="literal">false</span>;</span><br><span class="line">bat_hot = <span class="literal">false</span>;</span><br><span class="line">bat_warm = <span class="literal">false</span>;</span><br><span class="line">bat_present = <span class="literal">false</span>;</span><br><span class="line">chip-&gt;adc_param.high_temp = chip-&gt;bat_present_decidegc</span><br><span class="line">+ HYSTERESIS_DECIDEGC;</span><br><span class="line">chip-&gt;adc_param.state_request =</span><br><span class="line">ADC_TM_WARM_THR_ENABLE;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (temp &lt;= chip-&gt;cold_bat_decidegc) &#123;</span><br><span class="line">bat_hot = <span class="literal">false</span>;</span><br><span class="line">bat_warm = <span class="literal">false</span>;</span><br><span class="line">bat_cold = <span class="literal">true</span>;</span><br><span class="line">bat_cool = <span class="literal">false</span>;</span><br><span class="line">bat_present = <span class="literal">true</span>;</span><br><span class="line">chip-&gt;adc_param.high_temp =</span><br><span class="line">chip-&gt;cold_bat_decidegc + HYSTERESIS_DECIDEGC;</span><br><span class="line"><span class="comment">/* add low_temp to enable batt present check */</span></span><br><span class="line">chip-&gt;adc_param.low_temp =</span><br><span class="line">chip-&gt;bat_present_decidegc;</span><br><span class="line">chip-&gt;adc_param.state_request =</span><br><span class="line">ADC_TM_HIGH_LOW_THR_ENABLE;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (temp &lt;= chip-&gt;cool_bat_decidegc &amp;&amp;</span><br><span class="line">chip-&gt;jeita_supported) &#123;</span><br><span class="line">bat_hot = <span class="literal">false</span>;</span><br><span class="line">bat_warm = <span class="literal">false</span>;</span><br><span class="line">bat_cold = <span class="literal">false</span>;</span><br><span class="line">bat_cool = <span class="literal">true</span>;</span><br><span class="line">bat_present = <span class="literal">true</span>;</span><br><span class="line">chip-&gt;adc_param.high_temp =</span><br><span class="line">chip-&gt;cool_bat_decidegc + HYSTERESIS_DECIDEGC;</span><br><span class="line">chip-&gt;adc_param.low_temp =</span><br><span class="line">chip-&gt;cold_bat_decidegc;</span><br><span class="line">chip-&gt;adc_param.state_request =</span><br><span class="line">ADC_TM_HIGH_LOW_THR_ENABLE;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (temp &lt;= chip-&gt;warm_bat_decidegc &amp;&amp;</span><br><span class="line">chip-&gt;jeita_supported) &#123;</span><br><span class="line">bat_hot = <span class="literal">false</span>;</span><br><span class="line">bat_warm = <span class="literal">false</span>;</span><br><span class="line">bat_cold = <span class="literal">false</span>;</span><br><span class="line">bat_cool = <span class="literal">false</span>;</span><br><span class="line">bat_present = <span class="literal">true</span>;</span><br><span class="line">chip-&gt;adc_param.high_temp =</span><br><span class="line">chip-&gt;warm_bat_decidegc + HYSTERESIS_DECIDEGC;</span><br><span class="line">chip-&gt;adc_param.low_temp =</span><br><span class="line">chip-&gt;cool_bat_decidegc;</span><br><span class="line">chip-&gt;adc_param.state_request =</span><br><span class="line">ADC_TM_HIGH_LOW_THR_ENABLE;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (temp &lt;= chip-&gt;hot_bat_decidegc) &#123;</span><br><span class="line">bat_hot = <span class="literal">false</span>;</span><br><span class="line">bat_warm = <span class="literal">true</span>;</span><br><span class="line">bat_cold = <span class="literal">false</span>;</span><br><span class="line">bat_cool = <span class="literal">false</span>;</span><br><span class="line">bat_present = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span> (chip-&gt;jeita_supported)</span><br><span class="line">chip-&gt;adc_param.low_temp =</span><br><span class="line">chip-&gt;warm_bat_decidegc;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">chip-&gt;adc_param.low_temp =</span><br><span class="line">chip-&gt;cold_bat_decidegc;</span><br><span class="line">chip-&gt;adc_param.high_temp =</span><br><span class="line">chip-&gt;hot_bat_decidegc + HYSTERESIS_DECIDEGC;</span><br><span class="line">chip-&gt;adc_param.state_request =</span><br><span class="line">ADC_TM_HIGH_LOW_THR_ENABLE;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (bat_present)</span><br><span class="line">chip-&gt;battery_missing = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">chip-&gt;battery_missing = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (bat_hot ^ chip-&gt;batt_hot || bat_cold ^ chip-&gt;batt_cold) &#123;</span><br><span class="line">chip-&gt;batt_hot = bat_hot;</span><br><span class="line">chip-&gt;batt_cold = bat_cold;</span><br><span class="line"><span class="comment">/* stop charging explicitly since we use PMIC thermal pin*/</span></span><br><span class="line"><span class="keyword">if</span> (bat_hot || bat_cold || chip-&gt;battery_missing)</span><br><span class="line">smb358_charging_disable(chip, THERMAL, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">smb358_charging_disable(chip, THERMAL, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((chip-&gt;batt_warm ^ bat_warm || chip-&gt;batt_cool ^ bat_cool)</span><br><span class="line">&amp;&amp; chip-&gt;jeita_supported) &#123;</span><br><span class="line">chip-&gt;batt_warm = bat_warm;</span><br><span class="line">chip-&gt;batt_cool = bat_cool;</span><br><span class="line">smb358_chg_set_appropriate_battery_current(chip);</span><br><span class="line">smb358_chg_set_appropriate_vddmax(chip);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pr_debug(<span class="string">"hot %d, cold %d, warm %d, cool %d, jeita supported %d, missing %d, low = %d deciDegC, high = %d deciDegC\n"</span>,</span><br><span class="line">chip-&gt;batt_hot, chip-&gt;batt_cold, chip-&gt;batt_warm,</span><br><span class="line">chip-&gt;batt_cool, chip-&gt;jeita_supported, chip-&gt;battery_missing,</span><br><span class="line">chip-&gt;adc_param.low_temp, chip-&gt;adc_param.high_temp);</span><br><span class="line"><span class="keyword">if</span> (qpnp_adc_tm_channel_measure(chip-&gt;adc_tm_dev, &amp;chip-&gt;adc_param))</span><br><span class="line">pr_err(<span class="string">"request ADC error\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* only for SMB thermal */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">hot_hard_handler</span><span class="params">(struct smb358_charger *chip, u8 status)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">pr_debug(<span class="string">"status = 0x%02x\n"</span>, status);</span><br><span class="line">chip-&gt;batt_hot = !!status;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">cold_hard_handler</span><span class="params">(struct smb358_charger *chip, u8 status)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">pr_debug(<span class="string">"status = 0x%02x\n"</span>, status);</span><br><span class="line">chip-&gt;batt_cold = !!status;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">hot_soft_handler</span><span class="params">(struct smb358_charger *chip, u8 status)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">pr_debug(<span class="string">"status = 0x%02x\n"</span>, status);</span><br><span class="line">chip-&gt;batt_warm = !!status;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">cold_soft_handler</span><span class="params">(struct smb358_charger *chip, u8 status)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">pr_debug(<span class="string">"status = 0x%02x\n"</span>, status);</span><br><span class="line">chip-&gt;batt_cool = !!status;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">battery_missing</span><span class="params">(struct smb358_charger *chip, u8 status)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> temp_vol = <span class="number">0</span>;</span><br><span class="line">pr_err(<span class="string">"=========the status is:%#x\n"</span>, status);</span><br><span class="line"><span class="keyword">if</span> (status) &#123;</span><br><span class="line">temp_vol = smb358_get_prop_batt_temp(chip);</span><br><span class="line"><span class="keyword">if</span> (temp_vol &gt; TEMP_OVER_COLD_VOLTAGE)</span><br><span class="line">chip-&gt;battery_missing = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">chip-&gt;battery_missing = !!status;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">irq_handler_info</span> <span class="title">handlers</span>[] = &#123;</span></span><br><span class="line">[<span class="number">0</span>] = &#123;</span><br><span class="line">.stat_reg= IRQ_A_REG,</span><br><span class="line">.val= <span class="number">0</span>,</span><br><span class="line">.prev_val= <span class="number">0</span>,</span><br><span class="line">.irq_info= &#123;</span><br><span class="line">&#123;</span><br><span class="line">.name= <span class="string">"cold_soft"</span>,</span><br><span class="line">.smb_irq= cold_soft_handler,</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">.name= <span class="string">"hot_soft"</span>,</span><br><span class="line">.smb_irq= hot_soft_handler,</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">.name= <span class="string">"cold_hard"</span>,</span><br><span class="line">.smb_irq= cold_hard_handler,</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">.name= <span class="string">"hot_hard"</span>,</span><br><span class="line">.smb_irq= hot_hard_handler,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;,</span><br><span class="line">[<span class="number">1</span>] = &#123;</span><br><span class="line">.stat_reg= IRQ_B_REG,</span><br><span class="line">.val= <span class="number">0</span>,</span><br><span class="line">.prev_val= <span class="number">0</span>,</span><br><span class="line">.irq_info= &#123;</span><br><span class="line">&#123;</span><br><span class="line">.name= <span class="string">"chg_hot"</span>,</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">.name= <span class="string">"vbat_low"</span>,</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">.name= <span class="string">"battery_missing"</span>,</span><br><span class="line">.smb_irq= battery_missing</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">.name= <span class="string">"battery_ov"</span>,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;,</span><br><span class="line">[<span class="number">2</span>] = &#123;</span><br><span class="line">.stat_reg= IRQ_C_REG,</span><br><span class="line">.val= <span class="number">0</span>,</span><br><span class="line">.prev_val= <span class="number">0</span>,</span><br><span class="line">.irq_info= &#123;</span><br><span class="line">&#123;</span><br><span class="line">.name= <span class="string">"chg_term"</span>,</span><br><span class="line">.smb_irq= chg_term,</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">.name= <span class="string">"taper"</span>,</span><br><span class="line">.smb_irq= taper_chg,</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">.name= <span class="string">"recharge"</span>,</span><br><span class="line">.smb_irq= chg_recharge,</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">.name= <span class="string">"fast_chg"</span>,</span><br><span class="line">.smb_irq= fast_chg,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;,</span><br><span class="line">[<span class="number">3</span>] = &#123;</span><br><span class="line">.stat_reg= IRQ_D_REG,</span><br><span class="line">.val= <span class="number">0</span>,</span><br><span class="line">.prev_val= <span class="number">0</span>,</span><br><span class="line">.irq_info= &#123;</span><br><span class="line">&#123;</span><br><span class="line">.name= <span class="string">"prechg_timeout"</span>,</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">.name= <span class="string">"safety_timeout"</span>,</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">.name= <span class="string">"aicl_complete"</span>,</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">.name= <span class="string">"src_detect"</span>,</span><br><span class="line">.smb_irq= apsd_complete,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;,</span><br><span class="line">[<span class="number">4</span>] = &#123;</span><br><span class="line">.stat_reg= IRQ_E_REG,</span><br><span class="line">.val= <span class="number">0</span>,</span><br><span class="line">.prev_val= <span class="number">0</span>,</span><br><span class="line">.irq_info= &#123;</span><br><span class="line">&#123;</span><br><span class="line">.name= <span class="string">"usbin_uv"</span>,</span><br><span class="line">.smb_irq        = chg_uv,</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">.name= <span class="string">"usbin_ov"</span>,</span><br><span class="line">.smb_irq= chg_ov,</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">.name= <span class="string">"unknown"</span>,</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">.name= <span class="string">"unknown"</span>,</span><br><span class="line"><span class="comment">//.name= "check_tmep",</span></span><br><span class="line"><span class="comment">//.smb_irq= check_tmep,</span></span><br><span class="line">&#125;,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;,</span><br><span class="line">[<span class="number">5</span>] = &#123;</span><br><span class="line">.stat_reg= IRQ_F_REG,</span><br><span class="line">.val= <span class="number">0</span>,</span><br><span class="line">.prev_val= <span class="number">0</span>,</span><br><span class="line">.irq_info= &#123;</span><br><span class="line">&#123;</span><br><span class="line">.name= <span class="string">"power_ok"</span>,</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">.name= <span class="string">"otg_det"</span>,</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">.name= <span class="string">"otg_batt_uv"</span>,</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">.name= <span class="string">"otg_oc"</span>,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IRQ_LATCHED_MASK0x02</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IRQ_STATUS_MASK0x01</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BITS_PER_IRQ2</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> irqreturn_t <span class="title">smb358_chg_stat_handler</span><span class="params">(<span class="keyword">int</span> irq, <span class="keyword">void</span> *dev_id)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">smb358_charger</span> *<span class="title">chip</span> = <span class="title">dev_id</span>;</span></span><br><span class="line"><span class="keyword">int</span> i, j;</span><br><span class="line">u8 triggered;</span><br><span class="line">u8 changed;</span><br><span class="line">u8 rt_stat, prev_rt_stat;</span><br><span class="line"><span class="keyword">int</span> rc;</span><br><span class="line"><span class="keyword">int</span> handler_count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">mutex_lock(&amp;chip-&gt;irq_complete);</span><br><span class="line"></span><br><span class="line">chip-&gt;irq_waiting = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span> (!chip-&gt;resume_completed) &#123;</span><br><span class="line">dev_dbg(chip-&gt;dev, <span class="string">"IRQ triggered before device-resume\n"</span>);</span><br><span class="line">disable_irq_nosync(irq);</span><br><span class="line">mutex_unlock(&amp;chip-&gt;irq_complete);</span><br><span class="line"><span class="keyword">return</span> IRQ_HANDLED;</span><br><span class="line">&#125;</span><br><span class="line">chip-&gt;irq_waiting = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; ARRAY_SIZE(handlers); i++) &#123;</span><br><span class="line">rc = smb358_read_reg(chip, handlers[i].stat_reg,</span><br><span class="line">&amp;handlers[i].val);</span><br><span class="line"><span class="keyword">if</span> (rc &lt; <span class="number">0</span>) &#123;</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't read %d rc = %d\n"</span>,</span><br><span class="line">handlers[i].stat_reg, rc);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; ARRAY_SIZE(handlers[i].irq_info); j++) &#123;</span><br><span class="line">triggered = handlers[i].val</span><br><span class="line">       &amp; (IRQ_LATCHED_MASK &lt;&lt; (j * BITS_PER_IRQ));</span><br><span class="line">rt_stat = handlers[i].val</span><br><span class="line">&amp; (IRQ_STATUS_MASK &lt;&lt; (j * BITS_PER_IRQ));</span><br><span class="line">prev_rt_stat = handlers[i].prev_val</span><br><span class="line">&amp; (IRQ_STATUS_MASK &lt;&lt; (j * BITS_PER_IRQ));</span><br><span class="line">changed = prev_rt_stat ^ rt_stat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (triggered || changed)</span><br><span class="line">rt_stat ? handlers[i].irq_info[j].high++ :</span><br><span class="line">handlers[i].irq_info[j].low++;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((triggered || changed)</span><br><span class="line">&amp;&amp; handlers[i].irq_info[j].smb_irq != <span class="literal">NULL</span>) &#123;</span><br><span class="line">handler_count++;</span><br><span class="line">rc = handlers[i].irq_info[j].smb_irq(chip,</span><br><span class="line">rt_stat);</span><br><span class="line"><span class="keyword">if</span> (rc &lt; <span class="number">0</span>)</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"Couldn't handle %d irq for reg 0x%02x rc = %d\n"</span>,</span><br><span class="line">j, handlers[i].stat_reg, rc);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">handlers[i].prev_val = handlers[i].val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pr_debug(<span class="string">"handler count = %d\n"</span>, handler_count);</span><br><span class="line"><span class="keyword">if</span> (handler_count) &#123;</span><br><span class="line">pr_debug(<span class="string">"batt psy changed\n"</span>);</span><br><span class="line">power_supply_changed(&amp;chip-&gt;batt_psy);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mutex_unlock(&amp;chip-&gt;irq_complete);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> IRQ_HANDLED;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> irqreturn_t <span class="title">smb358_chg_valid_handler</span><span class="params">(<span class="keyword">int</span> irq, <span class="keyword">void</span> *dev_id)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">smb358_charger</span> *<span class="title">chip</span> = <span class="title">dev_id</span>;</span></span><br><span class="line"><span class="keyword">int</span> present;</span><br><span class="line"></span><br><span class="line">present = gpio_get_value_cansleep(chip-&gt;chg_valid_gpio);</span><br><span class="line"><span class="keyword">if</span> (present &lt; <span class="number">0</span>) &#123;</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't read chg_valid gpio=%d\n"</span>,</span><br><span class="line">chip-&gt;chg_valid_gpio);</span><br><span class="line"><span class="keyword">return</span> IRQ_HANDLED;</span><br><span class="line">&#125;</span><br><span class="line">present ^= chip-&gt;chg_valid_act_low;</span><br><span class="line"></span><br><span class="line">dev_dbg(chip-&gt;dev, <span class="string">"%s: chg_present = %d\n"</span>, __func__, present);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (present != chip-&gt;chg_present) &#123;</span><br><span class="line">chip-&gt;chg_present = present;</span><br><span class="line">dev_dbg(chip-&gt;dev, <span class="string">"%s updating usb_psy present=%d"</span>,</span><br><span class="line">__func__, chip-&gt;chg_present);</span><br><span class="line">power_supply_set_present(chip-&gt;usb_psy, chip-&gt;chg_present);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> IRQ_HANDLED;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">smb358_external_power_changed</span><span class="params">(struct power_supply *psy)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">smb358_charger</span> *<span class="title">chip</span> = <span class="title">container_of</span>(<span class="title">psy</span>,</span></span><br><span class="line"><span class="class"><span class="title">struct</span> <span class="title">smb358_charger</span>, <span class="title">batt_psy</span>);</span></span><br><span class="line"><span class="keyword">union</span> power_supply_propval prop = &#123;<span class="number">0</span>,&#125;;</span><br><span class="line"><span class="keyword">int</span> rc, current_limit = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (chip-&gt;bms_psy_name)</span><br><span class="line">chip-&gt;bms_psy =</span><br><span class="line">power_supply_get_by_name((<span class="keyword">char</span> *)chip-&gt;bms_psy_name);</span><br><span class="line"></span><br><span class="line">rc = chip-&gt;usb_psy-&gt;get_property(chip-&gt;usb_psy,</span><br><span class="line">POWER_SUPPLY_PROP_CURRENT_MAX, &amp;prop);</span><br><span class="line"><span class="keyword">if</span> (rc)</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"Couldn't read USB current_max property, rc=%d\n"</span>, rc);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">current_limit = prop.intval / <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">smb358_enable_volatile_writes(chip);</span><br><span class="line">smb358_set_usb_chg_current(chip, current_limit);</span><br><span class="line"></span><br><span class="line">dev_dbg(chip-&gt;dev, <span class="string">"current_limit = %d\n"</span>, current_limit);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> defined(CONFIG_DEBUG_FS)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LAST_CNFG_REG0x13</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">show_cnfg_regs</span><span class="params">(struct seq_file *m, <span class="keyword">void</span> *data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">smb358_charger</span> *<span class="title">chip</span> = <span class="title">m</span>-&gt;<span class="title">private</span>;</span></span><br><span class="line"><span class="keyword">int</span> rc;</span><br><span class="line">u8 reg;</span><br><span class="line">u8 addr;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (addr = <span class="number">0</span>; addr &lt;= LAST_CNFG_REG; addr++) &#123;</span><br><span class="line">rc = smb358_read_reg(chip, addr, &amp;reg);</span><br><span class="line"><span class="keyword">if</span> (!rc)</span><br><span class="line">seq_printf(m, <span class="string">"0x%02x = 0x%02x\n"</span>, addr, reg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">cnfg_debugfs_open</span><span class="params">(struct inode *inode, struct file *file)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">smb358_charger</span> *<span class="title">chip</span> = <span class="title">inode</span>-&gt;<span class="title">i_private</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> single_open(file, show_cnfg_regs, chip);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="class"><span class="keyword">struct</span> <span class="title">file_operations</span> <span class="title">cnfg_debugfs_ops</span> = &#123;</span></span><br><span class="line">.owner= THIS_MODULE,</span><br><span class="line">.open= cnfg_debugfs_open,</span><br><span class="line">.read= seq_read,</span><br><span class="line">.llseek= seq_lseek,</span><br><span class="line">.release= single_release,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FIRST_CMD_REG0x30</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LAST_CMD_REG0x33</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">show_cmd_regs</span><span class="params">(struct seq_file *m, <span class="keyword">void</span> *data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">smb358_charger</span> *<span class="title">chip</span> = <span class="title">m</span>-&gt;<span class="title">private</span>;</span></span><br><span class="line"><span class="keyword">int</span> rc;</span><br><span class="line">u8 reg;</span><br><span class="line">u8 addr;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (addr = FIRST_CMD_REG; addr &lt;= LAST_CMD_REG; addr++) &#123;</span><br><span class="line">rc = smb358_read_reg(chip, addr, &amp;reg);</span><br><span class="line"><span class="keyword">if</span> (!rc)</span><br><span class="line">seq_printf(m, <span class="string">"0x%02x = 0x%02x\n"</span>, addr, reg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">cmd_debugfs_open</span><span class="params">(struct inode *inode, struct file *file)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">smb358_charger</span> *<span class="title">chip</span> = <span class="title">inode</span>-&gt;<span class="title">i_private</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> single_open(file, show_cmd_regs, chip);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="class"><span class="keyword">struct</span> <span class="title">file_operations</span> <span class="title">cmd_debugfs_ops</span> = &#123;</span></span><br><span class="line">.owner= THIS_MODULE,</span><br><span class="line">.open= cmd_debugfs_open,</span><br><span class="line">.read= seq_read,</span><br><span class="line">.llseek= seq_lseek,</span><br><span class="line">.release= single_release,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FIRST_STATUS_REG0x35</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LAST_STATUS_REG0x3F</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">show_status_regs</span><span class="params">(struct seq_file *m, <span class="keyword">void</span> *data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">smb358_charger</span> *<span class="title">chip</span> = <span class="title">m</span>-&gt;<span class="title">private</span>;</span></span><br><span class="line"><span class="keyword">int</span> rc;</span><br><span class="line">u8 reg;</span><br><span class="line">u8 addr;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (addr = FIRST_STATUS_REG; addr &lt;= LAST_STATUS_REG; addr++) &#123;</span><br><span class="line">rc = smb358_read_reg(chip, addr, &amp;reg);</span><br><span class="line"><span class="keyword">if</span> (!rc)</span><br><span class="line">seq_printf(m, <span class="string">"0x%02x = 0x%02x\n"</span>, addr, reg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">status_debugfs_open</span><span class="params">(struct inode *inode, struct file *file)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">smb358_charger</span> *<span class="title">chip</span> = <span class="title">inode</span>-&gt;<span class="title">i_private</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> single_open(file, show_status_regs, chip);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="class"><span class="keyword">struct</span> <span class="title">file_operations</span> <span class="title">status_debugfs_ops</span> = &#123;</span></span><br><span class="line">.owner= THIS_MODULE,</span><br><span class="line">.open= status_debugfs_open,</span><br><span class="line">.read= seq_read,</span><br><span class="line">.llseek= seq_lseek,</span><br><span class="line">.release= single_release,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">show_irq_count</span><span class="params">(struct seq_file *m, <span class="keyword">void</span> *data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i, j, total = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; ARRAY_SIZE(handlers); i++)</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++) &#123;</span><br><span class="line">seq_printf(m, <span class="string">"%s=%d\t(high=%d low=%d)\n"</span>,</span><br><span class="line">handlers[i].irq_info[j].name,</span><br><span class="line">handlers[i].irq_info[j].high</span><br><span class="line">+ handlers[i].irq_info[j].low,</span><br><span class="line">handlers[i].irq_info[j].high,</span><br><span class="line">handlers[i].irq_info[j].low);</span><br><span class="line">total += (handlers[i].irq_info[j].high</span><br><span class="line">+ handlers[i].irq_info[j].low);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">seq_printf(m, <span class="string">"\n\tTotal = %d\n"</span>, total);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">irq_count_debugfs_open</span><span class="params">(struct inode *inode, struct file *file)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">smb358_charger</span> *<span class="title">chip</span> = <span class="title">inode</span>-&gt;<span class="title">i_private</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> single_open(file, show_irq_count, chip);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="class"><span class="keyword">struct</span> <span class="title">file_operations</span> <span class="title">irq_count_debugfs_ops</span> = &#123;</span></span><br><span class="line">.owner= THIS_MODULE,</span><br><span class="line">.open= irq_count_debugfs_open,</span><br><span class="line">.read= seq_read,</span><br><span class="line">.llseek= seq_lseek,</span><br><span class="line">.release= single_release,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">get_reg</span><span class="params">(<span class="keyword">void</span> *data, u64 *val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">smb358_charger</span> *<span class="title">chip</span> = <span class="title">data</span>;</span></span><br><span class="line"><span class="keyword">int</span> rc;</span><br><span class="line">u8 temp;</span><br><span class="line"></span><br><span class="line">rc = smb358_read_reg(chip, chip-&gt;peek_poke_address, &amp;temp);</span><br><span class="line"><span class="keyword">if</span> (rc &lt; <span class="number">0</span>) &#123;</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"Couldn't read reg %x rc = %d\n"</span>,</span><br><span class="line">chip-&gt;peek_poke_address, rc);</span><br><span class="line"><span class="keyword">return</span> -EAGAIN;</span><br><span class="line">&#125;</span><br><span class="line">*val = temp;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">set_reg</span><span class="params">(<span class="keyword">void</span> *data, u64 val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">smb358_charger</span> *<span class="title">chip</span> = <span class="title">data</span>;</span></span><br><span class="line"><span class="keyword">int</span> rc;</span><br><span class="line">u8 temp;</span><br><span class="line"></span><br><span class="line">temp = (u8) val;</span><br><span class="line">rc = smb358_write_reg(chip, chip-&gt;peek_poke_address, temp);</span><br><span class="line"><span class="keyword">if</span> (rc &lt; <span class="number">0</span>) &#123;</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"Couldn't write 0x%02x to 0x%02x rc= %d\n"</span>,</span><br><span class="line">chip-&gt;peek_poke_address, temp, rc);</span><br><span class="line"><span class="keyword">return</span> -EAGAIN;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">DEFINE_SIMPLE_ATTRIBUTE(poke_poke_debug_ops, get_reg, set_reg, <span class="string">"0x%02llx\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">force_irq_set</span><span class="params">(<span class="keyword">void</span> *data, u64 val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">smb358_charger</span> *<span class="title">chip</span> = <span class="title">data</span>;</span></span><br><span class="line"></span><br><span class="line">smb358_chg_stat_handler(chip-&gt;client-&gt;irq, data);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">DEFINE_SIMPLE_ATTRIBUTE(force_irq_ops, <span class="literal">NULL</span>, force_irq_set, <span class="string">"0x%02llx\n"</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> DEBUG</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">dump_regs</span><span class="params">(struct smb358_charger *chip)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rc;</span><br><span class="line">u8 reg;</span><br><span class="line">u8 addr;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (addr = <span class="number">0</span>; addr &lt;= LAST_CNFG_REG; addr++) &#123;</span><br><span class="line">rc = smb358_read_reg(chip, addr, &amp;reg);</span><br><span class="line"><span class="keyword">if</span> (rc)</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't read 0x%02x rc = %d\n"</span>,</span><br><span class="line">addr, rc);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">pr_debug(<span class="string">"0x%02x = 0x%02x\n"</span>, addr, reg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (addr = FIRST_STATUS_REG; addr &lt;= LAST_STATUS_REG; addr++) &#123;</span><br><span class="line">rc = smb358_read_reg(chip, addr, &amp;reg);</span><br><span class="line"><span class="keyword">if</span> (rc)</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't read 0x%02x rc = %d\n"</span>,</span><br><span class="line">addr, rc);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">pr_debug(<span class="string">"0x%02x = 0x%02x\n"</span>, addr, reg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (addr = FIRST_CMD_REG; addr &lt;= LAST_CMD_REG; addr++) &#123;</span><br><span class="line">rc = smb358_read_reg(chip, addr, &amp;reg);</span><br><span class="line"><span class="keyword">if</span> (rc)</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't read 0x%02x rc = %d\n"</span>,</span><br><span class="line">addr, rc);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">pr_debug(<span class="string">"0x%02x = 0x%02x\n"</span>, addr, reg);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">dump_regs</span><span class="params">(struct smb358_charger *chip)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">smb_parse_batt_id</span><span class="params">(struct smb358_charger *chip)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rc = <span class="number">0</span>, rpull = <span class="number">0</span>, vref = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int64_t</span> denom, batt_id_uv, numerator;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">device_node</span> *<span class="title">node</span> = <span class="title">chip</span>-&gt;<span class="title">dev</span>-&gt;<span class="title">of_node</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">qpnp_vadc_result</span> <span class="title">result</span>;</span></span><br><span class="line"></span><br><span class="line">rc = of_property_read_u32(node, <span class="string">"qcom,batt-id-vref-uv"</span>, &amp;vref);</span><br><span class="line"><span class="keyword">if</span> (rc &lt; <span class="number">0</span>) &#123;</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"Couldn't read batt-id-vref-uv rc=%d\n"</span>, rc);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rc = of_property_read_u32(node, <span class="string">"qcom,batt-id-rpullup-kohm"</span>, &amp;rpull);</span><br><span class="line"><span class="keyword">if</span> (rc &lt; <span class="number">0</span>) &#123;</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"Couldn't read batt-id-rpullup-kohm rc=%d\n"</span>, rc);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* read battery ID */</span></span><br><span class="line">rc = qpnp_vadc_read(chip-&gt;vadc_dev, LR_MUX2_BAT_ID, &amp;result);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"Couldn't read batt id channel=%d, rc=%d\n"</span>,</span><br><span class="line">LR_MUX2_BAT_ID, rc);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line">batt_id_uv = result.physical;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (batt_id_uv == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="comment">/*vadc not correct or batt id line grounded, report 0 kohms */</span></span><br><span class="line">dev_warn(chip-&gt;dev, <span class="string">"batt_id_uv=0, batt-id grounded\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">numerator = batt_id_uv * rpull * <span class="number">1000</span>;</span><br><span class="line">denom = vref  - batt_id_uv;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* batt id connector might be open, return 0 kohms */</span></span><br><span class="line"><span class="keyword">if</span> (denom == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">chip-&gt;connected_rid = div64_s64(numerator, denom);</span><br><span class="line"></span><br><span class="line">dev_dbg(chip-&gt;dev,</span><br><span class="line"><span class="string">"batt_id_voltage=%lld numerator=%lld denom=%lld connected_rid=%d\n"</span>,</span><br><span class="line">batt_id_uv, numerator, denom, chip-&gt;connected_rid);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">smb_parse_dt</span><span class="params">(struct smb358_charger *chip)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rc;</span><br><span class="line"><span class="keyword">enum</span> of_gpio_flags gpio_flags;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">device_node</span> *<span class="title">node</span> = <span class="title">chip</span>-&gt;<span class="title">dev</span>-&gt;<span class="title">of_node</span>;</span></span><br><span class="line"><span class="keyword">int</span> batt_present_degree_negative;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!node) &#123;</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"device tree info. missing\n"</span>);</span><br><span class="line"><span class="keyword">return</span> -EINVAL;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">chip-&gt;charging_disabled = of_property_read_bool(node,</span><br><span class="line"><span class="string">"qcom,charger-disabled"</span>);</span><br><span class="line"></span><br><span class="line">chip-&gt;inhibit_disabled = of_property_read_bool(node,</span><br><span class="line"><span class="string">"qcom,chg-inhibit-disabled"</span>);</span><br><span class="line">chip-&gt;chg_autonomous_mode = of_property_read_bool(node,</span><br><span class="line"><span class="string">"qcom,chg-autonomous-mode"</span>);</span><br><span class="line"></span><br><span class="line">chip-&gt;disable_apsd = of_property_read_bool(node, <span class="string">"qcom,disable-apsd"</span>);</span><br><span class="line"></span><br><span class="line">chip-&gt;using_pmic_therm = of_property_read_bool(node,</span><br><span class="line"><span class="string">"qcom,using-pmic-therm"</span>);</span><br><span class="line">chip-&gt;pmic_vbat_sns = of_property_read_bool(node,</span><br><span class="line"><span class="string">"qcom,using-vbat-sns"</span>);</span><br><span class="line">chip-&gt;bms_controlled_charging = of_property_read_bool(node,</span><br><span class="line"><span class="string">"qcom,bms-controlled-charging"</span>);</span><br><span class="line"></span><br><span class="line">rc = of_property_read_string(node, <span class="string">"qcom,bms-psy-name"</span>,</span><br><span class="line">&amp;chip-&gt;bms_psy_name);</span><br><span class="line"><span class="keyword">if</span> (rc)</span><br><span class="line">chip-&gt;bms_psy_name = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">chip-&gt;chg_valid_gpio = of_get_named_gpio_flags(node,</span><br><span class="line"><span class="string">"qcom,chg-valid-gpio"</span>, <span class="number">0</span>, &amp;gpio_flags);</span><br><span class="line"><span class="keyword">if</span> (!gpio_is_valid(chip-&gt;chg_valid_gpio))</span><br><span class="line">dev_dbg(chip-&gt;dev, <span class="string">"Invalid chg-valid-gpio"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">chip-&gt;chg_valid_act_low = gpio_flags &amp; OF_GPIO_ACTIVE_LOW;</span><br><span class="line"></span><br><span class="line">rc = of_property_read_u32(node, <span class="string">"qcom,fastchg-current-max-ma"</span>,</span><br><span class="line">&amp;chip-&gt;fastchg_current_max_ma);</span><br><span class="line"><span class="keyword">if</span> (rc)</span><br><span class="line">chip-&gt;fastchg_current_max_ma = SMB358_FAST_CHG_MAX_MA;</span><br><span class="line"></span><br><span class="line">chip-&gt;iterm_disabled = of_property_read_bool(node,</span><br><span class="line"><span class="string">"qcom,iterm-disabled"</span>);</span><br><span class="line"></span><br><span class="line">rc = of_property_read_u32(node, <span class="string">"qcom,iterm-ma"</span>, &amp;chip-&gt;iterm_ma);</span><br><span class="line"><span class="keyword">if</span> (rc &lt; <span class="number">0</span>)</span><br><span class="line">chip-&gt;iterm_ma = -EINVAL;</span><br><span class="line"></span><br><span class="line">rc = of_property_read_u32(node, <span class="string">"qcom,float-voltage-mv"</span>,</span><br><span class="line">&amp;chip-&gt;vfloat_mv);</span><br><span class="line"><span class="keyword">if</span> (rc &lt; <span class="number">0</span>) &#123;</span><br><span class="line">chip-&gt;vfloat_mv = -EINVAL;</span><br><span class="line">pr_err(<span class="string">"float-voltage-mv property missing, exit\n"</span>);</span><br><span class="line"><span class="keyword">return</span> -EINVAL;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rc = of_property_read_u32(node, <span class="string">"qcom,recharge-mv"</span>,</span><br><span class="line">&amp;chip-&gt;recharge_mv);</span><br><span class="line"><span class="keyword">if</span> (rc &lt; <span class="number">0</span>)</span><br><span class="line">chip-&gt;recharge_mv = -EINVAL;</span><br><span class="line"></span><br><span class="line">chip-&gt;recharge_disabled = of_property_read_bool(node,</span><br><span class="line"><span class="string">"qcom,recharge-disabled"</span>);</span><br><span class="line"></span><br><span class="line">rc = of_property_read_u32(node, <span class="string">"qcom,cold-bat-decidegc"</span>,</span><br><span class="line">&amp;chip-&gt;cold_bat_decidegc);</span><br><span class="line"><span class="keyword">if</span> (rc &lt; <span class="number">0</span>)</span><br><span class="line">chip-&gt;cold_bat_decidegc = -EINVAL;</span><br><span class="line"></span><br><span class="line">rc = of_property_read_u32(node, <span class="string">"qcom,hot-bat-decidegc"</span>,</span><br><span class="line">&amp;chip-&gt;hot_bat_decidegc);</span><br><span class="line"><span class="keyword">if</span> (rc &lt; <span class="number">0</span>)</span><br><span class="line">chip-&gt;hot_bat_decidegc = -EINVAL;</span><br><span class="line"></span><br><span class="line">rc = of_property_read_u32(node, <span class="string">"qcom,warm-bat-decidegc"</span>,</span><br><span class="line">&amp;chip-&gt;warm_bat_decidegc);</span><br><span class="line"></span><br><span class="line">rc |= of_property_read_u32(node, <span class="string">"qcom,cool-bat-decidegc"</span>,</span><br><span class="line">&amp;chip-&gt;cool_bat_decidegc);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!rc) &#123;</span><br><span class="line">rc = of_property_read_u32(node, <span class="string">"qcom,cool-bat-mv"</span>,</span><br><span class="line">&amp;chip-&gt;cool_bat_mv);</span><br><span class="line"></span><br><span class="line">rc |= of_property_read_u32(node, <span class="string">"qcom,warm-bat-mv"</span>,</span><br><span class="line">&amp;chip-&gt;warm_bat_mv);</span><br><span class="line"></span><br><span class="line">rc |= of_property_read_u32(node, <span class="string">"qcom,cool-bat-ma"</span>,</span><br><span class="line">&amp;chip-&gt;cool_bat_ma);</span><br><span class="line"></span><br><span class="line">rc |= of_property_read_u32(node, <span class="string">"qcom,warm-bat-ma"</span>,</span><br><span class="line">&amp;chip-&gt;warm_bat_ma);</span><br><span class="line"><span class="keyword">if</span> (rc)</span><br><span class="line">chip-&gt;jeita_supported = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">chip-&gt;jeita_supported = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pr_debug(<span class="string">"jeita_supported = %d"</span>, chip-&gt;jeita_supported);</span><br><span class="line"></span><br><span class="line">rc = of_property_read_u32(node, <span class="string">"qcom,bat-present-decidegc"</span>,</span><br><span class="line">&amp;batt_present_degree_negative);</span><br><span class="line"><span class="keyword">if</span> (rc &lt; <span class="number">0</span>)</span><br><span class="line">chip-&gt;bat_present_decidegc = -EINVAL;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">chip-&gt;bat_present_decidegc = -batt_present_degree_negative;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (of_get_property(node, <span class="string">"qcom,vcc-i2c-supply"</span>, <span class="literal">NULL</span>)) &#123;</span><br><span class="line">chip-&gt;vcc_i2c = devm_regulator_get(chip-&gt;dev, <span class="string">"vcc-i2c"</span>);</span><br><span class="line"><span class="keyword">if</span> (IS_ERR(chip-&gt;vcc_i2c)) &#123;</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"%s: Failed to get vcc_i2c regulator\n"</span>,</span><br><span class="line">__func__);</span><br><span class="line"><span class="keyword">return</span> PTR_ERR(chip-&gt;vcc_i2c);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">chip-&gt;skip_usb_suspend_for_fake_battery = of_property_read_bool(node,</span><br><span class="line"><span class="string">"qcom,skip-usb-suspend-for-fake-battery"</span>);</span><br><span class="line"><span class="keyword">if</span> (!chip-&gt;skip_usb_suspend_for_fake_battery) &#123;</span><br><span class="line"><span class="keyword">if</span> (!chip-&gt;vadc_dev) &#123;</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"VADC device not present with usb suspend on fake battery\n"</span>);</span><br><span class="line"><span class="keyword">return</span> -EINVAL;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rc = smb_parse_batt_id(chip);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"failed to read batt-id rc=%d\n"</span>, rc);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pr_debug(<span class="string">"inhibit-disabled = %d, recharge-disabled = %d, recharge-mv = %d,"</span>,</span><br><span class="line">chip-&gt;inhibit_disabled, chip-&gt;recharge_disabled,</span><br><span class="line">chip-&gt;recharge_mv);</span><br><span class="line">pr_debug(<span class="string">"vfloat-mv = %d, iterm-disabled = %d,"</span>,</span><br><span class="line">chip-&gt;vfloat_mv, chip-&gt;iterm_disabled);</span><br><span class="line">pr_debug(<span class="string">"fastchg-current = %d, charging-disabled = %d,"</span>,</span><br><span class="line">chip-&gt;fastchg_current_max_ma,</span><br><span class="line">chip-&gt;charging_disabled);</span><br><span class="line">pr_debug(<span class="string">"disable-apsd = %d bms = %s cold-bat-degree = %d,"</span>,</span><br><span class="line">chip-&gt;disable_apsd, chip-&gt;bms_psy_name,</span><br><span class="line">chip-&gt;cold_bat_decidegc);</span><br><span class="line">pr_debug(<span class="string">"hot-bat-degree = %d, bat-present-decidegc = %d\n"</span>,</span><br><span class="line">chip-&gt;hot_bat_decidegc, chip-&gt;bat_present_decidegc);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">determine_initial_state</span><span class="params">(struct smb358_charger *chip)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rc;</span><br><span class="line">u8 reg = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">rc = smb358_read_reg(chip, IRQ_B_REG, &amp;reg);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't read IRQ_B rc = %d\n"</span>, rc);</span><br><span class="line"><span class="keyword">goto</span> fail_init_status;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rc = smb358_read_reg(chip, IRQ_C_REG, &amp;reg);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't read IRQ_C rc = %d\n"</span>, rc);</span><br><span class="line"><span class="keyword">goto</span> fail_init_status;</span><br><span class="line">&#125;</span><br><span class="line">chip-&gt;batt_full = (reg &amp; IRQ_C_TERM_BIT) ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">rc = smb358_read_reg(chip, IRQ_A_REG, &amp;reg);</span><br><span class="line"><span class="keyword">if</span> (rc &lt; <span class="number">0</span>) &#123;</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't read irq A rc = %d\n"</span>, rc);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> 0</span></span><br><span class="line"><span class="comment">/* For current design, can ignore this */</span></span><br><span class="line"><span class="keyword">if</span> (reg &amp; IRQ_A_HOT_HARD_BIT)</span><br><span class="line">chip-&gt;batt_hot = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span> (reg &amp; IRQ_A_COLD_HARD_BIT)</span><br><span class="line">chip-&gt;batt_cold = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span> (reg &amp; IRQ_A_HOT_SOFT_BIT)</span><br><span class="line">chip-&gt;batt_warm = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span> (reg &amp; IRQ_A_COLD_SOFT_BIT)</span><br><span class="line">chip-&gt;batt_cool = <span class="literal">true</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">rc = smb358_read_reg(chip, IRQ_E_REG, &amp;reg);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't read IRQ_E rc = %d\n"</span>, rc);</span><br><span class="line"><span class="keyword">goto</span> fail_init_status;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (reg &amp; IRQ_E_INPUT_UV_BIT) &#123;</span><br><span class="line">chg_uv(chip, <span class="number">1</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">chg_uv(chip, <span class="number">0</span>);</span><br><span class="line">apsd_complete(chip, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">fail_init_status:</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't determine initial status\n"</span>);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> defined(CONFIG_DEBUG_FS)</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">smb358_debugfs_init</span><span class="params">(struct smb358_charger *chip)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rc;</span><br><span class="line">chip-&gt;debug_root = debugfs_create_dir(<span class="string">"smb358"</span>, <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">if</span> (!chip-&gt;debug_root)</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't create debug dir\n"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (chip-&gt;debug_root) &#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">dentry</span> *<span class="title">ent</span>;</span></span><br><span class="line"></span><br><span class="line">ent = debugfs_create_file(<span class="string">"config_registers"</span>, S_IFREG | S_IRUGO,</span><br><span class="line">  chip-&gt;debug_root, chip,</span><br><span class="line">  &amp;cnfg_debugfs_ops);</span><br><span class="line"><span class="keyword">if</span> (!ent || IS_ERR(ent)) &#123;</span><br><span class="line">rc = PTR_ERR(ent);</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"Couldn't create cnfg debug file rc = %d\n"</span>,</span><br><span class="line">rc);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ent = debugfs_create_file(<span class="string">"status_registers"</span>, S_IFREG | S_IRUGO,</span><br><span class="line">  chip-&gt;debug_root, chip,</span><br><span class="line">  &amp;status_debugfs_ops);</span><br><span class="line"><span class="keyword">if</span> (!ent || IS_ERR(ent)) &#123;</span><br><span class="line">rc = PTR_ERR(ent);</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"Couldn't create status debug file rc = %d\n"</span>,</span><br><span class="line">rc);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ent = debugfs_create_file(<span class="string">"cmd_registers"</span>, S_IFREG | S_IRUGO,</span><br><span class="line">  chip-&gt;debug_root, chip,</span><br><span class="line">  &amp;cmd_debugfs_ops);</span><br><span class="line"><span class="keyword">if</span> (!ent || IS_ERR(ent)) &#123;</span><br><span class="line">rc = PTR_ERR(ent);</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"Couldn't create cmd debug file rc = %d\n"</span>,</span><br><span class="line">rc);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ent = debugfs_create_x32(<span class="string">"address"</span>, S_IFREG | S_IWUSR | S_IRUGO,</span><br><span class="line">  chip-&gt;debug_root,</span><br><span class="line">  &amp;(chip-&gt;peek_poke_address));</span><br><span class="line"><span class="keyword">if</span> (!ent || IS_ERR(ent)) &#123;</span><br><span class="line">rc = PTR_ERR(ent);</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"Couldn't create address debug file rc = %d\n"</span>,</span><br><span class="line">rc);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ent = debugfs_create_file(<span class="string">"data"</span>, S_IFREG | S_IWUSR | S_IRUGO,</span><br><span class="line">  chip-&gt;debug_root, chip,</span><br><span class="line">  &amp;poke_poke_debug_ops);</span><br><span class="line"><span class="keyword">if</span> (!ent || IS_ERR(ent)) &#123;</span><br><span class="line">rc = PTR_ERR(ent);</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"Couldn't create data debug file rc = %d\n"</span>,</span><br><span class="line">rc);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ent = debugfs_create_file(<span class="string">"force_irq"</span>,</span><br><span class="line">  S_IFREG | S_IWUSR | S_IRUGO,</span><br><span class="line">  chip-&gt;debug_root, chip,</span><br><span class="line">  &amp;force_irq_ops);</span><br><span class="line"><span class="keyword">if</span> (!ent || IS_ERR(ent)) &#123;</span><br><span class="line">rc = PTR_ERR(ent);</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"Couldn't create force_irq debug file rc =%d\n"</span>,</span><br><span class="line">rc);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ent = debugfs_create_file(<span class="string">"irq_count"</span>, S_IFREG | S_IRUGO,</span><br><span class="line">  chip-&gt;debug_root, chip,</span><br><span class="line">  &amp;irq_count_debugfs_ops);</span><br><span class="line"><span class="keyword">if</span> (!ent || IS_ERR(ent)) &#123;</span><br><span class="line">rc = PTR_ERR(ent);</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"Couldn't create cnfg irq_count file rc = %d\n"</span>,</span><br><span class="line">rc);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">smb358_debugfs_init</span><span class="params">(struct smb358_charger *chip)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SMB_I2C_VTG_MIN_UV 1800000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SMB_I2C_VTG_MAX_UV 1800000</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">smb358_charger_probe</span><span class="params">(struct i2c_client *client,</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">const</span> struct i2c_device_id *id)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> rc, irq;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">smb358_charger</span> *<span class="title">chip</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">power_supply</span> *<span class="title">usb_psy</span>;</span></span><br><span class="line">u8 reg = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">usb_psy = power_supply_get_by_name(<span class="string">"usb"</span>);</span><br><span class="line"><span class="keyword">if</span> (!usb_psy) &#123;</span><br><span class="line">dev_dbg(&amp;client-&gt;dev, <span class="string">"USB psy not found; deferring probe\n"</span>);</span><br><span class="line"><span class="keyword">return</span> -EPROBE_DEFER;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">chip = devm_kzalloc(&amp;client-&gt;dev, <span class="keyword">sizeof</span>(*chip), GFP_KERNEL);</span><br><span class="line"><span class="keyword">if</span> (!chip) &#123;</span><br><span class="line">dev_err(&amp;client-&gt;dev, <span class="string">"Couldn't allocate memory\n"</span>);</span><br><span class="line"><span class="keyword">return</span> -ENOMEM;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">chip-&gt;client = client;</span><br><span class="line">chip-&gt;dev = &amp;client-&gt;dev;</span><br><span class="line">chip-&gt;usb_psy = usb_psy;</span><br><span class="line">chip-&gt;fake_battery_soc = -EINVAL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (of_find_property(chip-&gt;dev-&gt;of_node, <span class="string">"qcom,chg-vadc"</span>, <span class="literal">NULL</span>)) &#123;</span><br><span class="line"><span class="comment">/* early for VADC get, defer probe if needed */</span></span><br><span class="line">chip-&gt;vadc_dev = qpnp_get_vadc(chip-&gt;dev, <span class="string">"chg"</span>);</span><br><span class="line"><span class="keyword">if</span> (IS_ERR(chip-&gt;vadc_dev)) &#123;</span><br><span class="line">rc = PTR_ERR(chip-&gt;vadc_dev);</span><br><span class="line"><span class="keyword">if</span> (rc != -EPROBE_DEFER)</span><br><span class="line">pr_err(<span class="string">"vadc property configured incorrectly\n"</span>);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rc = smb_parse_dt(chip);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(&amp;client-&gt;dev, <span class="string">"Couldn't parse DT nodes rc=%d\n"</span>, rc);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* i2c pull up regulator configuration */</span></span><br><span class="line"><span class="keyword">if</span> (chip-&gt;vcc_i2c) &#123;</span><br><span class="line"><span class="keyword">if</span> (regulator_count_voltages(chip-&gt;vcc_i2c) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">rc = regulator_set_voltage(chip-&gt;vcc_i2c,</span><br><span class="line">SMB_I2C_VTG_MIN_UV, SMB_I2C_VTG_MAX_UV);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(&amp;client-&gt;dev,</span><br><span class="line"><span class="string">"regulator vcc_i2c set failed, rc = %d\n"</span>,</span><br><span class="line">rc);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rc = regulator_enable(chip-&gt;vcc_i2c);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(&amp;client-&gt;dev,</span><br><span class="line"><span class="string">"Regulator vcc_i2c enable failed rc = %d\n"</span>,</span><br><span class="line">rc);</span><br><span class="line"><span class="keyword">goto</span> err_set_vtg_i2c;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mutex_init(&amp;chip-&gt;irq_complete);</span><br><span class="line">mutex_init(&amp;chip-&gt;read_write_lock);</span><br><span class="line">mutex_init(&amp;chip-&gt;path_suspend_lock);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//addeb by zhengtianxing     // removed this config, because that make power_supply_register hangup sometime in fllowing. zhangdongyang 20170206</span></span><br><span class="line"><span class="comment">//power_supply_set_charge_type(chip-&gt;usb_psy, POWER_SUPPLY_TYPE_USB);</span></span><br><span class="line"><span class="comment">//power_supply_set_present(chip-&gt;usb_psy, 1);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* probe the device to check if its actually connected */</span></span><br><span class="line">rc = smb358_read_reg(chip, CHG_OTH_CURRENT_CTRL_REG, &amp;reg);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">pr_err(<span class="string">"Failed to detect SMB358, device absent, rc = %d\n"</span>, rc);</span><br><span class="line"><span class="keyword">goto</span> err_set_vtg_i2c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* using adc_tm for implementing pmic therm */</span></span><br><span class="line"><span class="keyword">if</span> (chip-&gt;using_pmic_therm) &#123;</span><br><span class="line">chip-&gt;adc_tm_dev = qpnp_get_adc_tm(chip-&gt;dev, <span class="string">"chg"</span>);</span><br><span class="line"><span class="keyword">if</span> (IS_ERR(chip-&gt;adc_tm_dev)) &#123;</span><br><span class="line">rc = PTR_ERR(chip-&gt;adc_tm_dev);</span><br><span class="line"><span class="keyword">if</span> (rc != -EPROBE_DEFER)</span><br><span class="line">pr_err(<span class="string">"adc_tm property missing\n"</span>);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">i2c_set_clientdata(client, chip);</span><br><span class="line"></span><br><span class="line">chip-&gt;batt_psy.name= <span class="string">"battery"</span>;</span><br><span class="line">chip-&gt;batt_psy.type= POWER_SUPPLY_TYPE_BATTERY;</span><br><span class="line">chip-&gt;batt_psy.get_property= smb358_battery_get_property;</span><br><span class="line">chip-&gt;batt_psy.set_property= smb358_battery_set_property;</span><br><span class="line">chip-&gt;batt_psy.property_is_writeable =</span><br><span class="line">smb358_batt_property_is_writeable;</span><br><span class="line">chip-&gt;batt_psy.properties= smb358_battery_properties;</span><br><span class="line">chip-&gt;batt_psy.num_properties= ARRAY_SIZE(smb358_battery_properties);</span><br><span class="line">chip-&gt;batt_psy.external_power_changed = smb358_external_power_changed;</span><br><span class="line">chip-&gt;batt_psy.supplied_to = pm_batt_supplied_to;</span><br><span class="line">chip-&gt;batt_psy.num_supplicants = ARRAY_SIZE(pm_batt_supplied_to);</span><br><span class="line"></span><br><span class="line">chip-&gt;resume_completed = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">rc = power_supply_register(chip-&gt;dev, &amp;chip-&gt;batt_psy);</span><br><span class="line"><span class="keyword">if</span> (rc &lt; <span class="number">0</span>) &#123;</span><br><span class="line">dev_err(&amp;client-&gt;dev, <span class="string">"Couldn't register batt psy rc = %d\n"</span>,</span><br><span class="line">rc);</span><br><span class="line"><span class="keyword">goto</span> err_set_vtg_i2c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dump_regs(chip);</span><br><span class="line"></span><br><span class="line">rc = smb358_regulator_init(chip);</span><br><span class="line"><span class="keyword">if</span>  (rc) &#123;</span><br><span class="line">dev_err(&amp;client-&gt;dev,</span><br><span class="line"><span class="string">"Couldn't initialize smb358 ragulator rc=%d\n"</span>, rc);</span><br><span class="line"><span class="keyword">goto</span> fail_regulator_register;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">smb358_chg_stat_handler(<span class="number">0</span>, (<span class="keyword">void</span> *)chip);</span><br><span class="line"></span><br><span class="line">rc = smb358_hw_init(chip);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(&amp;client-&gt;dev,</span><br><span class="line"><span class="string">"Couldn't intialize hardware rc=%d\n"</span>, rc);</span><br><span class="line"><span class="keyword">goto</span> fail_smb358_hw_init;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rc = determine_initial_state(chip);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(&amp;client-&gt;dev,</span><br><span class="line"><span class="string">"Couldn't determine initial state rc=%d\n"</span>, rc);</span><br><span class="line"><span class="keyword">goto</span> fail_smb358_hw_init;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* We will not use it by default */</span></span><br><span class="line"><span class="keyword">if</span> (gpio_is_valid(chip-&gt;chg_valid_gpio)) &#123;</span><br><span class="line">rc = gpio_request(chip-&gt;chg_valid_gpio, <span class="string">"smb358_chg_valid"</span>);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(&amp;client-&gt;dev,</span><br><span class="line"><span class="string">"gpio_request for %d failed rc=%d\n"</span>,</span><br><span class="line">chip-&gt;chg_valid_gpio, rc);</span><br><span class="line"><span class="keyword">goto</span> fail_chg_valid_irq;</span><br><span class="line">&#125;</span><br><span class="line">irq = gpio_to_irq(chip-&gt;chg_valid_gpio);</span><br><span class="line"><span class="keyword">if</span> (irq &lt; <span class="number">0</span>) &#123;</span><br><span class="line">dev_err(&amp;client-&gt;dev,</span><br><span class="line"><span class="string">"Invalid chg_valid irq = %d\n"</span>, irq);</span><br><span class="line"><span class="keyword">goto</span> fail_chg_valid_irq;</span><br><span class="line">&#125;</span><br><span class="line">rc = devm_request_threaded_irq(&amp;client-&gt;dev, irq,</span><br><span class="line"><span class="literal">NULL</span>, smb358_chg_valid_handler,</span><br><span class="line">IRQF_TRIGGER_FALLING | IRQF_TRIGGER_RISING,</span><br><span class="line"><span class="string">"smb358_chg_valid_irq"</span>, chip);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(&amp;client-&gt;dev,</span><br><span class="line"><span class="string">"Failed request_irq irq=%d, gpio=%d rc=%d\n"</span>,</span><br><span class="line">irq, chip-&gt;chg_valid_gpio, rc);</span><br><span class="line"><span class="keyword">goto</span> fail_chg_valid_irq;</span><br><span class="line">&#125;</span><br><span class="line">smb358_chg_valid_handler(irq, chip);</span><br><span class="line">enable_irq_wake(irq);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">chip-&gt;irq_gpio = of_get_named_gpio_flags(chip-&gt;dev-&gt;of_node,</span><br><span class="line"><span class="string">"qcom,irq-gpio"</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* STAT irq configuration */</span></span><br><span class="line"><span class="keyword">if</span> (gpio_is_valid(chip-&gt;irq_gpio)) &#123;</span><br><span class="line">rc = gpio_request(chip-&gt;irq_gpio, <span class="string">"smb358_irq"</span>);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(&amp;client-&gt;dev,</span><br><span class="line"><span class="string">"irq gpio request failed, rc=%d"</span>, rc);</span><br><span class="line"><span class="keyword">goto</span> fail_smb358_hw_init;</span><br><span class="line">&#125;</span><br><span class="line">rc = gpio_direction_input(chip-&gt;irq_gpio);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(&amp;client-&gt;dev,</span><br><span class="line"><span class="string">"set_direction for irq gpio failed\n"</span>);</span><br><span class="line"><span class="keyword">goto</span> fail_irq_gpio;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">irq = gpio_to_irq(chip-&gt;irq_gpio);</span><br><span class="line"><span class="keyword">if</span> (irq &lt; <span class="number">0</span>) &#123;</span><br><span class="line">dev_err(&amp;client-&gt;dev,</span><br><span class="line"><span class="string">"Invalid irq_gpio irq = %d\n"</span>, irq);</span><br><span class="line"><span class="keyword">goto</span> fail_irq_gpio;</span><br><span class="line">&#125;</span><br><span class="line">rc = devm_request_threaded_irq(&amp;client-&gt;dev, irq, <span class="literal">NULL</span>,</span><br><span class="line">smb358_chg_stat_handler,</span><br><span class="line">IRQF_TRIGGER_FALLING | IRQF_ONESHOT,</span><br><span class="line"><span class="string">"smb358_chg_stat_irq"</span>, chip);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(&amp;client-&gt;dev,</span><br><span class="line"><span class="string">"Failed STAT irq=%d request rc = %d\n"</span>,</span><br><span class="line">irq, rc);</span><br><span class="line"><span class="keyword">goto</span> fail_irq_gpio;</span><br><span class="line">&#125;</span><br><span class="line">enable_irq_wake(irq);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">goto</span> fail_irq_gpio;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (chip-&gt;using_pmic_therm) &#123;</span><br><span class="line"><span class="keyword">if</span> (!chip-&gt;jeita_supported) &#123;</span><br><span class="line"><span class="comment">/* add hot/cold temperature monitor */</span></span><br><span class="line">chip-&gt;adc_param.low_temp = chip-&gt;cold_bat_decidegc;</span><br><span class="line">chip-&gt;adc_param.high_temp = chip-&gt;hot_bat_decidegc;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">chip-&gt;adc_param.low_temp = chip-&gt;cool_bat_decidegc;</span><br><span class="line">chip-&gt;adc_param.high_temp = chip-&gt;warm_bat_decidegc;</span><br><span class="line">&#125;</span><br><span class="line">chip-&gt;adc_param.timer_interval = ADC_MEAS2_INTERVAL_1S;</span><br><span class="line">chip-&gt;adc_param.state_request = ADC_TM_HIGH_LOW_THR_ENABLE;</span><br><span class="line">chip-&gt;adc_param.btm_ctx = chip;</span><br><span class="line">chip-&gt;adc_param.threshold_notification =</span><br><span class="line">smb_chg_adc_notification;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> CONFIG_FOR_BROBDMOBI_R700</span></span><br><span class="line">chip-&gt;adc_param.channel = P_MUX6_1_1;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">chip-&gt;adc_param.channel = LR_MUX1_BATT_THERM;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* update battery missing info in tm_channel_measure*/</span></span><br><span class="line">rc = qpnp_adc_tm_channel_measure(chip-&gt;adc_tm_dev,</span><br><span class="line">&amp;chip-&gt;adc_param);</span><br><span class="line"><span class="keyword">if</span> (rc)</span><br><span class="line">pr_err(<span class="string">"requesting ADC error %d\n"</span>, rc);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">smb358_debugfs_init(chip);</span><br><span class="line"></span><br><span class="line">dump_regs(chip);</span><br><span class="line"></span><br><span class="line">dev_info(chip-&gt;dev, <span class="string">"SMB358 successfully probed. charger=%d, batt=%d\n"</span>,</span><br><span class="line">chip-&gt;chg_present, smb358_get_prop_batt_present(chip));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">fail_chg_valid_irq:</span><br><span class="line"><span class="keyword">if</span> (gpio_is_valid(chip-&gt;chg_valid_gpio))</span><br><span class="line">gpio_free(chip-&gt;chg_valid_gpio);</span><br><span class="line">fail_irq_gpio:</span><br><span class="line"><span class="keyword">if</span> (gpio_is_valid(chip-&gt;irq_gpio))</span><br><span class="line">gpio_free(chip-&gt;irq_gpio);</span><br><span class="line">fail_smb358_hw_init:</span><br><span class="line">regulator_unregister(chip-&gt;otg_vreg.rdev);</span><br><span class="line">fail_regulator_register:</span><br><span class="line">power_supply_unregister(&amp;chip-&gt;batt_psy);</span><br><span class="line">err_set_vtg_i2c:</span><br><span class="line"><span class="keyword">if</span> (chip-&gt;vcc_i2c)</span><br><span class="line"><span class="keyword">if</span> (regulator_count_voltages(chip-&gt;vcc_i2c) &gt; <span class="number">0</span>)</span><br><span class="line">regulator_set_voltage(chip-&gt;vcc_i2c, <span class="number">0</span>,</span><br><span class="line">SMB_I2C_VTG_MAX_UV);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">smb358_charger_remove</span><span class="params">(struct i2c_client *client)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">smb358_charger</span> *<span class="title">chip</span> = <span class="title">i2c_get_clientdata</span>(<span class="title">client</span>);</span></span><br><span class="line"></span><br><span class="line">power_supply_unregister(&amp;chip-&gt;batt_psy);</span><br><span class="line"><span class="keyword">if</span> (gpio_is_valid(chip-&gt;chg_valid_gpio))</span><br><span class="line">gpio_free(chip-&gt;chg_valid_gpio);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (chip-&gt;vcc_i2c)</span><br><span class="line">regulator_disable(chip-&gt;vcc_i2c);</span><br><span class="line"></span><br><span class="line">mutex_destroy(&amp;chip-&gt;irq_complete);</span><br><span class="line">debugfs_remove_recursive(chip-&gt;debug_root);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">smb358_suspend</span><span class="params">(struct device *dev)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">i2c_client</span> *<span class="title">client</span> = <span class="title">to_i2c_client</span>(<span class="title">dev</span>);</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">smb358_charger</span> *<span class="title">chip</span> = <span class="title">i2c_get_clientdata</span>(<span class="title">client</span>);</span></span><br><span class="line"><span class="keyword">int</span> rc;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++) &#123;</span><br><span class="line">rc = smb358_read_reg(chip, FAULT_INT_REG + i,</span><br><span class="line">&amp;chip-&gt;irq_cfg_mask[i]);</span><br><span class="line"><span class="keyword">if</span> (rc)</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"Couldn't save irq cfg regs rc = %d\n"</span>, rc);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* enable wake up IRQs */</span></span><br><span class="line">rc = smb358_write_reg(chip, FAULT_INT_REG,</span><br><span class="line">FAULT_INT_HOT_COLD_HARD_BIT | FAULT_INT_INPUT_UV_BIT);</span><br><span class="line"><span class="keyword">if</span> (rc &lt; <span class="number">0</span>)</span><br><span class="line">dev_err(chip-&gt;dev, <span class="string">"Couldn't set fault_irq_cfg rc = %d\n"</span>, rc);</span><br><span class="line"></span><br><span class="line">rc = smb358_write_reg(chip, STATUS_INT_REG,</span><br><span class="line">STATUS_INT_LOW_BATT_BIT | STATUS_INT_MISSING_BATT_BIT |</span><br><span class="line">STATUS_INT_CHGING_BIT | STATUS_INT_INOK_BIT |</span><br><span class="line">STATUS_INT_OTG_DETECT_BIT | STATUS_INT_CHG_INHI_BIT);</span><br><span class="line"><span class="keyword">if</span> (rc &lt; <span class="number">0</span>)</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"Couldn't set status_irq_cfg rc = %d\n"</span>, rc);</span><br><span class="line"></span><br><span class="line">mutex_lock(&amp;chip-&gt;irq_complete);</span><br><span class="line"><span class="keyword">if</span> (chip-&gt;vcc_i2c) &#123;</span><br><span class="line">rc = regulator_disable(chip-&gt;vcc_i2c);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"Regulator vcc_i2c disable failed rc=%d\n"</span>, rc);</span><br><span class="line">mutex_unlock(&amp;chip-&gt;irq_complete);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">chip-&gt;resume_completed = <span class="literal">false</span>;</span><br><span class="line">mutex_unlock(&amp;chip-&gt;irq_complete);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">smb358_suspend_noirq</span><span class="params">(struct device *dev)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">i2c_client</span> *<span class="title">client</span> = <span class="title">to_i2c_client</span>(<span class="title">dev</span>);</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">smb358_charger</span> *<span class="title">chip</span> = <span class="title">i2c_get_clientdata</span>(<span class="title">client</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (chip-&gt;irq_waiting) &#123;</span><br><span class="line">pr_err_ratelimited(<span class="string">"Aborting suspend, an interrupt was detected while suspending\n"</span>);</span><br><span class="line"><span class="keyword">return</span> -EBUSY;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">smb358_resume</span><span class="params">(struct device *dev)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">i2c_client</span> *<span class="title">client</span> = <span class="title">to_i2c_client</span>(<span class="title">dev</span>);</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">smb358_charger</span> *<span class="title">chip</span> = <span class="title">i2c_get_clientdata</span>(<span class="title">client</span>);</span></span><br><span class="line"><span class="keyword">int</span> rc;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (chip-&gt;vcc_i2c) &#123;</span><br><span class="line">rc = regulator_enable(chip-&gt;vcc_i2c);</span><br><span class="line"><span class="keyword">if</span> (rc) &#123;</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"Regulator vcc_i2c enable failed rc=%d\n"</span>, rc);</span><br><span class="line"><span class="keyword">return</span> rc;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* Restore IRQ config */</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++) &#123;</span><br><span class="line">rc = smb358_write_reg(chip, FAULT_INT_REG + i,</span><br><span class="line">chip-&gt;irq_cfg_mask[i]);</span><br><span class="line"><span class="keyword">if</span> (rc)</span><br><span class="line">dev_err(chip-&gt;dev,</span><br><span class="line"><span class="string">"Couldn't restore irq cfg regs rc=%d\n"</span>, rc);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mutex_lock(&amp;chip-&gt;irq_complete);</span><br><span class="line">chip-&gt;resume_completed = <span class="literal">true</span>;</span><br><span class="line">mutex_unlock(&amp;chip-&gt;irq_complete);</span><br><span class="line"><span class="keyword">if</span> (chip-&gt;irq_waiting) &#123;</span><br><span class="line">smb358_chg_stat_handler(client-&gt;irq, chip);</span><br><span class="line">enable_irq(client-&gt;irq);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="class"><span class="keyword">struct</span> <span class="title">dev_pm_ops</span> <span class="title">smb358_pm_ops</span> = &#123;</span></span><br><span class="line">.suspend= smb358_suspend,</span><br><span class="line">.suspend_noirq= smb358_suspend_noirq,</span><br><span class="line">.resume= smb358_resume,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">of_device_id</span> <span class="title">smb358_match_table</span>[] = &#123;</span></span><br><span class="line">&#123; .compatible = <span class="string">"qcom,smb358-charger"</span>,&#125;,</span><br><span class="line">&#123; &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="class"><span class="keyword">struct</span> <span class="title">i2c_device_id</span> <span class="title">smb358_charger_id</span>[] = &#123;</span></span><br><span class="line">&#123;<span class="string">"smb358-charger"</span>, <span class="number">0</span>&#125;,</span><br><span class="line">&#123;&#125;,</span><br><span class="line">&#125;;</span><br><span class="line">MODULE_DEVICE_TABLE(i2c, smb358_charger_id);</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">i2c_driver</span> <span class="title">smb358_charger_driver</span> = &#123;</span></span><br><span class="line">.driver= &#123;</span><br><span class="line">.name= <span class="string">"smb358-charger"</span>,</span><br><span class="line">.owner= THIS_MODULE,</span><br><span class="line">.of_match_table = smb358_match_table,</span><br><span class="line">.pm= &amp;smb358_pm_ops,</span><br><span class="line">&#125;,</span><br><span class="line">.probe= smb358_charger_probe,</span><br><span class="line">.remove= smb358_charger_remove,</span><br><span class="line">.id_table= smb358_charger_id,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">module_i2c_driver(smb358_charger_driver);</span><br><span class="line"></span><br><span class="line">MODULE_DESCRIPTION(<span class="string">"SMB358 Charger"</span>);</span><br><span class="line">MODULE_LICENSE(<span class="string">"GPL v2"</span>);</span><br><span class="line">MODULE_ALIAS(<span class="string">"i2c:smb358-charger"</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux device driver </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux device driver </tag>
            
            <tag> charger </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rtl8192移植以及802.11相关概念</title>
      <link href="/2019/05/09/rtl8192%E7%A7%BB%E6%A4%8D%E4%BB%A5%E5%8F%8A802-11%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/"/>
      <url>/2019/05/09/rtl8192%E7%A7%BB%E6%A4%8D%E4%BB%A5%E5%8F%8A802-11%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/</url>
      
        <content type="html"><![CDATA[<h1 id="工作内容"><a href="#工作内容" class="headerlink" title="工作内容"></a>工作内容</h1><h2 id="原理介绍"><a href="#原理介绍" class="headerlink" title="原理介绍"></a>原理介绍</h2><blockquote><p>根据realtek提供的SDK移植到我们的mdm9640平台 。</p></blockquote><h2 id="文件介绍"><a href="#文件介绍" class="headerlink" title="文件介绍"></a>文件介绍</h2><blockquote><p>RTL8192软件SDK中包含如下的文件：</p><ol><li>configuration-scripts 初始化wifi的相关脚本</li><li>DriverSrcPkg/Driver对应内核模块代码</li><li>DriverSrcPkg/Users对应realtek芯片控制用的相关程序</li></ol></blockquote><h2 id="修改编译环境"><a href="#修改编译环境" class="headerlink" title="修改编译环境"></a>修改编译环境</h2><p>详细修改参数请参考:RTL819x_AIO_porting_guide.pdf</p><p>platform.mk中添加如下平台相关选项:</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ifeq</span> (<span class="variable">$(CONFIG_PLATFORM)</span>,ARM_QUALCOMM_9x15)</span><br><span class="line">   EXTRA_CFLAGS += -D_LITTLE_ENDIAN_ -DSMP_SYNC</span><br><span class="line">   ARCH := arm</span><br><span class="line">   KSRC ?= $&#123;ANDROID_KERN_DIR&#125;</span><br><span class="line">   CROSS_COMPILE ?= arm-oe-linux-gnueabi-</span><br><span class="line">   EXTRA_CFLAGS += -DCONFIG_RTL_80211D_SUPPORT</span><br><span class="line">   EXTRA_CFLAGS += -DCONFIG_RTL_CLIENT_MODE_SUPPORT</span><br><span class="line">   EXTRA_CFLAGS += -DCONFIG_RTL_REPEATER_MODE_SUPPORT -DSDIO_2_PORT</span><br><span class="line">   RTL8192CD_NUM_VWLAN := 1</span><br><span class="line">  <span class="keyword">endif</span></span><br></pre></td></tr></table></figure><h2 id="内置PA-外置PA配置"><a href="#内置PA-外置PA配置" class="headerlink" title="内置PA,外置PA配置"></a>内置PA,外置PA配置</h2><p>修改config.mk中的如下选项:</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># If Use External PA, LNA ?</span></span><br><span class="line">CONFIG_EXT_PA :=y</span><br><span class="line">CONFIG_EXT_LNA :=y</span><br><span class="line"><span class="comment"># If not Use External PA, LNA ?</span></span><br><span class="line">CONFIG_EXT_PA :=n</span><br><span class="line">CONFIG_EXT_LNA :=n</span><br></pre></td></tr></table></figure><h2 id="驱动加载及测试"><a href="#驱动加载及测试" class="headerlink" title="驱动加载及测试"></a>驱动加载及测试</h2><h3 id="加载驱动"><a href="#加载驱动" class="headerlink" title="加载驱动"></a>加载驱动</h3><blockquote><p>insmod rtl8192es.ko</p></blockquote><h3 id="启动端口"><a href="#启动端口" class="headerlink" title="启动端口"></a>启动端口</h3><blockquote><p>ifconfig wlan0 up<br>搜索wifi，如果能正常搜索到，则说明驱动正常</p></blockquote><h3 id="ssid消失"><a href="#ssid消失" class="headerlink" title="ssid消失"></a>ssid消失</h3><blockquote><p>调试过程中出现ssid经常消失的情况，为外部PA配置问题，参照驱动编译中的PA配置即可</p></blockquote><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><blockquote><p>通过configuration-scripts中的脚本可以测试相关功能</p></blockquote><h3 id="编译到工程"><a href="#编译到工程" class="headerlink" title="编译到工程"></a>编译到工程</h3><blockquote><p>当wifi驱动 工作正常后可以将其添加到工程，添加方法如下：oe-core/meta-msm/recipes/images/mdm9607-image.inc 中添加 IMAGE_INSTALL += “rtl8192”</p></blockquote><h1 id="802-11"><a href="#802-11" class="headerlink" title="802.11"></a>802.11</h1><h2 id="相关概念"><a href="#相关概念" class="headerlink" title="相关概念"></a>相关概念</h2><blockquote><p>BSS:基本服务集,一个AP + client STAs<br>DSS:分布式系统服务<br>ESS:扩展服务集,多个共享ESSID的BSS<br>IBSS:独立BSS<br>ESSID :网络名称，同SSID<br>BA :块确认，对多个MPDU进行确认<br>MESH: 无线网格网络<br>ad-hoc: 点对点连接<br>CCA:clear channel assessment 空闲信道评估<br>OFDM:正交频分复用每个子载相互正交<br>802.11n使用OFDM，子载波间隔31.25k<br>QAM :正交振幅调制，Quadrature Amplitude Modulation的缩写<br>GI:    保护间隔<br>short GI: 400ns<br>long GI : 800ns<br>A-MPDU :MAC层PDU包聚合打包多个802.11帧到一个MPDU ,最大64KB<br>A-MSDU :MAC层SDU包聚合硬件实现，打包多个ethernet 帧到一个MSDU,最大8KB<br>当使用A-MPDU时，最大A-MSDU子帧不能大于4KB，因为每个A-MPDU子帧的最大长度是4KB</p></blockquote><h2 id="支持的速率"><a href="#支持的速率" class="headerlink" title="支持的速率"></a>支持的速率</h2><p>影响速率的因素：编码方式　调制方式　保护间隔 带宽</p><h3 id="802-11b"><a href="#802-11b" class="headerlink" title="802.11b"></a>802.11b</h3><blockquote><p>1, 2, 5.5, 11<br>(11Mchip/s) / 8chip * 8bit = 11Mbit/s</p></blockquote><h3 id="802-11g"><a href="#802-11g" class="headerlink" title="802.11g"></a>802.11g</h3><blockquote><p>6, 9, 12, 18, 24, 36, 48, 54<br>(1秒/4微秒）×（6bit×48×3/4）= 54Mbit/s</p></blockquote><h3 id="802-11n-20Mhz"><a href="#802-11n-20Mhz" class="headerlink" title="802.11n 20Mhz"></a>802.11n 20Mhz</h3><blockquote><p>400 ns GI : 7.2, 14.4, 21.7, 28.9, 43.3, 57.8, 65, 72.2<br>(1秒/3.6微秒）×（6bit×52×5/6）= 72.2Mbit/s<br>800 ns GI : 6.5, 13, 19.5, 26, 39, 52, 58.5, 65<br>(1秒/4微秒）×（6bit×52×5/6）= 65Mbit/s</p></blockquote><h3 id="802-11n-40MHz"><a href="#802-11n-40MHz" class="headerlink" title="802.11n 40MHz"></a>802.11n 40MHz</h3><blockquote><p>400 ns GI : 15, 30, 45, 60, 90, 120, 135, 150<br>(1秒/3.6微秒）×（6bit×108×5/6）= 150Mbit/s<br>800 ns GI : 13.5, 27, 40.5, 54, 81, 108, 121.5, 135<br>(1秒/4微秒）×（6bit×108×5/6）= 135Mbit/s</p></blockquote><h3 id="802-11n-MIMO"><a href="#802-11n-MIMO" class="headerlink" title="802.11n MIMO"></a>802.11n MIMO</h3><blockquote><p>1×1 支持MCS0 – MSC7    150Mbps<br>2×2 支持MCS0 – MSC15    300Mbps<br>3×3 支持MCS0 – MSC23    450Mbps<br>4×4 支持MCS0 – MSC31    600Mbps</p></blockquote><h3 id="802-ac"><a href="#802-ac" class="headerlink" title="802.ac"></a>802.ac</h3><blockquote><p>最高可达6.9Gbps</p></blockquote><h2 id="802-11包格式"><a href="#802-11包格式" class="headerlink" title="802.11包格式"></a>802.11包格式</h2><blockquote><p>PPDU   :   PLCP + PSDU<br>PLCP   : 　PLCP Preamble + PLCP Header<br>PSDU   :   MPDU or A-MPDU<br>MPDU   :   MAC Header + MSDU<br>PSDU最大长度65535字节<br>MSDU最大长度2304字节<br>A-MSDU最大长度7935字节</p></blockquote><h3 id="数据帧"><a href="#数据帧" class="headerlink" title="数据帧"></a>数据帧</h3><table><thead><tr><th>-Data</th></tr></thead><tbody><tr><td>-Data + CF-Ack</td></tr><tr><td>-Data + CF-Poll</td></tr><tr><td>-Data + CF-Ack + CF-Poll</td></tr></tbody></table><h3 id="控制帧"><a href="#控制帧" class="headerlink" title="控制帧"></a>控制帧</h3><table><thead><tr><th>-BAQ</th></tr></thead><tbody><tr><td>-BA</td></tr><tr><td>-RTS</td></tr><tr><td>-CTS</td></tr><tr><td>-ACK</td></tr><tr><td>-CF-End</td></tr><tr><td>-CF-End+CF-Ack</td></tr></tbody></table><h3 id="管理帧"><a href="#管理帧" class="headerlink" title="管理帧"></a>管理帧</h3><table><thead><tr><th>-Beacon</th></tr></thead><tbody><tr><td>-Probe request</td></tr><tr><td>-Probe response</td></tr><tr><td>-Authentication</td></tr><tr><td>-Association Request</td></tr><tr><td>-Association Response</td></tr><tr><td>-ReassociationRequest</td></tr><tr><td>-ReassociationResponse</td></tr><tr><td>-Disassociation</td></tr><tr><td>-Deauthentication</td></tr><tr><td>-ATIM</td></tr></tbody></table><h2 id="AP-接入过程"><a href="#AP-接入过程" class="headerlink" title="AP 接入过程"></a>AP 接入过程</h2><table><thead><tr><th style="text-align:center">STA</th><th style="text-align:center">传输方向</th><th style="text-align:center">AP</th></tr></thead><tbody><tr><td style="text-align:center"></td><td style="text-align:center">&lt;</td><td style="text-align:center">Beacon</td></tr><tr><td style="text-align:center">Probe request</td><td style="text-align:center">&gt;</td><td style="text-align:center"></td></tr><tr><td style="text-align:center"></td><td style="text-align:center">&lt;</td><td style="text-align:center">Probe Response</td></tr><tr><td style="text-align:center">Auth Request</td><td style="text-align:center">&gt;</td><td style="text-align:center"></td></tr><tr><td style="text-align:center"></td><td style="text-align:center">&lt;</td><td style="text-align:center">Authentication Response</td></tr><tr><td style="text-align:center">Association  Request</td><td style="text-align:center">&gt;</td><td style="text-align:center"></td></tr><tr><td style="text-align:center"></td><td style="text-align:center">&lt;</td><td style="text-align:center">Association Response</td></tr><tr><td style="text-align:center">Data</td><td style="text-align:center">&gt;</td><td style="text-align:center"></td></tr><tr><td style="text-align:center"></td><td style="text-align:center">&lt;</td><td style="text-align:center">Data</td></tr><tr><td style="text-align:center">…</td><td style="text-align:center">&gt;&lt;</td><td style="text-align:center">…</td></tr></tbody></table><h1 id="SFE"><a href="#SFE" class="headerlink" title="SFE"></a>SFE</h1><h2 id="sfe-介绍"><a href="#sfe-介绍" class="headerlink" title="sfe 介绍"></a>sfe 介绍</h2><p>全称：Shortcut Forward Engine，快捷转发引擎<br>用于加速LAN和WAN端口之间的数据转发，当以太网包匹配到一个SFE实体时，<br>将不会进行Linux kernel网络栈的路由而直接发送，从而减少CPU的使用</p><h2 id="sfe包聚合功能"><a href="#sfe包聚合功能" class="headerlink" title="sfe包聚合功能　"></a>sfe包聚合功能　</h2><p>sfe的在接收到的包数量达到一定的阈值或定时器超时时才会进行数据包的发送<br>相关代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(aggr_params[cm-&gt;index].skb_head)</span><br><span class="line">dev_queue_xmit_list(aggr_params[cm-&gt;index].skb_head);</span><br><span class="line">elsLibreOffice Writer，在窗口右e</span><br><span class="line">dev_queue_xmit(new_skb);</span><br><span class="line"><span class="comment">/* Reset the params. */</span></span><br><span class="line">aggr_params[cm-&gt;index].curr_dl_skb_num = <span class="number">0</span>;</span><br><span class="line">aggr_params[cm-&gt;index].skb_head = <span class="literal">NULL</span>;</span><br><span class="line">aggr_params[cm-&gt;index].skb_tail = <span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure><blockquote><p>当包数量大于一个时会调用dev_queue_xmit_list，当包数量为１时，会调用<br>dev_queue_xmit,dev_queue_xmit_list发送整条以太网帧数据链表，需要特殊的驱动支持。</p></blockquote><h2 id="关闭sfe的包聚合功能"><a href="#关闭sfe的包聚合功能" class="headerlink" title="关闭sfe的包聚合功能"></a>关闭sfe的包聚合功能</h2><blockquote><p>echo 1 &gt; /proc/sys/debug/sfe/threshold<br>echo 10000 &gt; /proc/sys/debug/sfe/timeout_value</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 网络驱动 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wifi </tag>
            
            <tag> linux device driver </tag>
            
            <tag> rtl8192 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>The New World</title>
      <link href="/2019/05/08/hello-world/"/>
      <url>/2019/05/08/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to my blog! This is my first personal blog.</p><h2 id="The-New-World"><a href="#The-New-World" class="headerlink" title="The New World"></a>The New World</h2><h3 id="职业生涯"><a href="#职业生涯" class="headerlink" title="职业生涯"></a>职业生涯</h3><blockquote><p>我从事linux驱动开发已经一年时间，之前也搭建过一个博客写了一些工作以及学习上的事，但是后来也不了了之，没能坚持的下去<br>现在我已经提了离职，准备去一个新公司开始新的生涯，所以准备这次重新开始，记录我的职业生涯</p></blockquote><h3 id="人生"><a href="#人生" class="headerlink" title="人生"></a>人生</h3><blockquote><p>我2019/5/2有了我一件人生大事，我买房了，在南通。尽管贷款了151W,还贷30年,每月要还8200+，但是还是很开心。<br>感觉我的人生踏入了一个新的阶段。以后的以后，请一定要加油！！！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 生活点滴 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
